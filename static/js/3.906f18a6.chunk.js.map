{"version":3,"sources":["../node_modules/d3-shape/src/curve/monotone.js","../node_modules/lodash/minBy.js","../node_modules/lodash/_baseLt.js","../node_modules/lodash/mapValues.js","../node_modules/lodash/take.js","visualizations/Trama2/utils.js","visualizations/Trama2/GradientsDefinitions.js","visualizations/Trama2/LineeTrama.js","visualizations/Trama2/BoxPlotGradientsDefinitions.js","visualizations/Trama2/BoxPlot.js","visualizations/Trama2/TramaDetail.js","visualizations/Trama2/SideBar.js","visualizations/Trama2/Trama2Content.js","visualizations/Trama2/Trama2Main.js"],"names":["sign","x","slope3","that","x2","y2","h0","_x1","_x0","h1","s0","_y1","_y0","s1","p","Math","min","abs","slope2","t","h","point","t0","t1","x0","y0","x1","y1","dx","_context","bezierCurveTo","MonotoneX","context","this","MonotoneY","ReflectContext","monotoneX","prototype","areaStart","_line","areaEnd","NaN","lineStart","_t0","_point","lineEnd","lineTo","closePath","y","moveTo","Object","create","call","baseExtremum","require","baseIteratee","baseLt","module","exports","array","iteratee","length","undefined","value","other","baseAssignValue","baseForOwn","object","result","key","baseSlice","toInteger","n","guard","MOTIVO_LINE_HEIGHT","motivoExtent","extent","ordineColore","item","makeScalaMotivoY","lineHeight","scaleLinear","domain","range","splitPath","d","pieces","split","reduce","acc","i","path","push","reverse","a","b","React","memo","prefix","gradientsType","byTipologia","map","gradientType","tipoFromName","tipoToName","tipoFrom","tipoTo","id","offset","stopColor","colore","colori","lineGenerator","line","curve","curveMonotoneX","RaccontoInfoBox","titolo","onClick","containerRef","useRef","useState","measures","setMeasures","useLayoutEffect","m","current","getBoundingClientRect","transform","style","cursor","width","height","rx","className","stroke","ref","textAnchor","userSelect","LineaTrama","racconto","data","xScale","index","itemSelected","gradient","toggleItem","onRaccontoClick","useMemo","subPaths","handleClickRacconto","useCallback","e","element","subPath","strokeSelected","motivo_type","fill","transformOrigin","cx","cy","r","anno","ReactDOM","createPortal","document","getElementsByClassName","SelectedContainers","translations","forwardRef","racconti","scalaColore","scalaMotivoY","selected","colors","toggleSelect","tipologieByTipologia","tipologie","setYears","svgRef","useEffect","imperativeTranslate","currentScaleY","selectAll","attr","svg","scaleY","selection","select","zoom","scaleExtent","translateExtent","on","newScaleY","currentEvent","rescaleY","lowIndex","max","floor","hiIndex","prevYears","newYears","gradientsSet","Set","out","filter","add","originalX","Array","from","dataRacconti","useImperativeHandle","rotateView","cb","overflow","GradientsDefinitions","datum","scalaMotivo","colorsItems","values","sort","ordineMotivo","delta","motivi","uniqueItems","gradientUnits","indexOf","tipologia","BoxPlotElement","zoomFactor","yScale","top","widthBar","fillOpacity","first","last","setZoomFactor","currentScaleX","scaleX","newScaleX","rescaleX","round","k","unstable_batchedUpdates","dataForRacconto","head","_last","uniqBy","minBy","maxBy","years","BoxPlotGradientsDefinitions","CHART_X_PADDING","TramaDetail","onBack","detailHeight","newData","fullData","SideBar","bounds","addBound","setBounds","boundsByKey","keyBy","itemHeight","lookupMap","looks","minDatum","maxDatum","lookup","background","Trama2Content","byRacconto","setSelected","sidePanelOpen","setSidePanelOpen","toggleSidePanel","concat","orderedBounds","sortBy","bound","indexes","indenx","sel","keys","some","fromBounds","listRef","currentView","setCurrentView","currentTramaDetail","setCurrentTramaDetail","position","borderTop","bottom","borderBottom","display","ordineByCluster","coloriPosizioni","get","ordine","clusterByMotivo","mapValues","mappaMotivoTipologia","ordineMotivoByMotivo","datasetLinesNormalized","datasetLines","tot","motivo","cluster","coloreCluster","ordineCluster","startMotivoNorm","start_motivo","endMotivoNorm","end_motivo","groupBy","mese","toFixed","makeVizData","searchOptions","label","cercaOptions","Trama2Main","title","helpSidePanelOpen","setHelpSidePanelOpen","ricerca","setRicerca","toggleHelpSidePanel","helpPage","GlobalData","helpPages","plot","main","newRicerca","clearedBounds","HelpSidePanel","open","page","closeButtonClicked","MainMenu","gridColumn","PageTitle","AltOptions","options","disabled","onChange","SearchDropDown","changeOptions","newOptions","selectedOptions","MoreInfo","onClicked","CompassButton","color","backgroundColor"],"mappings":"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","file":"static/js/3.906f18a6.chunk.js","sourcesContent":["function sign(x) {\n  return x < 0 ? -1 : 1;\n}\n\n// Calculate the slopes of the tangents (Hermite-type interpolation) based on\n// the following paper: Steffen, M. 1990. A Simple Method for Monotonic\n// Interpolation in One Dimension. Astronomy and Astrophysics, Vol. 239, NO.\n// NOV(II), P. 443, 1990.\nfunction slope3(that, x2, y2) {\n  var h0 = that._x1 - that._x0,\n      h1 = x2 - that._x1,\n      s0 = (that._y1 - that._y0) / (h0 || h1 < 0 && -0),\n      s1 = (y2 - that._y1) / (h1 || h0 < 0 && -0),\n      p = (s0 * h1 + s1 * h0) / (h0 + h1);\n  return (sign(s0) + sign(s1)) * Math.min(Math.abs(s0), Math.abs(s1), 0.5 * Math.abs(p)) || 0;\n}\n\n// Calculate a one-sided slope.\nfunction slope2(that, t) {\n  var h = that._x1 - that._x0;\n  return h ? (3 * (that._y1 - that._y0) / h - t) / 2 : t;\n}\n\n// According to https://en.wikipedia.org/wiki/Cubic_Hermite_spline#Representations\n// \"you can express cubic Hermite interpolation in terms of cubic Bézier curves\n// with respect to the four values p0, p0 + m0 / 3, p1 - m1 / 3, p1\".\nfunction point(that, t0, t1) {\n  var x0 = that._x0,\n      y0 = that._y0,\n      x1 = that._x1,\n      y1 = that._y1,\n      dx = (x1 - x0) / 3;\n  that._context.bezierCurveTo(x0 + dx, y0 + dx * t0, x1 - dx, y1 - dx * t1, x1, y1);\n}\n\nfunction MonotoneX(context) {\n  this._context = context;\n}\n\nMonotoneX.prototype = {\n  areaStart: function() {\n    this._line = 0;\n  },\n  areaEnd: function() {\n    this._line = NaN;\n  },\n  lineStart: function() {\n    this._x0 = this._x1 =\n    this._y0 = this._y1 =\n    this._t0 = NaN;\n    this._point = 0;\n  },\n  lineEnd: function() {\n    switch (this._point) {\n      case 2: this._context.lineTo(this._x1, this._y1); break;\n      case 3: point(this, this._t0, slope2(this, this._t0)); break;\n    }\n    if (this._line || (this._line !== 0 && this._point === 1)) this._context.closePath();\n    this._line = 1 - this._line;\n  },\n  point: function(x, y) {\n    var t1 = NaN;\n\n    x = +x, y = +y;\n    if (x === this._x1 && y === this._y1) return; // Ignore coincident points.\n    switch (this._point) {\n      case 0: this._point = 1; this._line ? this._context.lineTo(x, y) : this._context.moveTo(x, y); break;\n      case 1: this._point = 2; break;\n      case 2: this._point = 3; point(this, slope2(this, t1 = slope3(this, x, y)), t1); break;\n      default: point(this, this._t0, t1 = slope3(this, x, y)); break;\n    }\n\n    this._x0 = this._x1, this._x1 = x;\n    this._y0 = this._y1, this._y1 = y;\n    this._t0 = t1;\n  }\n}\n\nfunction MonotoneY(context) {\n  this._context = new ReflectContext(context);\n}\n\n(MonotoneY.prototype = Object.create(MonotoneX.prototype)).point = function(x, y) {\n  MonotoneX.prototype.point.call(this, y, x);\n};\n\nfunction ReflectContext(context) {\n  this._context = context;\n}\n\nReflectContext.prototype = {\n  moveTo: function(x, y) { this._context.moveTo(y, x); },\n  closePath: function() { this._context.closePath(); },\n  lineTo: function(x, y) { this._context.lineTo(y, x); },\n  bezierCurveTo: function(x1, y1, x2, y2, x, y) { this._context.bezierCurveTo(y1, x1, y2, x2, y, x); }\n};\n\nexport function monotoneX(context) {\n  return new MonotoneX(context);\n}\n\nexport function monotoneY(context) {\n  return new MonotoneY(context);\n}\n","var baseExtremum = require('./_baseExtremum'),\n    baseIteratee = require('./_baseIteratee'),\n    baseLt = require('./_baseLt');\n\n/**\n * This method is like `_.min` except that it accepts `iteratee` which is\n * invoked for each element in `array` to generate the criterion by which\n * the value is ranked. The iteratee is invoked with one argument: (value).\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Math\n * @param {Array} array The array to iterate over.\n * @param {Function} [iteratee=_.identity] The iteratee invoked per element.\n * @returns {*} Returns the minimum value.\n * @example\n *\n * var objects = [{ 'n': 1 }, { 'n': 2 }];\n *\n * _.minBy(objects, function(o) { return o.n; });\n * // => { 'n': 1 }\n *\n * // The `_.property` iteratee shorthand.\n * _.minBy(objects, 'n');\n * // => { 'n': 1 }\n */\nfunction minBy(array, iteratee) {\n  return (array && array.length)\n    ? baseExtremum(array, baseIteratee(iteratee, 2), baseLt)\n    : undefined;\n}\n\nmodule.exports = minBy;\n","/**\n * The base implementation of `_.lt` which doesn't coerce arguments.\n *\n * @private\n * @param {*} value The value to compare.\n * @param {*} other The other value to compare.\n * @returns {boolean} Returns `true` if `value` is less than `other`,\n *  else `false`.\n */\nfunction baseLt(value, other) {\n  return value < other;\n}\n\nmodule.exports = baseLt;\n","var baseAssignValue = require('./_baseAssignValue'),\n    baseForOwn = require('./_baseForOwn'),\n    baseIteratee = require('./_baseIteratee');\n\n/**\n * Creates an object with the same keys as `object` and values generated\n * by running each own enumerable string keyed property of `object` thru\n * `iteratee`. The iteratee is invoked with three arguments:\n * (value, key, object).\n *\n * @static\n * @memberOf _\n * @since 2.4.0\n * @category Object\n * @param {Object} object The object to iterate over.\n * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n * @returns {Object} Returns the new mapped object.\n * @see _.mapKeys\n * @example\n *\n * var users = {\n *   'fred':    { 'user': 'fred',    'age': 40 },\n *   'pebbles': { 'user': 'pebbles', 'age': 1 }\n * };\n *\n * _.mapValues(users, function(o) { return o.age; });\n * // => { 'fred': 40, 'pebbles': 1 } (iteration order is not guaranteed)\n *\n * // The `_.property` iteratee shorthand.\n * _.mapValues(users, 'age');\n * // => { 'fred': 40, 'pebbles': 1 } (iteration order is not guaranteed)\n */\nfunction mapValues(object, iteratee) {\n  var result = {};\n  iteratee = baseIteratee(iteratee, 3);\n\n  baseForOwn(object, function(value, key, object) {\n    baseAssignValue(result, key, iteratee(value, key, object));\n  });\n  return result;\n}\n\nmodule.exports = mapValues;\n","var baseSlice = require('./_baseSlice'),\n    toInteger = require('./toInteger');\n\n/**\n * Creates a slice of `array` with `n` elements taken from the beginning.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Array\n * @param {Array} array The array to query.\n * @param {number} [n=1] The number of elements to take.\n * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n * @returns {Array} Returns the slice of `array`.\n * @example\n *\n * _.take([1, 2, 3]);\n * // => [1]\n *\n * _.take([1, 2, 3], 2);\n * // => [1, 2]\n *\n * _.take([1, 2, 3], 5);\n * // => [1, 2, 3]\n *\n * _.take([1, 2, 3], 0);\n * // => []\n */\nfunction take(array, n, guard) {\n  if (!(array && array.length)) {\n    return [];\n  }\n  n = (guard || n === undefined) ? 1 : toInteger(n);\n  return baseSlice(array, 0, n < 0 ? 0 : n);\n}\n\nmodule.exports = take;\n","//visual helpers\nimport { scaleLinear } from 'd3-scale'\nimport { extent } from 'd3-array'\n\n//data management\nimport groupBy from 'lodash/groupBy'\nimport keyBy from 'lodash/keyBy'\nimport sortBy from 'lodash/sortBy'\nimport uniqBy from 'lodash/uniqBy'\nimport minBy from 'lodash/minBy'\nimport maxBy from 'lodash/maxBy'\nimport mapValues from 'lodash/mapValues'\nimport get from 'lodash/get'\nimport take from 'lodash/take'\nimport sum from 'lodash/sum'\nimport flatten from 'lodash/flatten'\n\nimport datasetLines from './dati/dataset_lines.json'\nimport mappaMotivoTipologia from './dati/mappa_motivo_tipologia.json'\nimport coloriPosizioni from './dati/colori_posizioni.json'\nimport ordineColore from './dati/ordine_colore_y.json'\n\n\nexport const MOTIVO_LINE_HEIGHT = 50;\n\n\n\nexport const motivoExtent = extent(ordineColore, (item) => +item['ordine tipologia'])\n\nexport function makeScalaMotivoY(lineHeight) {\n\n  return scaleLinear().domain(motivoExtent).range([lineHeight, 0])\n}\n\nexport function makeVizData(scaleY) {\n  const ordineByCluster = keyBy(coloriPosizioni, 'valore')\n  const tipologie = ordineColore.map((item) => ({\n    ...item,\n    colore: get(ordineByCluster, item['cluster tipologia']),\n  }))\n  const colors = sortBy(tipologie, (item) => item.colore.ordine).map(\n    (x) => x.colore.colori\n  )\n  const tipologieByTipologia = keyBy(tipologie, (item) => item.tipologia)\n\n  const clusterByMotivo = mapValues(\n    keyBy(mappaMotivoTipologia, 'motivo_type'),\n    (item) => item['cluster tipologie']\n  )\n  const ordineMotivoByMotivo = mapValues(\n    keyBy(ordineColore, 'tipologia'),\n    (item) => +item['ordine tipologia']\n  )\n\n\n// // we must filter items with no scale associated and renormalize data\n// const datasetTmp = datasetLines.filter(item => {\n//   const motivo = item['motivo_type']\n//   return !!get(ordineMotivoByMotivo, motivo)\n// }).map(item => {\n//   const numCaratteri = +item['end_motivo'] -item['start_motivo'] + 1\n//   return {...item, numCaratteri}\n// })\n\n// function normalizeCharters(data) {\n//   let shift = []\n//   let lenHoles = data.reduce((acc, item, i) => {\n//     const motivo = item['motivo_type']\n//     const ordineMotivo = !!get(ordineMotivoByMotivo, motivo)\n//     if (ordineMotivo) {\n//       shift.push({\n//         ...item,\n//         start_motivo: item.start_motivo - acc,\n//         end_motivo: item.end_motivo - acc,\n//       })\n//       return acc\n//     } else {\n//       acc += item.end_motivo - item.start_motivo + 1\n//       return acc\n//     }\n//   }, 0)\n//   // console.log('BEFORE', lenHoles, shift)\n//   lenHoles += ((+shift[0].end_motivo) - shift[0].start_motivo) / 2\n//   lenHoles += ((+shift[shift.length - 1].end_motivo) - shift[shift.length - 1].start_motivo) / 2\n//   console.log('After', lenHoles)\n\n\n//   return shift.map(item => ({\n//     ...item,\n//     'tot caratteri': (+item['tot caratteri']) - lenHoles\n//   }))\n// }\n\n// let datasetTmpByRacconto = groupBy(datasetLines, 'titolo racconto')\n// datasetTmpByRacconto = mapValues(datasetTmpByRacconto, normalizeCharters)\n// const finalDataSet = flatten(Object.values(datasetTmpByRacconto))\n\n// console.log(finalDataSet)\n// const titoli = Object.keys(datasetTmpByRacconto)\n// datasetTmpByRacconto = titoli.reduce((acc, item) => {\n\n//   const data = datasetTmpByRacconto[item]\n//   const len = sum(data.map(item => item.numCaratteri))\n//   acc[item] = len\n//   return acc\n\n// }, {})\n\n\n// const finalDataset = datasetTmp.map(item => ({...item, len:lunghezze[item['titolo racconto']]  }))\n\n\n\n\n  const datasetLinesNormalized = datasetLines.map((item) => {\n    const tot = +item['tot caratteri']\n    const motivo = item['motivo_type']\n    const cluster = get(clusterByMotivo, motivo)\n    const coloreCluster = get(ordineByCluster, `[${cluster}].colori`)\n    const ordineCluster = get(ordineByCluster, `[${cluster}].ordine`)\n    const ordineMotivo = get(ordineMotivoByMotivo, motivo)\n\n    const startMotivoNorm = +item.start_motivo / tot\n    const endMotivoNorm = +item.end_motivo / tot\n    const y =\n      ordineMotivo !== undefined ? scaleY(ordineMotivo) : undefined\n    const x = (startMotivoNorm + endMotivoNorm) / 2\n\n    return {\n      ...item,\n      startMotivoNorm,\n      endMotivoNorm,\n      cluster,\n      coloreCluster,\n      ordineCluster: ordineCluster ? +ordineCluster : undefined,\n      ordineMotivo,\n      y,\n      x,\n    }\n  })\n\n  const byRacconto = groupBy(datasetLinesNormalized, 'titolo racconto')\n\n  let racconti = sortBy(\n    uniqBy(datasetLines, (item) => item['titolo racconto']).map((item) => ({\n      titolo: item['titolo racconto'],\n      anno: item['anno'],\n      mese: item['mese'],\n    })),\n    (item) => {\n      const anno = +item.anno\n      const mese = +item.mese\n\n      return `${anno.toFixed(4)}${mese.toFixed(2)}`\n    }\n  )\n  // //#TODO: remove this (limiting for debug)\n  // racconti = take(racconti, 5)\n  //pre-computing filters\n  racconti = racconti.map((racconto) => {\n    const minDatum = minBy(\n      byRacconto[racconto.titolo],\n      (item) => item.ordineMotivo\n    )\n    const maxDatum = maxBy(\n      byRacconto[racconto.titolo],\n      (item) => item.ordineMotivo\n    )\n    // console.log(123, racconto.titolo, minDatum, maxDatum)\n    return { ...racconto, minDatum, maxDatum }\n  })\n\n  return {\n    tipologie,\n    tipologieByTipologia,\n    colors,\n    racconti,\n    byRacconto,\n  }\n}\n\nexport const splitPath = (d) => {\n  const pieces = d.split('C')\n  const paths = pieces.reduce((acc, item, i) => {\n    if (i === 0) {\n      return acc\n    }\n    if (i === 1) {\n      const path = pieces[0] + 'C' + pieces[i]\n      acc.push(path)\n    } else {\n      const [a, b] = pieces[i - 1].split(',').reverse()\n      const path = `M${b},${a}C${pieces[i]}`\n      acc.push(path)\n    }\n\n    return acc\n  }, [])\n\n  return paths\n}","import React from 'react'\n\nfunction GrandientsDefinitions({ prefix = '', gradientsType, byTipologia }) {\n  return (\n    <defs>\n      {gradientsType.map((gradientType) => {\n        const [tipoFromName, tipoToName] = gradientType.split('-')\n        const tipoFrom = byTipologia[tipoFromName]\n        const tipoTo = byTipologia[tipoToName]\n        return (\n          <linearGradient\n            x1=\"0\"\n            x2=\"0\"\n            y1=\"0\"\n            y2=\"1\"\n            key={gradientType}\n            id={prefix + gradientType}\n          >\n            {+tipoFrom['ordine tipologia'] > +tipoTo['ordine tipologia'] && (\n              <>\n                <stop offset=\"0%\" stopColor={tipoFrom.colore.colori}></stop>\n                <stop offset=\"100%\" stopColor={tipoTo.colore.colori}></stop>\n              </>\n            )}\n            {+tipoFrom['ordine tipologia'] < +tipoTo['ordine tipologia'] && (\n              <>\n                <stop offset=\"0%\" stopColor={tipoTo.colore.colori}></stop>\n                <stop offset=\"100%\" stopColor={tipoFrom.colore.colori}></stop>\n              </>\n            )}\n          </linearGradient>\n        )\n      })}\n    </defs>\n  )\n}\n\nexport default React.memo(GrandientsDefinitions)\n","import ReactDOM from 'react-dom'\nimport React, {\n  useRef,\n  useState,\n  useMemo,\n  useCallback,\n  useEffect,\n  useLayoutEffect,\n  useImperativeHandle,\n  forwardRef,\n} from 'react'\nimport { line, curveMonotoneX } from 'd3-shape'\nimport { scaleLinear } from 'd3-scale'\nimport { zoom } from 'd3-zoom'\nimport { select, selectAll, event as currentEvent } from 'd3-selection'\n\nimport range from 'lodash/range'\nimport keyBy from 'lodash/keyBy'\n\nimport { splitPath } from './utils'\nimport GradientsDefinitions from './GradientsDefinitions'\n\nconst lineGenerator = line()\n  .x((d) => d.x)\n  .y((d) => d.y)\n  .curve(curveMonotoneX)\n\nconst RaccontoInfoBox = ({ titolo, x, y = 0, onClick }) => {\n  const containerRef = useRef(null)\n  const [measures, setMeasures] = useState(null)\n  useLayoutEffect(() => {\n    const m = containerRef.current.getBoundingClientRect()\n    setMeasures(m)\n  }, [titolo])\n\n  return (\n    <g\n      onClick={onClick}\n      transform={`translate(${x}, ${y})`}\n      style={{ cursor: 'pointer' }}\n    >\n      {measures && (\n        <g transform={`translate(${-measures.width - 40}, -15)`}>\n          <rect\n            height={22}\n            width={measures.width + 35}\n            rx={5}\n            className=\"trama2-info-box\"\n          />\n          <line\n            x1={measures.width + 18}\n            x2={measures.width + 18}\n            y1={0}\n            y2={22}\n            className=\"trama2-info-box\"\n          />\n          <text stroke={'var(--dark-blue)'} x={measures.width + 22} y={15}>\n            o\n          </text>\n        </g>\n      )}\n      <text\n        ref={containerRef}\n        x={-30}\n        y={0}\n        style={{ textAnchor: 'end', userSelect: 'none' }}\n      >\n        {titolo}\n      </text>\n    </g>\n  )\n}\n\nconst LineaTrama = React.memo(\n  ({\n    racconto,\n    data,\n    xScale,\n    width,\n    height,\n    index,\n    gradient,\n    itemSelected,\n    toggleItem,\n    onRaccontoClick,\n  }) => {\n    const [d, subPaths] = useMemo(() => {\n      const d = lineGenerator(data)\n      const subPaths = splitPath(d)\n      return [d, subPaths]\n    }, [data])\n\n    const handleClickRacconto = useCallback(\n      (e) => {\n        onRaccontoClick(data, e)\n      },\n      [onRaccontoClick, data]\n    )\n\n    const element = (\n      <g>\n        {subPaths.map((subPath, i) => {\n          const isFill = data[i + 1].motivo_type === data[i].motivo_type\n          const strokeSelected = isFill\n            ? data[i].colori\n            : `url('#${data[i + 1].motivo_type}-${data[i].motivo_type}')`\n          return (\n            <path\n              key={i}\n              d={subPath}\n              className=\"trama2-line\"\n              style={{\n                stroke: itemSelected ? strokeSelected : '#ddd',\n                fill: 'none',\n              }}\n            ></path>\n          )\n        })}\n\n        <path\n          d={d}\n          onClick={() => toggleItem(racconto.titolo)}\n          className={`trama2-pointer ${itemSelected ? 'selected' : ''}`}\n        ></path>\n\n        {itemSelected && (\n          <g>\n            {data.map((d, i) => {\n              if (i === 0) {\n                return (\n                  <rect\n                    x={d.x}\n                    y={d.y}\n                    key={i}\n                    className=\"trama2-start-symbol\"\n                  >\n                    <title>{d.motivo_type}</title>\n                  </rect>\n                )\n              }\n              if (i === data.length - 1) {\n                return (\n                  <rect\n                    x={d.x}\n                    y={d.y}\n                    key={i}\n                    style={{\n                      transformOrigin: `${d.x - 2}px ${d.y - 2}px`\n                    }}\n                    className=\"trama2-end-symbol\"\n                  >\n                    <title>{d.motivo_type}</title>\n                  </rect>\n                )\n              }\n              return (\n                <circle\n                  key={i}\n                  className=\"trama2-circle\"\n                  cx={d.x}\n                  cy={d.y}\n                  r={2}\n                >\n                  <title>{d.motivo_type}</title>\n                </circle>\n              )\n            })}\n            <RaccontoInfoBox\n              onClick={handleClickRacconto}\n              y={-10}\n              x={width}\n              titolo={`${data.racconto.titolo}, ${data.racconto.anno}`}\n            />\n          </g>\n        )}\n      </g>\n    )\n    if (itemSelected) {\n      return ReactDOM.createPortal(\n        element,\n        document.getElementsByClassName('linea-container-selected')[index]\n      )\n    }\n    return element\n  }\n)\n\nconst SelectedContainers = React.memo(({ n, translations }) => {\n  return (\n    <g>\n      {range(n).map((i) => (\n        <g\n          key={i}\n          className=\"linea-container-selected\"\n          style={{\n            transform: translations[i],\n          }}\n        />\n      ))}\n    </g>\n  )\n})\n\nfunction LineeTrama(\n  {\n    racconti = [],\n    data = {},\n    height,\n    scalaColore,\n    scalaMotivoY,\n    colors,\n    selected,\n    toggleSelect,\n    onRaccontoClick,\n    tipologie,\n    tipologieByTipologia,\n    setYears,\n  },\n  ref\n) {\n  const containerRef = useRef(null)\n  const svgRef = useRef(null)\n  const [measures, setMeasures] = useState(null)\n  const [translations, setTranslations] = useState([])\n\n  useLayoutEffect(() => {\n    const m = containerRef.current.getBoundingClientRect()\n    setMeasures(m)\n  }, [])\n\n  useEffect(() => {\n    function declarativeTranslate(currentScaleY) {\n      const newTranslates = racconti.map((r, i) => {\n        return 'translate(0, ' + currentScaleY(i) + 'px)'\n      })\n      setTranslations(newTranslates)\n    }\n\n    function imperativeTranslate(currentScaleY) {\n      selectAll('.linea-container').attr(\n        'transform',\n        (d, i) => 'translate(0, ' + currentScaleY(i) + ')'\n      )\n      selectAll('.linea-container-selected').attr(\n        'transform',\n        (d, i) => 'translate(0, ' + currentScaleY(i) + ')'\n      )\n    }\n\n    if (measures) {\n      const svg = svgRef.current\n      const scaleY = scaleLinear()\n        .domain([0, racconti.length])\n        .range([0 + height, measures.height - height])\n\n      imperativeTranslate(scaleY)\n      // declarativeTranslate(scaleY)\n\n      function handleZoom() {\n        const newScaleY = currentEvent.transform.rescaleY(scaleY)\n        imperativeTranslate(newScaleY)\n        // declarativeTranslate(newScaleY)\n\n        const domain = newScaleY.domain()\n        const lowIndex = Math.max(0, Math.floor(domain[0]))\n        const hiIndex = Math.min(racconti.length - 1, Math.floor(domain[1]))\n\n        setYears(prevYears => {\n          const newYears = [racconti[lowIndex].anno, racconti[hiIndex].anno]\n          if (newYears[0] !== prevYears[0] || newYears[1] !== prevYears[1]) {\n            return newYears\n          }\n          return prevYears\n        })\n      }\n\n      const selection = select(svg)\n      selection.call(\n        zoom()\n          .scaleExtent([1, 10])\n          .translateExtent([\n            [0, 0],\n            [measures.width, measures.height],\n          ])\n          .on('zoom', handleZoom)\n      )\n      return () => {\n        selection.on('.zoom', null)\n      }\n    }\n  }, [height, measures, racconti, setYears])\n\n  const xScale = useMemo(() => {\n    if (!measures) {\n      return null\n    }\n    return scaleLinear().domain([0, 1]).range([0, measures.width])\n  }, [measures])\n\n  const [dataRacconti, gradientsType] = useMemo(() => {\n    if (!xScale) {\n      return [[], []]\n    }\n    const gradientsSet = new Set()\n    const finalDataRacconti = racconti.map((racconto) => {\n      let out = data[racconto.titolo].filter((d) => d.y !== undefined)\n      out = out.map((d, i) => {\n        if (i > 0) {\n          gradientsSet.add(d.motivo_type + '-' + out[i - 1].motivo_type)\n        }\n        return {\n          ...d,\n          colori: tipologieByTipologia[d.motivo_type].colore.colori,\n          originalX: d.x,\n          x: xScale(d.x),\n          y: d.y,\n        }\n      })\n      out.racconto = racconto\n      return out\n    })\n    return [finalDataRacconti, Array.from(gradientsSet)]\n  }, [data, racconti, xScale, tipologieByTipologia])\n\n  useImperativeHandle(ref, () => ({\n    rotateView: (cb) => {\n      cb()\n      // const scaleY = scaleLinear()\n      //   .domain([0, racconti.length])\n      //   .range([0 + height, measures.height - height])\n\n      // const mainTransition = selectAll('.linea-container')\n      //   .transition()\n      //   .duration(1000)\n      //   .attr('transform', (d, i) => 'translate(0, ' + scaleY(i) + ')')\n      //   .end()\n\n      // const selectedTransition = selectAll('.linea-container-selected')\n      //   .transition()\n      //   .duration(1000)\n      //   .attr('transform', (d, i) => 'translate(0, ' + scaleY(i) + ')')\n      //   .end()\n\n      // Promise.all([mainTransition, selectedTransition]).then(cb)\n    },\n  }))\n\n  return (\n    <div\n      ref={containerRef}\n      className=\"w-100 h-100\"\n      style={{ overflow: 'hidden' }}\n    >\n      {measures && (\n        <svg\n          style={{\n            height: measures.height,\n            width: measures.width,\n          }}\n          ref={svgRef}\n        >\n          <GradientsDefinitions\n            byTipologia={tipologieByTipologia}\n            gradientsType={gradientsType}\n          />\n          <g className=\"wrapper\">\n            {measures &&\n              dataRacconti.map((datum, i) => {\n                return (\n                  <g\n                    key={i}\n                    className=\"linea-container\"\n                    style={{\n                      transform: translations[i],\n                    }}\n                  >\n                    <LineaTrama\n                      onRaccontoClick={onRaccontoClick}\n                      scalaColore={scalaColore}\n                      scalaMotivoY={scalaMotivoY}\n                      index={i}\n                      width={measures.width}\n                      height={height}\n                      itemSelected={selected[racconti[i].titolo]}\n                      toggleItem={toggleSelect}\n                      xScale={xScale}\n                      racconto={racconti[i]}\n                      data={datum}\n                    ></LineaTrama>\n                  </g>\n                )\n              })}\n            <SelectedContainers\n              n={dataRacconti.length}\n              translations={translations}\n            />\n          </g>\n        </svg>\n      )}\n    </div>\n  )\n}\n\nexport default React.memo(forwardRef(LineeTrama))\n","import React from 'react'\n\nfunction BoxPlotGrandientsDefinitions({ prefix = '', gradientsType, byTipologia, scalaMotivo, height }) {\n  \n  const colorsItems = Object.values(byTipologia).sort(item => +item.ordineMotivo)\n  const delta = 100 / (colorsItems.length - 1)\n\n  return (\n    <defs>\n      {gradientsType.map(({racconto, uniqueItems}) => {\n        \n        \n        \n        \n        const motivi = uniqueItems.map(item => item.motivo_type)\n\n      \n        return (\n          <linearGradient\n            x1=\"0\"\n            x2=\"0\"\n            y1=\"0\"\n            y2={height}\n            key={racconto.titolo}\n            id={prefix + racconto.titolo}\n            gradientUnits={'userSpaceOnUse'}\n          >\n            {colorsItems.map((item, i) => {\n              if(motivi.indexOf(item.tipologia) === -1){\n                return null\n              }\n              return <stop key={i} offset={`${delta*i}%`} stopColor={item.colore.colori}>\n\n\n              </stop>\n            })}\n            {/* <stop offset=\"0%\" stopColor=\"#000\"></stop>\n            <stop offset=\"100%\" stopColor=\"#fff\"></stop> */}\n            {/* {+tipoFrom['ordine tipologia'] > +tipoTo['ordine tipologia'] && (\n              <>\n                <stop offset=\"0%\" stopColor={tipoFrom.colore.colori}></stop>\n                <stop offset=\"100%\" stopColor={tipoTo.colore.colori}></stop>\n              </>\n            )}\n            {+tipoFrom['ordine tipologia'] < +tipoTo['ordine tipologia'] && (\n              <>\n                <stop offset=\"0%\" stopColor={tipoTo.colore.colori}></stop>\n                <stop offset=\"100%\" stopColor={tipoFrom.colore.colori}></stop>\n              </>\n            )} */}\n          </linearGradient>\n        )\n      })}\n    </defs>\n  )\n}\n\nexport default React.memo(BoxPlotGrandientsDefinitions)\n","import ReactDOM from 'react-dom'\nimport React, {\n  useRef,\n  useState,\n  useMemo,\n  useCallback,\n  useEffect,\n  useLayoutEffect,\n  useImperativeHandle,\n  forwardRef,\n} from 'react'\nimport { line, curveMonotoneX } from 'd3-shape'\nimport { scaleLinear } from 'd3-scale'\nimport { zoom } from 'd3-zoom'\nimport { select, selectAll, event as currentEvent } from 'd3-selection'\n\nimport range from 'lodash/range'\nimport keyBy from 'lodash/keyBy'\nimport head from 'lodash/head'\nimport _last from 'lodash/last'\nimport uniqBy from 'lodash/uniqBy'\nimport minBy from 'lodash/minBy'\nimport maxBy from 'lodash/maxBy'\n\n\nimport { splitPath, motivoExtent, makeScalaMotivoY } from './utils'\nimport BoxPlotGradientsDefinitions from './BoxPlotGradientsDefinitions'\n\nconst RaccontoInfoBox = ({ titolo, x, y = 0, onClick }) => {\n  const containerRef = useRef(null)\n  const [measures, setMeasures] = useState(null)\n  useLayoutEffect(() => {\n    const m = containerRef.current.getBoundingClientRect()\n    setMeasures(m)\n  }, [titolo])\n\n  return (\n    <g\n      onClick={onClick}\n      transform={`translate(${x}, ${y})`}\n      style={{ cursor: 'pointer' }}\n    >\n      {measures && (\n        <g transform={`translate(${-measures.width - 40}, -15)`}>\n          <rect\n            height={22}\n            width={measures.width + 35}\n            rx={5}\n            className=\"trama2-info-box\"\n          />\n          <line\n            x1={measures.width + 18}\n            x2={measures.width + 18}\n            y1={0}\n            y2={22}\n            className=\"trama2-info-box\"\n          />\n          <text stroke={'var(--dark-blue)'} x={measures.width + 22} y={15}>\n            o\n          </text>\n        </g>\n      )}\n      <text\n        ref={containerRef}\n        x={-30}\n        y={0}\n        style={{ textAnchor: 'end', userSelect: 'none' }}\n      >\n        {titolo}\n      </text>\n    </g>\n  )\n}\n\nconst BoxPlotElement = React.memo(\n  ({\n    zoomFactor,\n    racconto,\n    data,\n    xScale,\n    width,\n    height,\n    index,\n    gradient,\n    itemSelected,\n    toggleItem,\n    yScale,\n    onRaccontoClick,\n  }) => {\n    const handleClickRacconto = useCallback(\n      (e) => {\n        onRaccontoClick(data, e)\n      },\n      [onRaccontoClick, data]\n    )\n\n    const top = yScale(data.min.ordineMotivo)\n    const bottom = yScale(data.max.ordineMotivo)\n    const h = bottom - top\n\n    const fill = itemSelected ? `url(\"#${data.racconto.titolo}\")` : '#ddd'\n    const widthBar = 10 * zoomFactor\n\n    return (\n      <g>\n        <rect\n          width={widthBar}\n          height={h}\n          y={top}\n          style={{ fill }}\n          onClick={() => toggleItem(data.racconto.titolo)}\n          stroke=\"#ccc\"\n          fillOpacity={0.6}\n        >\n          <title>{data.racconto.titolo}</title>\n        </rect>\n\n        <rect\n          width={widthBar}\n          height={widthBar}\n          style={{ fill: '#fff', stroke: '#000' }}\n          y={yScale(data.first.ordineMotivo)}\n        ></rect>\n        <rect\n          width={widthBar}\n          height={widthBar}\n          style={{ fill: '#ddd', stroke: '#000' }}\n          y={yScale(data.last.ordineMotivo)}\n        ></rect>\n      </g>\n    )\n  }\n)\n\nfunction BoxPlot(\n  {\n    racconti = [],\n    data = {},\n    height,\n    scalaColore,\n    scalaMotivoY,\n    colors,\n    selected,\n    toggleSelect,\n    onRaccontoClick,\n    tipologie,\n    tipologieByTipologia,\n  },\n  ref\n) {\n  const containerRef = useRef(null)\n  const svgRef = useRef(null)\n  const [measures, setMeasures] = useState(null)\n  const [translations, setTranslations] = useState([])\n  const [zoomFactor, setZoomFactor] = useState(1)\n\n  useLayoutEffect(() => {\n    const m = containerRef.current.getBoundingClientRect()\n    setMeasures(m)\n  }, [])\n\n  useEffect(() => {\n    function declarativeTranslate(currentScaleX) {\n      const newTranslates = racconti.map((r, i) => {\n        return 'translate(' + currentScaleX(i) + ', 0)'\n      })\n      setTranslations(newTranslates)\n    }\n\n    function imperativeTranslate(currentScaleX) {\n      selectAll('.box-racconto-container').attr(\n        'transform',\n        (d, i) => 'translate(' + currentScaleX(i) + ', 0)'\n      )\n    }\n\n    if (measures) {\n      const svg = svgRef.current\n      const scaleX = scaleLinear()\n        .domain([0, racconti.length])\n        .range([10, measures.width - 10])\n\n      imperativeTranslate(scaleX)\n      // declarativeTranslate(scaleY)\n\n      function handleZoom() {\n        const newScaleX = currentEvent.transform.rescaleX(scaleX)\n        imperativeTranslate(newScaleX)\n        const zoomFactor = Math.round(currentEvent.transform.k / 2)\n\n        const domain = newScaleX.domain()\n        const lowIndex = Math.max(0, Math.floor(domain[0]))\n        const hiIndex = Math.min(racconti.length - 1, Math.floor(domain[1]))\n        const batchUpdates = ReactDOM.unstable_batchedUpdates || ((cb) => cb())\n        batchUpdates(() => {\n          setZoomFactor(zoomFactor)\n          setYears(prevYears => {\n            const newYears = [racconti[lowIndex].anno, racconti[hiIndex].anno]\n            if (newYears[0] !== prevYears[0] || newYears[1] !== prevYears[1]) {\n              return newYears\n            }\n            return prevYears\n          })\n        })\n        // declarativeTranslate(newScaleX)\n      }\n\n      const selection = select(svg)\n      selection.call(zoom().scaleExtent([1, 5]).on('zoom', handleZoom))\n      return () => {\n        selection.on('.zoom', null)\n      }\n    }\n  }, [height, measures, racconti])\n\n  const yScale = useMemo(() => {\n    return scaleLinear().domain(motivoExtent).range([0, height])\n  }, [height])\n\n  const scalaMotivo = useMemo(() => {\n    return scaleLinear().domain(motivoExtent).range([0, 1])\n  }, [])\n\n  const [dataRacconti, gradientsType] = useMemo(() => {\n    if (!yScale) {\n      return [[], []]\n    }\n    const gradientsSet = new Set()\n    const finalDataRacconti = racconti.map((racconto, i) => {\n      let dataForRacconto = data[racconto.titolo]\n        .filter((d) => d.y !== undefined)\n        .map((d) => ({\n          ...d,\n          colori: tipologieByTipologia[d.motivo_type].colore.colori,\n        }))\n      let first = head(dataForRacconto)\n      let last = _last(dataForRacconto)\n      let uniqueItems = uniqBy(\n        dataForRacconto,\n        (item) => item.motivo_type\n      ).sort((item) => item.ordineMotivo)\n      let min = minBy(dataForRacconto, (item) => item.ordineMotivo)\n      let max = maxBy(dataForRacconto, (item) => item.ordineMotivo)\n\n      let out = {\n        racconto,\n        first,\n        last,\n        min,\n        max,\n        uniqueItems,\n        index: i,\n      }\n\n      gradientsSet.add(out)\n\n      out.racconto = racconto\n\n      return out\n    })\n    return [finalDataRacconti, Array.from(gradientsSet)]\n  }, [data, racconti, tipologieByTipologia, yScale])\n\n  // useImperativeHandle(ref, () => ({\n  //   rotateView: (cb) => {\n  //     const scaleY = scaleLinear()\n  //       .domain([0, racconti.length])\n  //       .range([0 + height, measures.height - height])\n\n  //     const mainTransition = selectAll('.box-racconto-container')\n  //       .transition()\n  //       .duration(1000)\n  //       .attr('transform', (d, i) => 'translate(0, ' + scaleY(i) + ')')\n  //       .end()\n\n  //     const selectedTransition = selectAll('.box-racconto-container-selected')\n  //       .transition()\n  //       .duration(1000)\n  //       .attr('transform', (d, i) => 'translate(0, ' + scaleY(i) + ')')\n  //       .end()\n\n  //     Promise.all([mainTransition, selectedTransition]).then(cb)\n  //   },\n  // }))\n  const [years, setYears] = useState([\n    racconti[0].anno,\n    racconti[racconti.length - 1].anno,\n  ])\n\n  return (\n    <div className='trama2-boxplot-content'>\n      <div\n        ref={containerRef}\n        className=\"w-100 h-100\"\n        style={{ overflow: 'hidden' }}\n      >\n        {measures && (\n          <svg\n            style={{\n              height: height + 140,\n              width: measures.width,\n            }}\n            ref={svgRef}\n          >\n            <BoxPlotGradientsDefinitions\n              byTipologia={tipologieByTipologia}\n              gradientsType={gradientsType}\n              scalaMotivo={scalaMotivo}\n              height={measures.height}\n            />\n            <g className=\"wrapper\" style={{ transform: 'translate(0, 70px)' }}>\n              {measures &&\n                dataRacconti.map((datum, i) => {\n                  return (\n                    <g\n                      key={i}\n                      className=\"box-racconto-container\"\n                      style={{\n                        transform: translations[i],\n                      }}\n                    >\n                      <BoxPlotElement\n                        zoomFactor={zoomFactor}\n                        onRaccontoClick={onRaccontoClick}\n                        scalaColore={scalaColore}\n                        scalaMotivoY={scalaMotivoY}\n                        index={i}\n                        width={measures.width}\n                        height={measures.height}\n                        itemSelected={selected[racconti[i].titolo]}\n                        toggleItem={toggleSelect}\n                        racconto={racconti[i]}\n                        yScale={yScale}\n                        data={datum}\n                      ></BoxPlotElement>\n                    </g>\n                  )\n                })}\n            </g>\n          </svg>\n        )}\n      </div>\n      <div className='trama2-box-plot-year'>\n        <div>{years[0]}</div>\n        <div>{years[1]}</div>\n      </div>\n    </div>\n  )\n}\n\nexport default forwardRef(BoxPlot)\n","import React, { useMemo, useRef, useLayoutEffect, useState } from 'react'\nimport { line, curveMonotoneX } from 'd3-shape'\nimport { scaleLinear } from 'd3-scale'\nimport { makeScalaMotivoY, splitPath } from './utils'\nimport GradientsDefinitions from './GradientsDefinitions'\n\nconst CHART_X_PADDING = 50\n\nconst lineGenerator = line()\n  .x((d) => d.x)\n  .y((d) => d.y)\n  .curve(curveMonotoneX)\n\nexport default function TramaDetail({\n  data,\n  tipologieByTipologia,\n  onBack,\n  detailHeight,\n}) {\n  const [measures, setMeasures] = useState(null)\n\n  useLayoutEffect(() => {\n    const m = containerRef.current.getBoundingClientRect()\n    setMeasures(m)\n  }, [])\n\n  const scalaMotivoY = useMemo(() => {\n    return makeScalaMotivoY(detailHeight)\n  }, [detailHeight])\n\n  const xScale = useMemo(() => {\n    if (!measures) {\n      return null\n    }\n    return scaleLinear()\n      .domain([0, 1])\n      .range([CHART_X_PADDING, measures.width - CHART_X_PADDING])\n  }, [measures])\n\n  // Re-Scale X, Y for fullscreen\n  const [fullData, subPaths, gradientsType] = useMemo(() => {\n    if (!xScale) {\n      return [null, null, null]\n    }\n    const gradientsSet = new Set()\n    const newData = data.reduce((acc, item, i) => {\n      if (i > 0) {\n        gradientsSet.add(item.motivo_type + '-' + acc[i - 1].motivo_type)\n      }\n      acc.push({\n        ...item,\n        x: xScale(item.originalX),\n        y: scalaMotivoY(item.ordineMotivo),\n      })\n      return acc\n    }, [])\n    const d = lineGenerator(newData)\n    const subPaths = splitPath(d)\n    return [newData, subPaths, Array.from(gradientsSet)]\n  }, [data, scalaMotivoY, xScale])\n  const containerRef = useRef(null)\n\n  return (\n    <div className=\"trama2-detail-content\">\n      <div className=\"trama2-detail-header d-flex justify-content-center align-items-center\">\n        <div className=\"trama2-detail-label\">\n          <div className=\"trama2-label-inner-start\">\n            {data.racconto.titolo}, {data.racconto.anno}\n          </div>\n          <div className=\"trama2-label-inner-end\" onClick={onBack}>\n            &times;\n          </div>\n        </div>\n      </div>\n\n      <div\n        ref={containerRef}\n        className=\"w-100 h-100\"\n        style={{ overflow: 'hidden' }}\n      >\n        {measures && (\n          <svg\n            style={{\n              height: detailHeight + 70,\n              width: measures.width,\n            }}\n          >\n            <GradientsDefinitions\n              prefix=\"detail__\"\n              byTipologia={tipologieByTipologia}\n              gradientsType={gradientsType}\n            />\n            <g transform={`translate(0, 70)`}>\n              {subPaths.map((subPath, i) => {\n                const isFill = data[i + 1].motivo_type === data[i].motivo_type\n                const stroke = isFill\n                  ? data[i].colori\n                  : `url('#detail__${data[i + 1].motivo_type}-${\n                      data[i].motivo_type\n                    }')`\n                return (\n                  <path\n                    key={i}\n                    d={subPath}\n                    className=\"trama2-line\"\n                    style={{\n                      stroke: stroke,\n                      fill: 'none',\n                    }}\n                  ></path>\n                )\n              })}\n              <g>\n                {fullData.map((d, i) => {\n                  let element\n                  if (i === 0) {\n                    element = (\n                      <rect\n                        x={0}\n                        y={0}\n                        className=\"trama2-start-symbol\"\n                      />\n                    )\n                  } else if (i === data.length - 1) {\n                    element = (\n                      <rect\n                        x={0}\n                        y={1}\n                        className=\"trama2-end-symbol\"\n                      />\n                    )\n                  } else {\n                    element = <circle className=\"trama2-circle\" r={2} />\n                  }\n                  return (\n                    <g key={i} transform={`translate(${d.x}, ${d.y})`}>\n                      {element}\n                      <text\n                        x={5}\n                        y={-5}\n                        style={{ transform: 'rotate(-30deg)' }}\n                      >\n                        {d.motivo_type}\n                      </text>\n                    </g>\n                  )\n                })}\n              </g>\n            </g>\n          </svg>\n        )}\n      </div>\n    </div>\n  )\n}\n","import React, { useMemo } from 'react'\nimport keyBy from 'lodash/keyBy'\n\nexport default function SideBar({\n  tipologie,\n  racconti,\n  height,\n  bounds,\n  addBound,\n  setBounds,\n}) {\n  const boundsByKey = keyBy(bounds)\n\n  const itemHeight = height / tipologie.length\n\n  const lookupMap = useMemo(() => {\n    return racconti.reduce(\n      (looks, racconto) => {\n        const min = racconto.minDatum.motivo_type\n        const max = racconto.maxDatum.motivo_type\n        looks[min] = looks[min] || {}\n        looks[max] = looks[max] || {}\n        looks[min][max] = true\n        looks[max][min] = true\n        return looks\n      },\n      [{}]\n    )\n  }, [racconti])\n  let lookup = null\n  if (bounds.length === 1) {\n    lookup = lookupMap[bounds[0]]\n  }\n\n  return (\n    <div className=\"trama2-sidebar\">\n      <div className=\"trama2-sidebar-header\"></div>\n      {tipologie.map((tipologia) => (\n        <div\n          key={tipologia.tipologia}\n          onClick={addBound(tipologia.tipologia)}\n          className={`trama2-sidebar-item\n          ${\n            lookup !== null &&\n            tipologia.tipologia !== bounds[0] &&\n            (!lookup || !lookup[tipologia.tipologia])\n              ? 'disabled'\n              : ''\n          }\n          ${boundsByKey[tipologia.tipologia] ? 'selected' : ''}`}\n          style={{\n            height: itemHeight,\n            background: boundsByKey[tipologia.tipologia]\n              ? tipologia.colore.colori\n              : undefined,\n          }}\n        >\n          {tipologia.tipologia}\n        </div>\n      ))}\n      <div>\n        {bounds.length > 0 && (\n          <span\n            onClick={() => {\n              setBounds([])\n            }}\n          >\n            Clear\n          </span>\n        )}\n      </div>\n    </div>\n  )\n}\n","import React, {\n  useLayoutEffect,\n  useState,\n  useCallback,\n  useMemo,\n  useEffect,\n  useRef,\n} from 'react'\n\n//data management\nimport keyBy from 'lodash/keyBy'\nimport sortBy from 'lodash/sortBy'\n\n//data helpers\nimport { MOTIVO_LINE_HEIGHT } from './utils'\n\n//local components\nimport LineeTrama from './LineeTrama'\nimport BoxPlot from './BoxPlot'\nimport TramaDetail from './TramaDetail'\nimport SideBar from './SideBar'\n\n// main component\nexport default function Trama2Content({\n  scalaMotivoY,\n  tipologie,\n  tipologieByTipologia,\n  colors,\n  racconti,\n  byRacconto,\n  selected,\n  toggleSelect,\n  setSelected,\n}) {\n  const [sidePanelOpen, setSidePanelOpen] = useState(false)\n  const toggleSidePanel = useCallback(() => {\n    setSidePanelOpen(!sidePanelOpen)\n  }, [sidePanelOpen])\n\n  const containerRef = useRef()\n  const [measures, setMeasures] = useState(null)\n  useLayoutEffect(() => {\n    const m = containerRef.current.getBoundingClientRect()\n    setMeasures(m)\n  }, [])\n\n  //lines selection\n  // const [selected, setSelected] = useState({})\n  // const toggleSelect = useCallback((titolo) => {\n  //   setSelected((selected) => ({ ...selected, [titolo]: !!!selected[titolo] }))\n  // }, [])\n\n  //bounds selection\n  const [bounds, setBounds] = useState([])\n  const addBound = useCallback(\n    (item) => () => {\n      if (bounds.length === 1 && bounds[0] === item) {\n        setBounds([])\n        return\n      }\n      if (bounds.length < 2) {\n        setBounds(bounds.concat([item]))\n      } else {\n        setBounds([item])\n      }\n    },\n    [bounds]\n  )\n\n  //actual dataset\n  // const raccontiFiltered = useMemo(() => {\n  //   if (bounds.length === 2) {\n  //     const orderedBounds = sortBy(\n  //       bounds,\n  //       (bound) => tipologieByTipologia[bound][\"ordine tipologia\"]\n  //     );\n  //     return racconti.filter(\n  //       (racconto) =>\n  //         racconto.minDatum.motivo_type === orderedBounds[0] &&\n  //         racconto.maxDatum.motivo_type === orderedBounds[1]\n  //     );\n  //   }\n\n  //   return racconti;\n  // }, [bounds, racconti, tipologieByTipologia]);\n\n  useEffect(() => {\n    if (bounds.length === 2) {\n      const orderedBounds = sortBy(\n        bounds,\n        (bound) => +tipologieByTipologia[bound]['ordine tipologia']\n      )\n      const indexes = racconti.reduce((acc, racconto, indenx) => {\n        if (\n          racconto.minDatum.motivo_type === orderedBounds[0] &&\n          racconto.maxDatum.motivo_type === orderedBounds[1]\n        ) {\n          acc.push(racconto.titolo)\n        }\n        return acc\n      }, [])\n\n      const sel = keyBy(indexes)\n      setSelected(sel, true)\n    }\n  }, [bounds, racconti, setSelected, tipologieByTipologia])\n\n  useEffect(() => {\n    if (\n      Object.keys(selected).some((key) => selected[key].fromBounds === false)\n    ) {\n      setBounds([])\n    }\n  }, [selected])\n\n  const listRef = useRef()\n  const [currentView, setCurrentView] = useState('list')\n  const [currentTramaDetail, setCurrentTramaDetail] = useState(null)\n\n  const handleClickRacconto = useCallback((data) => {\n    setCurrentTramaDetail(data)\n    setCurrentView('detail')\n  }, [])\n\n  const [years, setYears] = useState([\n    racconti[0].anno,\n    racconti[racconti.length - 1].anno,\n  ])\n\n  return (\n    <div className=\"trama2-container\" ref={containerRef}>\n      <div className={`trama2-side-panel ${sidePanelOpen ? 'open' : 'closed'}`}>\n        <div className=\"trama2-side-panel-content\">\n          {measures && (\n            <SideBar\n              racconti={racconti}\n              height={measures.height - 140}\n              tipologie={tipologie}\n              bounds={bounds}\n              addBound={addBound}\n              setBounds={setBounds}\n            ></SideBar>\n          )}\n        </div>\n\n        <div\n          className=\"trama2-side-panel-toggle \"\n          onClick={toggleSidePanel}\n        ></div>\n\n        {currentView !== 'detail' && (\n          <div\n            className=\"trama2-side-panel-rotate\"\n            onClick={() => {\n              if (currentView === 'list') {\n                listRef.current.rotateView(() => {\n                  setCurrentView('boxplot')\n                })\n              } else {\n                setCurrentView('list')\n              }\n            }}\n          >\n            Routa la vista\n          </div>\n        )}\n      </div>\n      <div className=\"trama2-content-wrapper\">\n        {currentView === 'list' && (\n          <>\n            <div\n              style={{\n                position: 'absolute',\n                top: 80 + MOTIVO_LINE_HEIGHT,\n                borderTop: 'solid #bbb 1px',\n              }}\n            >\n              {years[0]}\n            </div>\n            <div\n              style={{\n                position: 'absolute',\n                bottom: MOTIVO_LINE_HEIGHT,\n                borderBottom: 'solid #bbb 1px',\n              }}\n            >\n              {years[1]}\n            </div>\n          </>\n        )}\n\n        <div\n          className=\"trama2-content\"\n          style={{ display: currentView !== 'list' ? 'none' : undefined }}\n        >\n          <LineeTrama\n            onRaccontoClick={handleClickRacconto}\n            ref={listRef}\n            selected={selected}\n            toggleSelect={toggleSelect}\n            racconti={racconti}\n            tipologie={tipologie}\n            tipologieByTipologia={tipologieByTipologia}\n            data={byRacconto}\n            height={MOTIVO_LINE_HEIGHT}\n            scalaMotivoY={scalaMotivoY}\n            colors={colors}\n            setYears={setYears}\n          ></LineeTrama>\n        </div>\n\n        {currentView === 'boxplot' && measures && (\n          <BoxPlot\n            onRaccontoClick={handleClickRacconto}\n            ref={listRef}\n            selected={selected}\n            toggleSelect={toggleSelect}\n            racconti={racconti}\n            tipologie={tipologie}\n            tipologieByTipologia={tipologieByTipologia}\n            data={byRacconto}\n            height={measures.height - 140}\n            scalaMotivoY={scalaMotivoY}\n            colors={colors}\n          ></BoxPlot>\n        )}\n        {currentView === 'detail' && measures && (\n          <TramaDetail\n            tipologieByTipologia={tipologieByTipologia}\n            detailHeight={measures.height - 140}\n            data={currentTramaDetail}\n            onBack={() => {\n              setCurrentTramaDetail(null)\n              setCurrentView('list')\n            }}\n          />\n        )}\n      </div>\n    </div>\n  )\n}\n","import React, {\n  useRef,\n  useLayoutEffect,\n  Component,\n  lazy,\n  Suspense,\n  useCallback,\n  useState,\n  useMemo,\n} from 'react'\nimport MainMenu from '../../general/MainMenu'\nimport PageTitle from '../../general/PageTitle'\nimport MoreInfo from '../../general/MoreInfo'\nimport CompassButton from '../../general/CompassButton/CompassButton'\nimport SearchDropDown from '../../general/Search/SearchDropDown'\nimport Loading from '../../general/Loading'\nimport HelpSidePanel from '../../panels/HelpSidePanel/HelpSidePanel'\n\nimport AltOptions from '../../general/Options/AltOptions'\nimport GlobalData from '../../utilities/GlobalData'\nimport Trama2Content from './Trama2Content'\nimport { makeScalaMotivoY, makeVizData, MOTIVO_LINE_HEIGHT } from './utils'\nimport keyBy from 'lodash/keyBy'\nimport './Trama2.css'\n\n// SCALES\nconst scalaMotivoY = makeScalaMotivoY(MOTIVO_LINE_HEIGHT)\n\n// GLOBAL DATA\nconst {\n  tipologie,\n  tipologieByTipologia,\n  colors,\n  racconti,\n  byRacconto,\n} = makeVizData(scalaMotivoY)\n\n// we leverage react lazy+suspense to load core component at first render (it will load all json by importing it)\n\nconst searchOptions = racconti.map((racconto) => ({\n  label: racconto.titolo,\n  value: racconto.titolo,\n}))\n\nconst cercaOptions = [{ label: 'Volume' }]\n\nfunction Trama2Main({ title }) {\n  const [helpSidePanelOpen, setHelpSidePanelOpen] = useState(false)\n  const [ricerca, setRicerca] = useState([])\n\n  const toggleHelpSidePanel = useCallback(() => {\n    setHelpSidePanelOpen((a) => !a)\n  }, [])\n\n  const helpPage = GlobalData.helpPages.plot.main\n\n  const setSelected = useCallback((selection, fromBounds = false) => {\n    const newRicerca = Object.keys(selection).map((titolo) => ({\n      label: titolo,\n      value: titolo,\n      fromBounds: true,\n    }))\n    setRicerca(newRicerca)\n  }, [])\n\n  const toggleSelect = useCallback((titolo) => {\n    setRicerca((ricerca) => {\n      let clearedBounds = false\n      const newRicerca = ricerca.filter((item) => {\n        // Remove from bounds items\n        if (item.fromBounds === true) {\n          clearedBounds = true\n          return false\n        }\n        return item.label !== titolo\n      })\n      if (newRicerca.length < ricerca.length && !clearedBounds) {\n        return newRicerca\n      } else {\n        return newRicerca.concat({ label: titolo, value: titolo })\n      }\n    })\n  }, [])\n  const selected = useMemo(() => {\n    return keyBy(\n      ricerca.map((item) => ({\n        value: item.value,\n        fromBounds: item.fromBounds === undefined ? false : item.fromBounds,\n      })),\n      'value'\n    )\n  }, [ricerca])\n\n  return (\n    <div className=\"trasformare main\">\n      <HelpSidePanel\n        open={helpSidePanelOpen}\n        page={helpPage}\n        closeButtonClicked={toggleHelpSidePanel}\n      />\n\n      <div className=\"top-nav navigations\">\n        <MainMenu className=\"main-menu\" style={{ gridColumn: 'span 1' }} />\n        <PageTitle title={title} style={{ gridColumn: 'span 10' }} />\n\n        <AltOptions\n          title=\"Cerca per\"\n          options={cercaOptions}\n          disabled={true}\n          value={'Volume'}\n          onChange={(x) => {}}\n          style={{\n            gridColumn: 'span 3',\n          }}\n        />\n\n        <SearchDropDown\n          style={{\n            gridColumn: 'span 8',\n          }}\n          data={{ options: searchOptions }}\n          changeOptions={(newOptions) => {\n            setRicerca(newOptions)\n          }}\n          selectedOptions={ricerca}\n        />\n\n        <MoreInfo\n          style={{ gridColumn: 'span 1' }}\n          onClicked={toggleHelpSidePanel}\n        />\n        <CompassButton\n          style={{\n            gridColumn: 'span 1',\n            color: 'white',\n            backgroundColor: 'black',\n          }}\n        />\n      </div>\n\n      <Trama2Content\n        scalaMotivoY={scalaMotivoY}\n        tipologie={tipologie}\n        tipologieByTipologia={tipologieByTipologia}\n        colors={colors}\n        racconti={racconti}\n        byRacconto={byRacconto}\n        selected={selected}\n        setSelected={setSelected}\n        toggleSelect={toggleSelect}\n      ></Trama2Content>\n    </div>\n  )\n}\n\nexport default Trama2Main\n"],"sourceRoot":""}