{"version":3,"sources":["../node_modules/d3-shape/src/curve/monotone.js","general/Search/SearchDropDownControlled.js","../node_modules/lodash/mapValues.js","general/MiniInfoBox/MiniInfoBox.js","../node_modules/lodash/minBy.js","../node_modules/lodash/_baseLt.js","../node_modules/lodash/take.js","../node_modules/lodash/orderBy.js","visualizations/Trama2/utils.js","visualizations/Trama2/GradientsDefinitions.js","visualizations/Trama2/RaccontoInfoBoxSvg.js","visualizations/Trama2/Brush.js","visualizations/Trama2/LineeTrama.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectWithoutPropertiesLoose.js","visualizations/Trama2/Star.js","visualizations/Trama2/BoxPlotGradientsDefinitions.js","visualizations/Trama2/BoxPlot.js","visualizations/Trama2/TramaDetail.js","visualizations/Trama2/SideBar.js","visualizations/Trama2/Trama2Content.js","visualizations/Trama2/Trama2Main.js"],"names":["sign","x","slope3","that","x2","y2","h0","_x1","_x0","h1","s0","_y1","_y0","s1","p","Math","min","abs","slope2","t","h","point","t0","t1","x0","y0","x1","y1","dx","_context","bezierCurveTo","MonotoneX","context","this","MonotoneY","ReflectContext","monotoneX","prototype","areaStart","_line","areaEnd","NaN","lineStart","_t0","_point","lineEnd","lineTo","closePath","y","moveTo","Object","create","call","Search","props","maxTokens","selectedOptions","className","style","fontSize","position","top","ref","typeahead","multiple","onChange","selected","selectedGroups","groupBy","value","dupes","keys","filter","length","newSelected","item","indexOf","changeOptions","disabled","onInputChange","options","data","id","filterBy","option","text","label","toLowerCase","renderMenu","results","menuProps","map","result","index","isSelected","key","renderMenuItemChildren","idx","selectedValues","search","renderToken","onRemove","tabIndex","onClick","focus","Component","defaultProps","gridColumn","baseAssignValue","require","baseForOwn","baseIteratee","module","exports","object","iteratee","MiniInfoBox","children","onClose","baseExtremum","baseLt","array","undefined","other","baseSlice","toInteger","n","guard","baseOrderBy","isArray","collection","iteratees","orders","motivoExtent","extent","ordineColore","makeScalaMotivoY","lineHeight","scaleLinear","domain","range","splitPath","d","pieces","split","reduce","acc","i","path","push","reverse","a","b","React","memo","prefix","gradientsType","byTipologia","gradientType","tipoFromName","tipoToName","tipoFrom","tipoTo","offset","stopColor","colore","colori","RaccontoInfoBoxSvg","titolo","containerRef","useRef","useState","measures","setMeasures","view","useContext","CurretTramaViewContext","useLayoutEffect","m","current","getBoundingClientRect","transform","cursor","width","height","rx","stroke","textAnchor","userSelect","Brush","onNextClick","onPrevClick","controlledX","onXChange","BRUSH_HANDLE_WIDTH","uncontrolledX","setX","rawNextX","nextX","icon","faArrowLeft","axis","bounds","left","right","onDrag","e","faArrowRight","lineGenerator","line","curve","curveMonotoneX","SubPathsWithColors","subPaths","itemSelected","subPath","strokeSelected","motivo_type","fill","TramaPoints","transformOrigin","cx","cy","r","LineaTrama","racconto","selectedPoint","xScale","gradient","toggleItem","onRaccontoClick","useMemo","handleClickRacconto","useCallback","element","data-subracconto","anno","originalX","ReactDOM","createPortal","document","getElementsByClassName","SelectedContainers","LineeTramaList","dataRacconti","currentXHoverRacconti","racconti","scalaColore","scalaMotivoY","toggleSelect","datum","imperativeTranslate","currentScaleY","selectAll","attr","LineeTramaWithMeasuresReffed","forwardRef","colors","tipologieByTipologia","tipologie","setYears","svgRef","lastZoomedScaleYRef","useEffect","svg","scaleY","selection","select","zoom","scaleExtent","translateExtent","on","newScaleY","currentEvent","rescaleY","lowIndex","max","floor","hiIndex","prevYears","newYears","dataByRaccontiFinal","gradientsSet","Set","out","add","Array","from","dataByRacconti","raccontoData","raccontoDatum","find","toFixed","handleNexPoint","nextPoints","forEach","handlePrevPoint","xKey","useImperativeHandle","rotateView","cb","raccontoDataIndex","findIndex","flyToX","scaleXBoxPlot","querySelectorAll","display","paths","scaleMotivo","start","cachedResetStrokes","animate2","timestamp","k","dataFly","prevDatum","ordineMotivo","setAttribute","window","requestAnimationFrame","lastZoomScaleY","resetDPath","resettedDSubPaths","animate","GradientsDefinitions","childRef","overflow","_objectWithoutProperties","source","excluded","target","sourceKeys","getOwnPropertySymbols","sourceSymbolKeys","propertyIsEnumerable","rad2","sqrt","points","Star","size","svgStyle","strokeWidth","join","viewBox","scalaMotivo","colorsItems","values","sort","delta","motivi","uniqueItems","gradientUnits","tipologia","BoxPlotElement","zoomFactor","yScale","showBoxInOpacity","onGlyphoClick","bottom","widthBar","fillOpacity","first","last","xAxisContainer","translations","setZoomFactor","actualScaleX","currentScaleX","formatAxisTick","scaleX","axisBottom","tickFormat","newScaleX","rescaleX","round","unstable_batchedUpdates","finalDataByRacconti","dataForRacconto","head","_last","uniqBy","minBy","maxBy","setShowBoxInOpacity","toggleBoxInOpacity","enterInOpacity","setEnterInOpacity","BoxPlotGradientsDefinitions","calculateLabelScore","score","j","lenX","lenY","len","parseInt","TramaDetail","onBack","detailHeight","newData","fullData","raccontiIncastonati","inkMap","minX","maxX","inkY","startY","endY","labelsData","dataWithScore","labelData","byTypeWithScore","orderBy","concat","keepByType","mapValues","keep","splice","finalLabels","keepLabel","hoverMotivo","setHoverMotivo","onMouseEnter","onMouseLeave","SideBarItem","addBound","fromDarkItem","itemHeight","disableEvents","Number","paddingLeft","background","tramaDetail","setBounds","boundsByKey","keyBy","leftAsMyNavGridIs","outerWidth","setWidth","setCurrentWidth","addEventListener","removeEventListener","useWindowWidth","lookupMap","looks","minDatum","maxDatum","lookup","tipologieGrouped","Infinity","motiviDetail","uniq","createContext","Trama2Content","byRacconto","setSelected","sidePanelOpen","setSidePanelOpen","toggleSidePanel","orderedBounds","sortBy","bound","indexes","indenx","sel","some","fromBounds","listRef","currentView","setCurrentView","currentTramaDetail","setCurrentTramaDetail","years","faAngleDoubleRight","borderBottom","MOTIVO_LINE_HEIGHT","Provider","ordineByCluster","coloriPosizioni","get","ordine","clusterByMotivo","mappaMotivoTipologia","ordineMotivoByMotivo","datasetTmpByRacconto","datasetLines","holes","motivo","end_motivo","start_motivo","totHolesSize","hole","holesSize","datasetLinesNormalized","flatten","tot","cluster","coloreCluster","ordineCluster","startMotivoNorm","endMotivoNorm","mese","fixScale","raccontiByRacconto","v","makeVizData","searchOptions","cercaOptions","Trama2Main","title","helpSidePanelOpen","setHelpSidePanelOpen","ricerca","setRicerca","toggleHelpSidePanel","helpPage","GlobalData","helpPages","plot","main","newRicerca","clearedBounds","HelpSidePanel","open","page","closeButtonClicked","MainMenu","PageTitle","AltOptions","newOptions","o","MoreInfo","onClicked","CompassButton","color","backgroundColor"],"mappings":"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","file":"static/js/3.2d7862d3.chunk.js","sourcesContent":["function sign(x) {\n  return x < 0 ? -1 : 1;\n}\n\n// Calculate the slopes of the tangents (Hermite-type interpolation) based on\n// the following paper: Steffen, M. 1990. A Simple Method for Monotonic\n// Interpolation in One Dimension. Astronomy and Astrophysics, Vol. 239, NO.\n// NOV(II), P. 443, 1990.\nfunction slope3(that, x2, y2) {\n  var h0 = that._x1 - that._x0,\n      h1 = x2 - that._x1,\n      s0 = (that._y1 - that._y0) / (h0 || h1 < 0 && -0),\n      s1 = (y2 - that._y1) / (h1 || h0 < 0 && -0),\n      p = (s0 * h1 + s1 * h0) / (h0 + h1);\n  return (sign(s0) + sign(s1)) * Math.min(Math.abs(s0), Math.abs(s1), 0.5 * Math.abs(p)) || 0;\n}\n\n// Calculate a one-sided slope.\nfunction slope2(that, t) {\n  var h = that._x1 - that._x0;\n  return h ? (3 * (that._y1 - that._y0) / h - t) / 2 : t;\n}\n\n// According to https://en.wikipedia.org/wiki/Cubic_Hermite_spline#Representations\n// \"you can express cubic Hermite interpolation in terms of cubic Bézier curves\n// with respect to the four values p0, p0 + m0 / 3, p1 - m1 / 3, p1\".\nfunction point(that, t0, t1) {\n  var x0 = that._x0,\n      y0 = that._y0,\n      x1 = that._x1,\n      y1 = that._y1,\n      dx = (x1 - x0) / 3;\n  that._context.bezierCurveTo(x0 + dx, y0 + dx * t0, x1 - dx, y1 - dx * t1, x1, y1);\n}\n\nfunction MonotoneX(context) {\n  this._context = context;\n}\n\nMonotoneX.prototype = {\n  areaStart: function() {\n    this._line = 0;\n  },\n  areaEnd: function() {\n    this._line = NaN;\n  },\n  lineStart: function() {\n    this._x0 = this._x1 =\n    this._y0 = this._y1 =\n    this._t0 = NaN;\n    this._point = 0;\n  },\n  lineEnd: function() {\n    switch (this._point) {\n      case 2: this._context.lineTo(this._x1, this._y1); break;\n      case 3: point(this, this._t0, slope2(this, this._t0)); break;\n    }\n    if (this._line || (this._line !== 0 && this._point === 1)) this._context.closePath();\n    this._line = 1 - this._line;\n  },\n  point: function(x, y) {\n    var t1 = NaN;\n\n    x = +x, y = +y;\n    if (x === this._x1 && y === this._y1) return; // Ignore coincident points.\n    switch (this._point) {\n      case 0: this._point = 1; this._line ? this._context.lineTo(x, y) : this._context.moveTo(x, y); break;\n      case 1: this._point = 2; break;\n      case 2: this._point = 3; point(this, slope2(this, t1 = slope3(this, x, y)), t1); break;\n      default: point(this, this._t0, t1 = slope3(this, x, y)); break;\n    }\n\n    this._x0 = this._x1, this._x1 = x;\n    this._y0 = this._y1, this._y1 = y;\n    this._t0 = t1;\n  }\n}\n\nfunction MonotoneY(context) {\n  this._context = new ReflectContext(context);\n}\n\n(MonotoneY.prototype = Object.create(MonotoneX.prototype)).point = function(x, y) {\n  MonotoneX.prototype.point.call(this, y, x);\n};\n\nfunction ReflectContext(context) {\n  this._context = context;\n}\n\nReflectContext.prototype = {\n  moveTo: function(x, y) { this._context.moveTo(y, x); },\n  closePath: function() { this._context.closePath(); },\n  lineTo: function(x, y) { this._context.lineTo(y, x); },\n  bezierCurveTo: function(x1, y1, x2, y2, x, y) { this._context.bezierCurveTo(y1, x1, y2, x2, y, x); }\n};\n\nexport function monotoneX(context) {\n  return new MonotoneX(context);\n}\n\nexport function monotoneY(context) {\n  return new MonotoneY(context);\n}\n","import React, { Component, createRef } from \"react\";\nimport \"../../App.css\";\nimport \"./SearchDropDown.css\";\nimport {\n  Typeahead,\n  Token,\n  Highlighter,\n  Menu,\n  MenuItem\n} from \"react-bootstrap-typeahead\";\nimport \"react-bootstrap-typeahead/css/Typeahead.css\";\nimport \"react-bootstrap-typeahead/css/Typeahead-bs4.css\";\nimport groupBy from \"lodash/groupBy\";\n\nconst renderToken = (option, props, idx) => (\n  <Token\n    disabled={props.disabled}\n    key={idx}\n    onRemove={props.onRemove}\n    tabIndex={props.tabIndex}\n  >\n    {option.label}\n  </Token>\n);\n\nconst renderMenuItemChildren = (option, props, idx, selectedValues) => {\n\n  return (\n    <Highlighter search={props.text} key={idx}>\n      {option.label}\n    </Highlighter>\n  );\n};\n\nclass Search extends Component {\n  render() {\n    let isSelection = false;\n    const { maxTokens, selectedOptions } = this.props;\n\n    return (\n      <div className=\"search-component\" style={this.props.style}>\n        {!isSelection && (\n          <span style={{ fontSize: \"1rem\", position: \"relative\", top: \"-3px\" }}>\n            /\n          </span>\n        )}\n        <Typeahead\n          ref={typeahead => (this.typeahead = typeahead)}\n          multiple\n          onChange={selected => {\n            const selectedGroups = groupBy(selected, x => x.value);\n            const dupes = Object.keys(selectedGroups).filter(\n              x => selectedGroups[x].length > 1\n            );\n            const newSelected = selected.filter(\n              item => dupes.indexOf(item.value) === -1\n            );\n            this.props.changeOptions(newSelected);\n          }}\n          selected={selectedOptions}\n          disabled={false}\n          onInputChange={this.props.onInputChange}\n          options={this.props.data.options}\n          id=\"main-search\"\n          filterBy={(option, props) => {\n            if (!props.text) {\n              return option;\n            }\n            return option.label.toLowerCase().indexOf(props.text.toLowerCase()) !== -1 ? option : null;\n          }}\n          renderMenu={(results, menuProps) => (\n            <Menu {...menuProps} className=\"rbt-menu-container\">\n              {results.map((result, index) => {\n                const isSelected =\n                selectedOptions.map(x => x.value).indexOf(result.value) !== -1;\n                return (\n                  <MenuItem\n                    key={index}\n                    option={result}\n                    position={index}\n                    className={`dropdown-item-selectable ${isSelected ? 'selected' : ''}`}\n                  >\n                    {result.label}\n                  </MenuItem>\n                );\n              })}\n            </Menu>\n          )}\n          renderMenuItemChildren={(option, props, idx) =>\n            renderMenuItemChildren(option, props, idx, selectedOptions)\n          }\n          renderToken={(option, props, index) => {\n            if (selectedOptions.length - index - 1 < maxTokens) {\n              return renderToken(option, props, index)\n            } else if (selectedOptions.length - index - 1 === maxTokens) {\n              return (\n                <span key={index} className=\"rbt-token\" onClick={() => this.typeahead.focus()}>\n                  +{selectedOptions.length - maxTokens}\n                </span>\n              )\n            } else {\n              return null\n            }\n          }}\n        />\n      </div>\n    );\n  }\n}\n\nexport default Search;\n\nSearch.defaultProps = {\n  maxTokens: 2,\n  style: {\n    gridColumn: \"span 4\"\n  }\n};\n","var baseAssignValue = require('./_baseAssignValue'),\n    baseForOwn = require('./_baseForOwn'),\n    baseIteratee = require('./_baseIteratee');\n\n/**\n * Creates an object with the same keys as `object` and values generated\n * by running each own enumerable string keyed property of `object` thru\n * `iteratee`. The iteratee is invoked with three arguments:\n * (value, key, object).\n *\n * @static\n * @memberOf _\n * @since 2.4.0\n * @category Object\n * @param {Object} object The object to iterate over.\n * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n * @returns {Object} Returns the new mapped object.\n * @see _.mapKeys\n * @example\n *\n * var users = {\n *   'fred':    { 'user': 'fred',    'age': 40 },\n *   'pebbles': { 'user': 'pebbles', 'age': 1 }\n * };\n *\n * _.mapValues(users, function(o) { return o.age; });\n * // => { 'fred': 40, 'pebbles': 1 } (iteration order is not guaranteed)\n *\n * // The `_.property` iteratee shorthand.\n * _.mapValues(users, 'age');\n * // => { 'fred': 40, 'pebbles': 1 } (iteration order is not guaranteed)\n */\nfunction mapValues(object, iteratee) {\n  var result = {};\n  iteratee = baseIteratee(iteratee, 3);\n\n  baseForOwn(object, function(value, key, object) {\n    baseAssignValue(result, key, iteratee(value, key, object));\n  });\n  return result;\n}\n\nmodule.exports = mapValues;\n","import React from 'react'\nimport './MiniInfoBox.css'\n\nexport default function MiniInfoBox({ children, onClose, style }) {\n  return (\n    <div className=\"MiniInfoBox\" style={style}>\n      <div className=\"MiniInfoBox-start\">{children}</div>\n      <div className=\"MiniInfoBox-end\" onClick={onClose}>\n        &times;\n      </div>\n    </div>\n  )\n}\n","var baseExtremum = require('./_baseExtremum'),\n    baseIteratee = require('./_baseIteratee'),\n    baseLt = require('./_baseLt');\n\n/**\n * This method is like `_.min` except that it accepts `iteratee` which is\n * invoked for each element in `array` to generate the criterion by which\n * the value is ranked. The iteratee is invoked with one argument: (value).\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Math\n * @param {Array} array The array to iterate over.\n * @param {Function} [iteratee=_.identity] The iteratee invoked per element.\n * @returns {*} Returns the minimum value.\n * @example\n *\n * var objects = [{ 'n': 1 }, { 'n': 2 }];\n *\n * _.minBy(objects, function(o) { return o.n; });\n * // => { 'n': 1 }\n *\n * // The `_.property` iteratee shorthand.\n * _.minBy(objects, 'n');\n * // => { 'n': 1 }\n */\nfunction minBy(array, iteratee) {\n  return (array && array.length)\n    ? baseExtremum(array, baseIteratee(iteratee, 2), baseLt)\n    : undefined;\n}\n\nmodule.exports = minBy;\n","/**\n * The base implementation of `_.lt` which doesn't coerce arguments.\n *\n * @private\n * @param {*} value The value to compare.\n * @param {*} other The other value to compare.\n * @returns {boolean} Returns `true` if `value` is less than `other`,\n *  else `false`.\n */\nfunction baseLt(value, other) {\n  return value < other;\n}\n\nmodule.exports = baseLt;\n","var baseSlice = require('./_baseSlice'),\n    toInteger = require('./toInteger');\n\n/**\n * Creates a slice of `array` with `n` elements taken from the beginning.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Array\n * @param {Array} array The array to query.\n * @param {number} [n=1] The number of elements to take.\n * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n * @returns {Array} Returns the slice of `array`.\n * @example\n *\n * _.take([1, 2, 3]);\n * // => [1]\n *\n * _.take([1, 2, 3], 2);\n * // => [1, 2]\n *\n * _.take([1, 2, 3], 5);\n * // => [1, 2, 3]\n *\n * _.take([1, 2, 3], 0);\n * // => []\n */\nfunction take(array, n, guard) {\n  if (!(array && array.length)) {\n    return [];\n  }\n  n = (guard || n === undefined) ? 1 : toInteger(n);\n  return baseSlice(array, 0, n < 0 ? 0 : n);\n}\n\nmodule.exports = take;\n","var baseOrderBy = require('./_baseOrderBy'),\n    isArray = require('./isArray');\n\n/**\n * This method is like `_.sortBy` except that it allows specifying the sort\n * orders of the iteratees to sort by. If `orders` is unspecified, all values\n * are sorted in ascending order. Otherwise, specify an order of \"desc\" for\n * descending or \"asc\" for ascending sort order of corresponding values.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Collection\n * @param {Array|Object} collection The collection to iterate over.\n * @param {Array[]|Function[]|Object[]|string[]} [iteratees=[_.identity]]\n *  The iteratees to sort by.\n * @param {string[]} [orders] The sort orders of `iteratees`.\n * @param- {Object} [guard] Enables use as an iteratee for methods like `_.reduce`.\n * @returns {Array} Returns the new sorted array.\n * @example\n *\n * var users = [\n *   { 'user': 'fred',   'age': 48 },\n *   { 'user': 'barney', 'age': 34 },\n *   { 'user': 'fred',   'age': 40 },\n *   { 'user': 'barney', 'age': 36 }\n * ];\n *\n * // Sort by `user` in ascending order and by `age` in descending order.\n * _.orderBy(users, ['user', 'age'], ['asc', 'desc']);\n * // => objects for [['barney', 36], ['barney', 34], ['fred', 48], ['fred', 40]]\n */\nfunction orderBy(collection, iteratees, orders, guard) {\n  if (collection == null) {\n    return [];\n  }\n  if (!isArray(iteratees)) {\n    iteratees = iteratees == null ? [] : [iteratees];\n  }\n  orders = guard ? undefined : orders;\n  if (!isArray(orders)) {\n    orders = orders == null ? [] : [orders];\n  }\n  return baseOrderBy(collection, iteratees, orders);\n}\n\nmodule.exports = orderBy;\n","//visual helpers\nimport { scaleLinear } from \"d3-scale\";\nimport { extent } from \"d3-array\";\n\n//data management\nimport groupBy from \"lodash/groupBy\";\nimport keyBy from \"lodash/keyBy\";\nimport sortBy from \"lodash/sortBy\";\nimport uniqBy from \"lodash/uniqBy\";\nimport minBy from \"lodash/minBy\";\nimport maxBy from \"lodash/maxBy\";\nimport mapValues from \"lodash/mapValues\";\nimport get from \"lodash/get\";\nimport take from \"lodash/take\";\nimport sum from \"lodash/sum\";\nimport flatten from \"lodash/flatten\";\n\nimport datasetLines from \"./dati/dataset_lines.json\";\nimport mappaMotivoTipologia from \"./dati/mappa_motivo_tipologia.json\";\nimport coloriPosizioni from \"./dati/colori_posizioni.json\";\nimport ordineColore from \"./dati/ordine_colore_y.json\";\n\nexport const MOTIVO_LINE_HEIGHT = 50;\n\nexport const motivoExtent = extent(\n  ordineColore,\n  (item) => +item[\"ordine tipologia\"]\n);\n\nexport function makeScalaMotivoY(lineHeight) {\n  return scaleLinear().domain(motivoExtent).range([lineHeight, 0]);\n}\n\nexport function makeVizData(scaleY) {\n  const ordineByCluster = keyBy(coloriPosizioni, \"valore\");\n  const tipologie = ordineColore.map((item) => ({\n    ...item,\n    colore: get(ordineByCluster, item[\"cluster tipologia\"]),\n  }));\n  const colors = sortBy(tipologie, (item) => item.colore.ordine).map(\n    (x) => x.colore.colori\n  );\n  const tipologieByTipologia = keyBy(tipologie, (item) => item.tipologia);\n\n  const clusterByMotivo = mapValues(\n    keyBy(mappaMotivoTipologia, \"motivo_type\"),\n    (item) => item[\"cluster tipologie\"]\n  );\n  const ordineMotivoByMotivo = mapValues(\n    keyBy(ordineColore, \"tipologia\"),\n    (item) => +item[\"ordine tipologia\"]\n  );\n\n  const fixHoles = (data) => {\n    const holes = data\n      .map((item, i) => {\n        const motivo = item[\"motivo_type\"];\n        const ordineMotivo = !!get(ordineMotivoByMotivo, motivo);\n        if (ordineMotivo) {\n          return null;\n        } else {\n          return {\n            index: i,\n            len: +item.end_motivo - item.start_motivo + 1,\n          };\n        }\n      })\n      .filter((x) => !!x);\n\n    const totHolesSize = holes.reduce((acc, hole) => acc + hole.len, 0);\n\n    let out = [];\n    data.forEach((datum, i) => {\n      const motivo = datum[\"motivo_type\"];\n      const ordineMotivo = get(ordineMotivoByMotivo, motivo);\n      if (ordineMotivo !== undefined) {\n        const holesForDatum = holes.filter((item) => item.index < i);\n        const holesSize = holesForDatum.reduce(\n          (acc, hole) => acc + hole.len,\n          0\n        );\n        out.push({\n          ...datum,\n          start_motivo: +datum.start_motivo - holesSize,\n          end_motivo: +datum.end_motivo - holesSize,\n          \"tot caratteri\": +datum[\"tot caratteri\"] - totHolesSize,\n        });\n      }\n    });\n    return out;\n  };\n\n  let datasetTmpByRacconto = groupBy(datasetLines, \"titolo racconto\");\n  datasetTmpByRacconto = mapValues(datasetTmpByRacconto, fixHoles);\n  const datasetLinesFinal = flatten(Object.values(datasetTmpByRacconto));\n\n  const datasetLinesNormalized = datasetLinesFinal.map((item) => {\n    const tot = +item[\"tot caratteri\"];\n    const motivo = item[\"motivo_type\"];\n    const cluster = get(clusterByMotivo, motivo);\n    const coloreCluster = get(ordineByCluster, `[${cluster}].colori`);\n    const ordineCluster = get(ordineByCluster, `[${cluster}].ordine`);\n    const ordineMotivo = get(ordineMotivoByMotivo, motivo);\n\n    const startMotivoNorm = +item.start_motivo / tot;\n    const endMotivoNorm = +item.end_motivo / tot;\n    const y = ordineMotivo !== undefined ? scaleY(ordineMotivo) : undefined;\n    const x = (startMotivoNorm + endMotivoNorm) / 2;\n\n    return {\n      ...item,\n      startMotivoNorm,\n      endMotivoNorm,\n      cluster,\n      coloreCluster,\n      ordineCluster: ordineCluster ? +ordineCluster : undefined,\n      ordineMotivo,\n      y,\n      x,\n    };\n  });\n\n  const byRacconto = groupBy(datasetLinesNormalized, \"titolo racconto\");\n\n  let racconti = sortBy(\n    uniqBy(datasetLines, (item) => item[\"titolo racconto\"]).map((item) => ({\n      titolo: item[\"titolo racconto\"],\n      anno: item[\"anno\"],\n      mese: item[\"mese\"],\n    })),\n    (item) => {\n      const anno = +item.anno;\n      const mese = +item.mese;\n\n      return `${anno.toFixed(4)}${mese.toFixed(2)}`;\n    }\n  );\n  // //#TODO: remove this (limiting for debug)\n  // racconti = take(racconti, 5)\n  //pre-computing filters\n  racconti = racconti.map((racconto) => {\n    const minDatum = minBy(\n      byRacconto[racconto.titolo],\n      (item) => item.ordineMotivo\n    );\n    const maxDatum = maxBy(\n      byRacconto[racconto.titolo],\n      (item) => item.ordineMotivo\n    );\n    const minX = byRacconto[racconto.titolo][0].x\n    const maxX = byRacconto[racconto.titolo][byRacconto[racconto.titolo].length - 1].x\n    const fixScale = scaleLinear().domain([minX, maxX]).range([0, 1])\n    // console.log(123, racconto.titolo, minDatum, maxDatum)\n    return { ...racconto, minDatum, maxDatum, minX, maxX, fixScale };\n  });\n\n\n  const raccontiByRacconto = keyBy(racconti, 'titolo')\n  const byRaccontoRemapped = mapValues(byRacconto, (values, k) => values.map(v => ({\n    ...v,\n    x: raccontiByRacconto[k].fixScale(v.x)\n\n  })))\n\n  // console.log(\"V\", byRacconto, byRaccontoRemapped)\n\n  return {\n    tipologie,\n    tipologieByTipologia,\n    colors,\n    racconti,\n    // byRacconto,\n    byRacconto: byRaccontoRemapped,\n  };\n}\n\nexport const splitPath = (d) => {\n  const pieces = d.split(\"C\");\n  const paths = pieces.reduce((acc, item, i) => {\n    if (i === 0) {\n      return acc;\n    }\n    if (i === 1) {\n      const path = pieces[0] + \"C\" + pieces[i];\n      acc.push(path);\n    } else {\n      const [a, b] = pieces[i - 1].split(\",\").reverse();\n      const path = `M${b},${a}C${pieces[i]}`;\n      acc.push(path);\n    }\n\n    return acc;\n  }, []);\n\n  return paths;\n};\n","import React from 'react'\n\nfunction GrandientsDefinitions({ prefix = '', gradientsType, byTipologia }) {\n  return (\n    <defs>\n      {gradientsType.map((gradientType) => {\n        const [tipoFromName, tipoToName] = gradientType.split('-')\n        const tipoFrom = byTipologia[tipoFromName]\n        const tipoTo = byTipologia[tipoToName]\n        return (\n          <linearGradient\n            x1=\"0\"\n            x2=\"0\"\n            y1=\"0\"\n            y2=\"1\"\n            key={gradientType}\n            id={prefix + gradientType}\n          >\n            {+tipoFrom['ordine tipologia'] > +tipoTo['ordine tipologia'] && (\n              <>\n                <stop offset=\"0%\" stopColor={tipoFrom.colore.colori}></stop>\n                <stop offset=\"100%\" stopColor={tipoTo.colore.colori}></stop>\n              </>\n            )}\n            {+tipoFrom['ordine tipologia'] < +tipoTo['ordine tipologia'] && (\n              <>\n                <stop offset=\"0%\" stopColor={tipoTo.colore.colori}></stop>\n                <stop offset=\"100%\" stopColor={tipoFrom.colore.colori}></stop>\n              </>\n            )}\n          </linearGradient>\n        )\n      })}\n    </defs>\n  )\n}\n\nexport default React.memo(GrandientsDefinitions)\n","import React, { useRef, useState, useLayoutEffect, useContext } from 'react'\nimport { CurretTramaViewContext } from './Trama2Content'\n\nconst RaccontoInfoBoxSvg = ({ titolo, x, y = 0, onClick }) => {\n  const containerRef = useRef(null)\n  const [measures, setMeasures] = useState(null)\n  const view = useContext(CurretTramaViewContext)\n\n  useLayoutEffect(() => {\n    const m = containerRef.current.getBoundingClientRect()\n    setMeasures(m)\n  }, [titolo, view])\n\n  return (\n    <g\n      onClick={onClick}\n      transform={`translate(${x}, ${y})`}\n      style={{ cursor: 'pointer' }}\n    >\n      {measures && (\n        <g transform={`translate(${-measures.width - 40}, -15)`}>\n          <rect\n            height={22}\n            width={measures.width + 35}\n            rx={5}\n            className=\"trama2-info-box\"\n          />\n          <line\n            x1={measures.width + 18}\n            x2={measures.width + 18}\n            y1={0}\n            y2={22}\n            className=\"trama2-info-box\"\n          />\n          <text stroke={'var(--dark-blue)'} x={measures.width + 22} y={15}>\n            o\n          </text>\n        </g>\n      )}\n      <text\n        ref={containerRef}\n        x={-30}\n        y={0}\n        style={{ textAnchor: 'end', userSelect: 'none' }}\n      >\n        {titolo}\n      </text>\n    </g>\n  )\n}\n\nexport default RaccontoInfoBoxSvg\n","import React, { useState } from 'react'\nimport Draggable from 'react-draggable'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faArrowLeft, faArrowRight } from '@fortawesome/free-solid-svg-icons'\n\nexport const BRUSH_HANDLE_WIDTH = 12\nconst Brush = React.memo(({\n  width,\n  onNextClick,\n  onPrevClick,\n  x: controlledX,\n  onXChange,\n  className = 'trama2-brush-container',\n}) => {\n  const [uncontrolledX, setX] = useState(width - BRUSH_HANDLE_WIDTH / 2)\n  const x = controlledX === undefined ? uncontrolledX : controlledX\n\n  return (\n    <>\n      <div\n        style={{\n          transform: `translateX(${x + BRUSH_HANDLE_WIDTH / 2}px)`,\n        }}\n        className=\"trama2-index-line\"\n      />\n      <div className={`${className} trama2-brush-container-flex`}>\n        <button\n          className=\"trama2-brush-button trama2-prev-brush-button\"\n          onClick={() => {\n            if (controlledX !== undefined) {\n              onPrevClick()\n              return\n            }\n            onPrevClick(x + BRUSH_HANDLE_WIDTH / 2, (rawNextX) => {\n              const nextX = rawNextX - BRUSH_HANDLE_WIDTH / 2\n              if (nextX >= 0 && x <= width - BRUSH_HANDLE_WIDTH / 2) {\n                setX(nextX)\n              }\n            })\n          }}\n        >\n          <FontAwesomeIcon icon={faArrowLeft} />\n        </button>\n        <div className=\"trama2-list-brush\">\n          <Draggable\n            axis=\"x\"\n            position={{ x, y: 0 }}\n            bounds={{\n              left: 0,\n              right: width - BRUSH_HANDLE_WIDTH / 2,\n            }}\n            onDrag={(e, position) => {\n              if (controlledX === undefined) {\n                setX(position.x)\n              } else {\n                onXChange(position.x)\n              }\n            }}\n          >\n            <div className=\"trama2-drag-handle\" />\n          </Draggable>\n        </div>\n        <button\n          className=\"trama2-brush-button trama2-next-brush-button\"\n          onClick={() => {\n            if (controlledX !== undefined) {\n              onNextClick()\n              return\n            }\n            onNextClick(x + BRUSH_HANDLE_WIDTH / 2, (rawNextX) => {\n              const nextX = rawNextX - BRUSH_HANDLE_WIDTH / 2\n              if (nextX >= 0 && x <= width - BRUSH_HANDLE_WIDTH / 2) {\n                setX(nextX)\n              }\n            })\n          }}\n        >\n          <FontAwesomeIcon icon={faArrowRight} />\n        </button>\n      </div>\n    </>\n  )\n})\nexport default Brush","import ReactDOM from 'react-dom'\nimport React, {\n  useRef,\n  useState,\n  useMemo,\n  useCallback,\n  useEffect,\n  useLayoutEffect,\n  useImperativeHandle,\n  forwardRef,\n} from 'react'\nimport { line, curveMonotoneX, curveStep } from 'd3-shape'\nimport { scaleLinear } from 'd3-scale'\nimport { zoom } from 'd3-zoom'\nimport { select, selectAll, event as currentEvent } from 'd3-selection'\n\nimport range from 'lodash/range'\nimport find from 'lodash/find'\nimport findIndex from 'lodash/findIndex'\n\nimport { splitPath, makeScalaMotivoY } from './utils'\nimport GradientsDefinitions from './GradientsDefinitions'\nimport RaccontoInfoBoxSvg from './RaccontoInfoBoxSvg'\nimport Brush, { BRUSH_HANDLE_WIDTH } from './Brush'\n\nconst lineGenerator = line()\n  .x((d) => d.x)\n  .y((d) => d.y)\n  .curve(curveMonotoneX)\n\nconst SubPathsWithColors = React.memo(({ subPaths, data, itemSelected }) => {\n  return (\n    <g>\n      {subPaths.map((subPath, i) => {\n        const isFill = data[i + 1].motivo_type === data[i].motivo_type\n        const strokeSelected = isFill\n          ? data[i].colori\n          : `url('#${data[i + 1].motivo_type}-${data[i].motivo_type}')`\n        return (\n          <path\n            key={i}\n            d={subPath}\n            className=\"trama2-line\"\n            style={{\n              stroke: itemSelected ? strokeSelected : '#ddd',\n              fill: 'none',\n            }}\n          ></path>\n        )\n      })}\n    </g>\n  )\n})\n\nconst TramaPoints = React.memo(({ data }) => {\n  return (\n    <g className=\"trama2-pointz\">\n      {data.map((d, i) => {\n        if (i === 0) {\n          return (\n            <rect key={i} x={d.x} y={d.y} className=\"trama2-start-symbol\">\n              <title>{d.motivo_type}</title>\n            </rect>\n          )\n        }\n        if (i === data.length - 1) {\n          return (\n            <rect\n              key={i}\n              x={d.x}\n              y={d.y}\n              style={{\n                transformOrigin: `${d.x}px ${d.y}px`,\n              }}\n              className=\"trama2-end-symbol\"\n            >\n              <title>{d.motivo_type}</title>\n            </rect>\n          )\n        }\n        return (\n          <circle className=\"trama2-circle\" key={i} cx={d.x} cy={d.y} r={2}>\n            <title>{d.motivo_type}</title>\n          </circle>\n        )\n      })}\n    </g>\n  )\n})\n\nconst LineaTrama = React.memo(\n  ({\n    racconto,\n    data,\n    xScale,\n    selectedPoint,\n    width,\n    height,\n    index,\n    gradient,\n    itemSelected,\n    toggleItem,\n    onRaccontoClick,\n  }) => {\n    const [d, subPaths] = useMemo(() => {\n      const d = lineGenerator(data)\n      const subPaths = splitPath(d)\n      return [d, subPaths]\n    }, [data])\n\n    const handleClickRacconto = useCallback(\n      (e) => {\n        onRaccontoClick(data, e)\n      },\n      [onRaccontoClick, data]\n    )\n\n    const element = (\n      <g data-subracconto={data.racconto.titolo}>\n        <SubPathsWithColors\n          subPaths={subPaths}\n          data={data}\n          itemSelected={itemSelected}\n        />\n        <path\n          d={d}\n          onClick={() => toggleItem(racconto.titolo)}\n          className={`trama2-pointer ${itemSelected ? 'selected' : ''}`}\n        ></path>\n\n        {itemSelected && (\n          <g>\n            <TramaPoints data={data} />\n            <RaccontoInfoBoxSvg\n              onClick={handleClickRacconto}\n              y={-10}\n              x={width}\n              titolo={`${data.racconto.titolo}, ${data.racconto.anno}`}\n            />\n          </g>\n        )}\n        {selectedPoint && (\n          <g>\n            <text\n              style={{\n                transformOrigin: `${selectedPoint.x}px ${selectedPoint.y}px`,\n                transform:\n                  selectedPoint.originalX < 0.2\n                    ? 'rotate(30deg) translate(5px, 5px)'\n                    : `rotate(-30deg) translateX(-10px)`,\n              }}\n              x={selectedPoint.x}\n              y={selectedPoint.y}\n              textAnchor={selectedPoint.originalX < 0.2 ? 'start' : 'end'}\n            >\n              {selectedPoint.motivo_type}\n            </text>\n          </g>\n        )}\n      </g>\n    )\n    if (itemSelected) {\n      return ReactDOM.createPortal(\n        element,\n        document.getElementsByClassName('linea-container-selected')[index]\n      )\n    }\n    return element\n  }\n)\n\nconst SelectedContainers = React.memo(({ n }) => {\n  return (\n    <g>\n      {range(n).map((i) => (\n        <g key={i} className=\"linea-container-selected\" />\n      ))}\n    </g>\n  )\n})\n\nconst LineeTramaList = React.memo(\n  ({\n    measures,\n    dataRacconti,\n    currentXHoverRacconti,\n    racconti,\n    onRaccontoClick,\n    height,\n    scalaColore,\n    scalaMotivoY,\n    selected,\n    toggleSelect,\n    xScale,\n  }) => {\n    return (\n      <g>\n        {dataRacconti.map((datum, i) => {\n          return (\n            <g key={i} className=\"linea-container\">\n              <LineaTrama\n                selectedPoint={\n                  currentXHoverRacconti &&\n                  currentXHoverRacconti[racconti[i].titolo]\n                    ? currentXHoverRacconti[racconti[i].titolo]\n                    : null\n                }\n                onRaccontoClick={onRaccontoClick}\n                scalaColore={scalaColore}\n                scalaMotivoY={scalaMotivoY}\n                index={i}\n                width={measures.width}\n                height={height}\n                itemSelected={selected[racconti[i].titolo]}\n                toggleItem={toggleSelect}\n                xScale={xScale}\n                racconto={racconti[i]}\n                data={datum}\n              ></LineaTrama>\n            </g>\n          )\n        })}\n      </g>\n    )\n  }\n)\n\nconst HORIZ_PADDING = 20\n\nfunction imperativeTranslate(currentScaleY) {\n  selectAll('.linea-container').attr(\n    'transform',\n    (d, i) => 'translate(0, ' + currentScaleY(i) + ')'\n  )\n  selectAll('.linea-container-selected').attr(\n    'transform',\n    (d, i) => 'translate(0, ' + currentScaleY(i) + ')'\n  )\n}\n\nfunction LineeTramaWithMeasures(\n  {\n    racconti = [],\n    data = {},\n    height,\n    scalaColore,\n    scalaMotivoY,\n    colors,\n    selected,\n    toggleSelect,\n    onRaccontoClick,\n    tipologie,\n    tipologieByTipologia,\n    setYears,\n    measures,\n  },\n  ref\n) {\n  const svgRef = useRef(null)\n  const lastZoomedScaleYRef = useRef(null)\n\n  useEffect(() => {\n    if (measures) {\n      const svg = svgRef.current\n      const scaleY = scaleLinear()\n        .domain([0, racconti.length])\n        .range([0 + height, measures.height - height])\n\n      imperativeTranslate(scaleY)\n\n      function handleZoom() {\n        const newScaleY = currentEvent.transform.rescaleY(scaleY)\n        lastZoomedScaleYRef.current = newScaleY\n        imperativeTranslate(newScaleY)\n\n        const domain = newScaleY.domain()\n        const lowIndex = Math.max(0, Math.floor(domain[0]))\n        const hiIndex = Math.min(racconti.length - 1, Math.floor(domain[1]))\n\n        setYears((prevYears) => {\n          const newYears = [racconti[lowIndex].anno, racconti[hiIndex].anno]\n          if (newYears[0] !== prevYears[0] || newYears[1] !== prevYears[1]) {\n            return newYears\n          }\n          return prevYears\n        })\n      }\n\n      const selection = select(svg)\n      selection.call(\n        zoom()\n          .scaleExtent([1, 10])\n          .translateExtent([\n            [0, 0],\n            [measures.width, measures.height],\n          ])\n          .on('zoom', handleZoom)\n      )\n      return () => {\n        selection.on('.zoom', null)\n      }\n    }\n  }, [height, measures, racconti, setYears])\n\n  const xScale = useMemo(() => {\n    if (!measures) {\n      return null\n    }\n    return scaleLinear()\n      .domain([0, 1])\n      .range([HORIZ_PADDING, measures.width - HORIZ_PADDING])\n  }, [measures])\n\n  const [dataRacconti, dataByRacconti, gradientsType] = useMemo(() => {\n    if (!xScale) {\n      return [[], []]\n    }\n    const dataByRaccontiFinal = {}\n    const gradientsSet = new Set()\n    const finalDataRacconti = racconti.map((racconto) => {\n      let out = data[racconto.titolo].filter((d) => d.y !== undefined)\n      out = out.map((d, i) => {\n        if (i > 0) {\n          gradientsSet.add(d.motivo_type + '-' + out[i - 1].motivo_type)\n        }\n        return {\n          ...d,\n          colori: tipologieByTipologia[d.motivo_type].colore.colori,\n          originalX: d.x,\n          x: xScale(d.x),\n          y: d.y,\n        }\n      })\n      out.racconto = racconto\n      dataByRaccontiFinal[racconto.titolo] = out\n      return out\n    })\n    return [finalDataRacconti, dataByRaccontiFinal, Array.from(gradientsSet)]\n  }, [data, racconti, xScale, tipologieByTipologia])\n\n  const [x, setX] = useState(measures.width - BRUSH_HANDLE_WIDTH / 2)\n\n  useEffect(() => {\n    const initialTitle = 'Il cavaliere inesistente'\n    const raccontoData = dataByRacconti[initialTitle]\n    const raccontoDatum = find(raccontoData, (datum) => {\n      if (\n        datum.originalX.toFixed(2) === '0.77' &&\n        datum.motivo_type === 'viaggio'\n      ) {\n        return true\n      }\n      return false\n    })\n    if (raccontoDatum) {\n      setX(+raccontoDatum.x - BRUSH_HANDLE_WIDTH / 2)\n    }\n    toggleSelect(initialTitle)\n  }, [toggleSelect, dataByRacconti])\n\n  const handleNexPoint = useCallback(() => {\n    const nextPoints = Object.keys(selected).reduce((acc, titolo) => {\n      const dataTrama = dataByRacconti[titolo]\n      dataTrama.forEach((datum) => {\n        if (datum.x > x + BRUSH_HANDLE_WIDTH / 2) {\n          acc.push(datum.x)\n        }\n      })\n      return acc\n    }, [])\n    if (nextPoints.length) {\n      const nextX = Math.min(...nextPoints) - BRUSH_HANDLE_WIDTH / 2\n      if (nextX >= 0 && x <= measures.width - BRUSH_HANDLE_WIDTH / 2) {\n        setX(nextX)\n      }\n    }\n  }, [dataByRacconti, measures, selected, x])\n\n  const handlePrevPoint = useCallback(() => {\n    const nextPoints = Object.keys(selected).reduce((acc, titolo) => {\n      const dataTrama = dataByRacconti[titolo]\n      dataTrama.forEach((datum) => {\n        if (datum.x < x + BRUSH_HANDLE_WIDTH / 2) {\n          acc.push(datum.x)\n        }\n      })\n      return acc\n    }, [])\n    if (nextPoints.length) {\n      const nextX = Math.max(...nextPoints) - BRUSH_HANDLE_WIDTH / 2\n      if (nextX >= 0 && x <= measures.width - BRUSH_HANDLE_WIDTH / 2) {\n        setX(nextX)\n      }\n    }\n  }, [dataByRacconti, selected, measures, x])\n\n  const trameByPoints = useMemo(() => {\n    return Object.keys(selected).reduce((acc, titolo) => {\n      const racconto = dataByRacconti[titolo]\n      racconto.forEach((datum) => {\n        const xKey = datum.x.toFixed(0)\n        acc[xKey] = acc[xKey] || {}\n        acc[xKey][titolo] = {\n          motivo_type: datum.motivo_type,\n          originalX: datum.originalX,\n          x: datum.x,\n          y: datum.y,\n        }\n      })\n      return acc\n    }, {})\n  }, [selected, dataByRacconti])\n\n  const xPoint = +x.toFixed(0) + BRUSH_HANDLE_WIDTH / 2\n  const currentXHoverRacconti = trameByPoints[xPoint]\n\n  useImperativeHandle(ref, () => ({\n    rotateView: (cb) => {\n      const scaleYOriginal = scaleLinear()\n        .domain([0, racconti.length])\n        .range([0 + height, measures.height - height])\n      imperativeTranslate(scaleYOriginal)\n\n      const raccontoDataIndex = findIndex(\n        dataRacconti,\n        (r) => r.racconto.titolo === 'Il cavaliere inesistente'\n      )\n      const raccontoData = dataRacconti[raccontoDataIndex]\n\n      const scaleXBoxPlot = scaleLinear()\n        .domain([0, racconti.length])\n        .range([10, measures.width - 10])\n\n      const flyToX = scaleXBoxPlot(raccontoDataIndex)\n\n      // Hide Points\n      document\n        .querySelectorAll(\n          '[data-subracconto=\"Il cavaliere inesistente\"] .trama2-pointz'\n        )\n        .forEach((p) => (p.style.display = 'none'))\n      const paths = document.querySelectorAll(\n        '[data-subracconto=\"Il cavaliere inesistente\"] path.trama2-line'\n      )\n      let scaleMotivo = makeScalaMotivoY(600)\n      scaleMotivo.range([-200, 400])\n\n      let start = null\n      function animate(timestamp) {\n        if (start === null) {\n          start = timestamp\n        }\n        const k = (timestamp - start) / 1500\n\n        const dataFly = []\n        for (let i = 1; i < raccontoData.length; i++) {\n          const prevDatum = raccontoData[i - 1]\n          const datum = raccontoData[i]\n\n          const y1 = prevDatum.y * (1 - k) + k * 25\n          const y2 = datum.y * (1 - k) + k * 25\n\n          const x1 = prevDatum.x * (1 - k) + k * flyToX\n          const x2 = datum.x * (1 - k) + k * flyToX\n\n          dataFly.push(`M ${x1} ${y1} L ${x2} ${y2}`)\n        }\n        paths.forEach((path, i) => {\n          cachedResetStrokes[i] = path.style.stroke\n          path.setAttribute('d', dataFly[i])\n        })\n\n        if (k < 1) {\n          window.requestAnimationFrame(animate)\n        } else {\n          start = null\n          window.requestAnimationFrame(animate2)\n        }\n      }\n\n      const cachedResetStrokes = []\n\n      function animate2(timestamp) {\n        if (start === null) {\n          start = timestamp\n        }\n        const k = (timestamp - start) / 1000\n\n        const dataFly = []\n        for (let i = 1; i < raccontoData.length; i++) {\n          const prevDatum = raccontoData[i - 1]\n          const datum = raccontoData[i]\n\n          const y1 = 25 * (1 - k) + k * scaleMotivo(prevDatum.ordineMotivo)\n          const y2 = 25 * (1 - k) + k * scaleMotivo(datum.ordineMotivo)\n\n          const x1 = flyToX\n          const x2 = flyToX\n\n          dataFly.push(`M ${x1} ${y1} L ${x2} ${y2}`)\n        }\n        paths.forEach((path, i) => {\n          path.setAttribute('d', dataFly[i])\n          path.style.stroke = 'var(--blue)'\n        })\n        if (k < 1) {\n          window.requestAnimationFrame(animate2)\n        } else {\n          cb()\n          // CLEAN UP ANIMATION\n\n          // RESET ZOOM STATE\n          const lastZoomScaleY = lastZoomedScaleYRef.current\n          if (lastZoomScaleY) {\n            imperativeTranslate(lastZoomScaleY)\n          }\n          // RESET SELECTED LINE\n          const resetDPath = lineGenerator(raccontoData)\n          const resettedDSubPaths = splitPath(resetDPath)\n          paths.forEach((path, i) => {\n            path.setAttribute('d', resettedDSubPaths[i])\n            path.style.stroke = cachedResetStrokes[i]\n          })\n          // Show Points\n          document\n            .querySelectorAll(\n              '[data-subracconto=\"Il cavaliere inesistente\"] .trama2-pointz'\n            )\n            .forEach((p) => (p.style.display = 'initial'))\n        }\n      }\n\n      window.requestAnimationFrame(animate)\n    },\n  }))\n\n  return (\n    <>\n      <div className=\"trama2-top-legend-list\">Scrolla per zoomare</div>\n      <svg\n        style={{\n          height: measures.height,\n          width: measures.width,\n        }}\n        ref={svgRef}\n      >\n        <GradientsDefinitions\n          byTipologia={tipologieByTipologia}\n          gradientsType={gradientsType}\n        />\n        <g className=\"wrapper\">\n          <LineeTramaList\n            measures={measures}\n            dataRacconti={dataRacconti}\n            currentXHoverRacconti={currentXHoverRacconti}\n            racconti={racconti}\n            onRaccontoClick={onRaccontoClick}\n            height={height}\n            scalaColore={scalaColore}\n            scalaMotivoY={scalaMotivoY}\n            selected={selected}\n            toggleSelect={toggleSelect}\n            xScale={xScale}\n          />\n          <SelectedContainers n={dataRacconti.length} />\n        </g>\n      </svg>\n      <Brush\n        x={x}\n        onXChange={setX}\n        onPrevClick={handlePrevPoint}\n        onNextClick={handleNexPoint}\n        width={measures.width}\n        className=\"trama2-brush-for-list\"\n      />\n      <div className=\"trama2-brush-legend-list\">\n        <div>Inizio del testo</div>\n        <div>Lunghezza del testo in caratteri</div>\n        <div>Fine del testo</div>\n      </div>\n    </>\n  )\n}\n\nlet LineeTramaWithMeasuresReffed = forwardRef(LineeTramaWithMeasures)\n\nfunction LineeTrama(props, ref) {\n  const containerRef = useRef(null)\n  const [measures, setMeasures] = useState(null)\n\n  useLayoutEffect(() => {\n    const m = containerRef.current.getBoundingClientRect()\n    setMeasures(m)\n  }, [])\n\n  const childRef = useRef(null)\n\n  useImperativeHandle(ref, () => ({\n    rotateView: (cb) => {\n      childRef.current.rotateView(cb)\n      // const scaleY = scaleLinear()\n      //   .domain([0, racconti.length])\n      //   .range([0 + height, measures.height - height])\n\n      // const mainTransition = selectAll('.linea-container')\n      //   .transition()\n      //   .duration(1000)\n      //   .attr('transform', (d, i) => 'translate(0, ' + scaleY(i) + ')')\n      //   .end()\n\n      // const selectedTransition = selectAll('.linea-container-selected')\n      //   .transition()\n      //   .duration(1000)\n      //   .attr('transform', (d, i) => 'translate(0, ' + scaleY(i) + ')')\n      //   .end()\n\n      // Promise.all([mainTransition, selectedTransition]).then(cb)\n    },\n  }))\n\n  return (\n    <div\n      ref={containerRef}\n      className=\"w-100 h-100\"\n      style={{ overflow: 'hidden' }}\n    >\n      {measures && (\n        <LineeTramaWithMeasuresReffed\n          ref={childRef}\n          {...props}\n          measures={measures}\n        />\n      )}\n    </div>\n  )\n}\n\nexport default React.memo(forwardRef(LineeTrama))\n","import objectWithoutPropertiesLoose from \"./objectWithoutPropertiesLoose\";\nexport default function _objectWithoutProperties(source, excluded) {\n  if (source == null) return {};\n  var target = objectWithoutPropertiesLoose(source, excluded);\n  var key, i;\n\n  if (Object.getOwnPropertySymbols) {\n    var sourceSymbolKeys = Object.getOwnPropertySymbols(source);\n\n    for (i = 0; i < sourceSymbolKeys.length; i++) {\n      key = sourceSymbolKeys[i];\n      if (excluded.indexOf(key) >= 0) continue;\n      if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;\n      target[key] = source[key];\n    }\n  }\n\n  return target;\n}","export default function _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n\n  return target;\n}","import React from 'react'\n\nconst rad2 = Math.sqrt(2)\nconst points = [\n  [0, 50 * rad2],\n  [50 * (rad2 - 1), 50],\n  [50, 50],\n  [50, 50 * (rad2 - 1)],\n\n  [50 * rad2, 0],\n  [50, 50 * (1 - rad2)],\n  [50, -50],\n  [50 * (rad2 - 1), -50],\n  [0, -50 * rad2],\n\n  [50 * (1 - rad2), -50],\n  [-50, -50],\n  [-50, 50 * (1 - rad2)],\n  [-50 * rad2, 0],\n\n  [-50, 50 * (rad2 - 1)],\n  [-50, 50],\n  [50 * (1 - rad2), 50],\n  [0, 50 * rad2],\n]\n\nexport default function Star({ size, style, className, svgStyle, ...props }) {\n  const strokeWidth = (100 * rad2) / size\n\n  const move = `M ${points[0][0]} ${points[0][1]} L`\n  const lines = points.map(([x, y]) => `${x} ${y}`).join(' L ')\n  const d = move + lines\n  return (\n    <svg\n      style={svgStyle}\n      viewBox={`${-50 * rad2} ${-50 * rad2} ${100 * rad2} ${100 * rad2}`}\n      width={size}\n      height={size}\n      {...props}\n    >\n      <path\n        strokeWidth={strokeWidth}\n        stroke=\"#000\"\n        className={className}\n        style={style}\n        d={d}\n      />\n    </svg>\n  )\n}\n","import React from 'react'\n\nfunction BoxPlotGrandientsDefinitions({ prefix = '', gradientsType, byTipologia, scalaMotivo, height }) {\n\n  const colorsItems = Object.values(byTipologia).sort(item => +item.ordineMotivo)\n  const delta = 100 / (colorsItems.length - 1)\n\n  return (\n    <defs>\n      {gradientsType.map(({racconto, uniqueItems}) => {\n\n\n\n\n        const motivi = uniqueItems.map(item => item.motivo_type)\n\n\n        return (\n          <linearGradient\n            x1=\"0\"\n            x2=\"0\"\n            y1=\"0\"\n            y2={height}\n            key={racconto.titolo}\n            id={prefix + racconto.titolo}\n            gradientUnits={'userSpaceOnUse'}\n          >\n            {colorsItems.map((item, i) => {\n              if(motivi.indexOf(item.tipologia) === -1){\n                return null\n              }\n              return <stop key={i} offset={`${delta*i}%`} stopColor={item.colore.colori}>\n\n\n              </stop>\n            })}\n            {/* <stop offset=\"0%\" stopColor=\"#000\"></stop>\n            <stop offset=\"100%\" stopColor=\"#fff\"></stop> */}\n            {/* {+tipoFrom['ordine tipologia'] > +tipoTo['ordine tipologia'] && (\n              <>\n                <stop offset=\"0%\" stopColor={tipoFrom.colore.colori}></stop>\n                <stop offset=\"100%\" stopColor={tipoTo.colore.colori}></stop>\n              </>\n            )}\n            {+tipoFrom['ordine tipologia'] < +tipoTo['ordine tipologia'] && (\n              <>\n                <stop offset=\"0%\" stopColor={tipoTo.colore.colori}></stop>\n                <stop offset=\"100%\" stopColor={tipoFrom.colore.colori}></stop>\n              </>\n            )} */}\n          </linearGradient>\n        )\n      })}\n    </defs>\n  )\n}\n\nexport default React.memo(BoxPlotGrandientsDefinitions)\n","import ReactDOM from 'react-dom'\nimport React, {\n  useRef,\n  useState,\n  useMemo,\n  useCallback,\n  useEffect,\n  useLayoutEffect,\n  forwardRef,\n} from 'react'\nimport { scaleLinear, scaleTime } from 'd3-scale'\nimport { zoom } from 'd3-zoom'\nimport { select, selectAll, event as currentEvent } from 'd3-selection'\nimport { axisBottom } from 'd3-axis'\nimport Star from './Star'\n\nimport head from 'lodash/head'\nimport _last from 'lodash/last'\nimport uniqBy from 'lodash/uniqBy'\nimport minBy from 'lodash/minBy'\nimport maxBy from 'lodash/maxBy'\n\nimport { motivoExtent } from './utils'\nimport BoxPlotGradientsDefinitions from './BoxPlotGradientsDefinitions'\nimport Brush from './Brush'\n\nconst BASE_WIDTH_BAR = 5\n\nconst BoxPlotElement = React.memo(\n  ({\n    zoomFactor,\n    racconto,\n    data,\n    xScale,\n    width,\n    height,\n    index,\n    gradient,\n    itemSelected,\n    toggleItem,\n    yScale,\n    onRaccontoClick,\n    showBoxInOpacity,\n    onGlyphoClick,\n  }) => {\n    const handleClickRacconto = useCallback(\n      (e) => {\n        onRaccontoClick(data, e)\n      },\n      [onRaccontoClick, data]\n    )\n\n    const bottom = yScale(data.min.ordineMotivo)\n    const top = yScale(data.max.ordineMotivo)\n    const h = bottom - top\n\n    const fill = itemSelected ? `url(\"#${data.racconto.titolo}\")` : '#ddd'\n    const widthBar = BASE_WIDTH_BAR * zoomFactor\n\n    return (\n      <g>\n        {itemSelected && (\n          <text\n            style={{ transform: 'rotate(-30deg)', fontSize: 12 }}\n            x={0}\n            y={0}\n          >\n            {data.racconto.titolo}\n          </text>\n        )}\n        <rect\n          width={widthBar}\n          height={h}\n          y={top}\n          style={{ fill }}\n          onClick={() => toggleItem(data.racconto.titolo)}\n          stroke=\"#ccc\"\n          fillOpacity={0.6}\n        >\n          <title>{data.racconto.titolo}</title>\n        </rect>\n\n        {itemSelected && showBoxInOpacity && (\n          <g>\n            <rect\n              width={widthBar}\n              className=\"trama2-box-plot-partial-hide-bar\"\n              y={top}\n              height={\n                Math.min(\n                  yScale(data.first.ordineMotivo),\n                  yScale(data.last.ordineMotivo)\n                ) - top\n              }\n            />\n            <rect\n              width={widthBar}\n              className=\"trama2-box-plot-partial-hide-bar\"\n              y={Math.max(\n                yScale(data.first.ordineMotivo),\n                yScale(data.last.ordineMotivo)\n              )}\n              height={\n                bottom -\n                Math.max(\n                  yScale(data.first.ordineMotivo),\n                  yScale(data.last.ordineMotivo)\n                )\n              }\n            />\n          </g>\n        )}\n\n        {data.first.ordineMotivo === data.last.ordineMotivo ? (\n          <g\n            transform={`translate(${(widthBar * (1 - Math.sqrt(2))) / 2}, ${\n              yScale(data.first.ordineMotivo) - widthBar / 2\n            })`}\n          >\n            <Star\n              svgStyle={{ cursor: 'pointer' }}\n              onClick={onGlyphoClick}\n              size={widthBar * Math.sqrt(2)}\n              className=\"trama2-box-plot-same-start-end-symbol\"\n            />\n          </g>\n        ) : (\n          <g>\n            <rect\n              style={{\n                cursor: 'pointer',\n              }}\n              onClick={onGlyphoClick}\n              width={widthBar}\n              height={widthBar}\n              className=\"trama2-box-plot-start-symbol\"\n              y={yScale(data.first.ordineMotivo) - widthBar / 2}\n            ></rect>\n            <rect\n              onClick={onGlyphoClick}\n              width={widthBar}\n              height={widthBar}\n              className=\"trama2-box-plot-end-symbol\"\n              y={yScale(data.last.ordineMotivo) - widthBar / 2}\n              style={{\n                cursor: 'pointer',\n                transformOrigin: `0px ${\n                  yScale(data.last.ordineMotivo) + widthBar / 4\n                }px`,\n              }}\n            ></rect>\n          </g>\n        )}\n      </g>\n    )\n  }\n)\n\nfunction BoxPlot(\n  {\n    racconti = [],\n    data = {},\n    height,\n    scalaColore,\n    colors,\n    selected,\n    toggleSelect,\n    onRaccontoClick,\n    tipologie,\n    tipologieByTipologia,\n  },\n  ref\n) {\n  const containerRef = useRef(null)\n  const svgRef = useRef(null)\n  const xAxisContainer = useRef()\n  const [measures, setMeasures] = useState(null)\n  const [translations, setTranslations] = useState([])\n  const [zoomFactor, setZoomFactor] = useState(1)\n\n  const actualScaleX = useRef(null)\n\n  useLayoutEffect(() => {\n    const m = containerRef.current.getBoundingClientRect()\n    setMeasures(m)\n  }, [])\n\n  useEffect(() => {\n    function declarativeTranslate(currentScaleX) {\n      const newTranslates = racconti.map((r, i) => {\n        return 'translate(' + currentScaleX(i) + ', 0)'\n      })\n      setTranslations(newTranslates)\n    }\n\n    function imperativeTranslate(currentScaleX) {\n      selectAll('.box-racconto-container').attr(\n        'transform',\n        (d, i) => 'translate(' + currentScaleX(i) + ', 0)'\n      )\n    }\n\n    function formatAxisTick(i) {\n      return racconti[i].anno\n    }\n\n    // const maTicks = uniqBy(\n    //   racconti.map((r, i) => ({ ...r, index: i })),\n    //   'anno'\n    // ).map((r) => r.index)\n\n    if (measures) {\n      const svg = svgRef.current\n      const scaleX = scaleLinear()\n        .domain([0, racconti.length])\n        .range([10, measures.width - 10])\n\n      actualScaleX.current = scaleX\n      imperativeTranslate(scaleX)\n      // declarativeTranslate(scaleY)\n\n      function handleZoom() {\n        const newScaleX = currentEvent.transform.rescaleX(scaleX)\n        imperativeTranslate(newScaleX)\n        const zoomFactor = Math.round(currentEvent.transform.k / 2)\n\n        // const domain = newScaleX.domain()\n        // const lowIndex = Math.max(0, Math.floor(domain[0]))\n        // const hiIndex = Math.min(racconti.length - 1, Math.floor(domain[1]))\n        const batchUpdates = ReactDOM.unstable_batchedUpdates || ((cb) => cb())\n        batchUpdates(() => {\n          setZoomFactor(zoomFactor)\n          // setYears((prevYears) => {\n          //   const newYears = [racconti[lowIndex].anno, racconti[hiIndex].anno]\n          //   if (newYears[0] !== prevYears[0] || newYears[1] !== prevYears[1]) {\n          //     return newYears\n          //   }\n          //   return prevYears\n          // })\n        })\n        actualScaleX.current = newScaleX\n        // declarativeTranslate(newScaleX)\n\n        // AXIS Rescale...\n        const axis = axisBottom(newScaleX)\n        axis.tickFormat(formatAxisTick)\n        // axis.tickValues(maTicks)\n        select(xAxisContainer.current).call(axis)\n      }\n\n      const axis = axisBottom(scaleX)\n\n      axis.tickFormat(formatAxisTick)\n      // axis.tickValues(maTicks)\n      select(xAxisContainer.current).call(axis)\n\n      const selection = select(svg)\n      selection.call(\n        zoom()\n          .scaleExtent([1, 5])\n          .translateExtent([\n            [0, 0],\n            [measures.width, measures.height],\n          ])\n          .on('zoom', handleZoom)\n      )\n      return () => {\n        selection.on('.zoom', null)\n      }\n    }\n  }, [height, measures, racconti])\n\n  const yScale = useMemo(() => {\n    return scaleLinear()\n      .domain(motivoExtent)\n      .range([height - 140, 0])\n  }, [height])\n\n  const scalaMotivo = useMemo(() => {\n    return scaleLinear().domain(motivoExtent).range([0, 1])\n  }, [])\n\n  const [dataRacconti, dataByRacconti, gradientsType] = useMemo(() => {\n    if (!yScale) {\n      return [[], []]\n    }\n    const finalDataByRacconti = {}\n    const gradientsSet = new Set()\n    const finalDataRacconti = racconti.map((racconto, i) => {\n      let dataForRacconto = data[racconto.titolo]\n        .filter((d) => d.y !== undefined)\n        .map((d) => ({\n          ...d,\n          colori: tipologieByTipologia[d.motivo_type].colore.colori,\n        }))\n      let first = head(dataForRacconto)\n      let last = _last(dataForRacconto)\n      let uniqueItems = uniqBy(\n        dataForRacconto,\n        (item) => item.motivo_type\n      ).sort((item) => item.ordineMotivo)\n      let min = minBy(dataForRacconto, (item) => item.ordineMotivo)\n      let max = maxBy(dataForRacconto, (item) => item.ordineMotivo)\n\n      let out = {\n        racconto,\n        first,\n        last,\n        min,\n        max,\n        uniqueItems,\n        index: i,\n      }\n      finalDataByRacconti[racconto.titolo] = out\n      gradientsSet.add(out)\n\n      out.racconto = racconto\n\n      return out\n    })\n    return [finalDataRacconti, finalDataByRacconti, Array.from(gradientsSet)]\n  }, [data, racconti, tipologieByTipologia, yScale])\n\n  // const handleNexPoint = useCallback(\n  //   (x, setX) => {\n  //     const widthBar = 5 * zoomFactor\n  //     const scaleX = actualScaleX.current\n  //     const nextPoints = Object.keys(selected).reduce((acc, titolo) => {\n  //       const dataTrama = dataByRacconti[titolo]\n  //       const realX = scaleX(dataTrama.index)\n  //       if (realX > x - widthBar / 2) {\n  //         acc.push(realX)\n  //       }\n  //       return acc\n  //     }, [])\n  //     if (nextPoints.length) {\n  //       setX(Math.min(...nextPoints) + widthBar / 2)\n  //     }\n  //   },\n  //   [dataByRacconti, selected, zoomFactor]\n  // )\n\n  // const handlePrevPoint = useCallback(\n  //   (x, setX) => {\n  //     const widthBar = 10 * zoomFactor\n  //     const scaleX = actualScaleX.current\n  //     const nextPoints = Object.keys(selected).reduce((acc, titolo) => {\n  //       const dataTrama = dataByRacconti[titolo]\n  //       const realX = scaleX(dataTrama.index)\n  //       if (realX < x - widthBar / 2) {\n  //         acc.push(realX)\n  //       }\n  //       return acc\n  //     }, [])\n  //     if (nextPoints.length) {\n  //       console.log('PREV', nextPoints, x)\n  //       setX(Math.max(...nextPoints) + widthBar / 2)\n  //     }\n  //   },\n  //   [dataByRacconti, selected, zoomFactor]\n  // )\n\n  // const [years, setYears] = useState([\n  //   racconti[0].anno,\n  //   racconti[racconti.length - 1].anno,\n  // ])\n\n  const [showBoxInOpacity, setShowBoxInOpacity] = useState(false)\n  const toggleBoxInOpacity = useCallback(\n    () => setShowBoxInOpacity((a) => !a),\n    []\n  )\n\n  const [enterInOpacity, setEnterInOpacity] = useState(false)\n\n  useEffect(() => setEnterInOpacity(true), [])\n\n  return (\n    <div\n      className={`trama2-boxplot-content ${\n        enterInOpacity ? 'trama2-box-plot-enter-in-opacity' : ''\n      }`}\n    >\n      <div\n        ref={containerRef}\n        className=\"w-100 h-100\"\n        style={{ overflow: 'hidden' }}\n      >\n        {measures && (\n          <svg\n            style={{\n              height: height,\n              width: measures.width,\n            }}\n            ref={svgRef}\n          >\n            <BoxPlotGradientsDefinitions\n              byTipologia={tipologieByTipologia}\n              gradientsType={gradientsType}\n              scalaMotivo={scalaMotivo}\n              height={height - 140}\n            />\n            <g className=\"wrapper\" style={{ transform: 'translate(0, 80px)' }}>\n              {measures &&\n                dataRacconti.map((datum, i) => {\n                  return (\n                    <g\n                      key={i}\n                      className=\"box-racconto-container\"\n                      style={{\n                        transform: translations[i],\n                      }}\n                    >\n                      <BoxPlotElement\n                        showBoxInOpacity={showBoxInOpacity}\n                        zoomFactor={zoomFactor}\n                        onRaccontoClick={onRaccontoClick}\n                        scalaColore={scalaColore}\n                        index={i}\n                        width={measures.width}\n                        height={measures.height}\n                        itemSelected={selected[racconti[i].titolo]}\n                        toggleItem={toggleSelect}\n                        racconto={racconti[i]}\n                        yScale={yScale}\n                        data={datum}\n                        onGlyphoClick={toggleBoxInOpacity}\n                      ></BoxPlotElement>\n                    </g>\n                  )\n                })}\n            </g>\n            <g\n              ref={xAxisContainer}\n              style={{ transform: `translateY(${height - 40}px)` }}\n            ></g>\n          </svg>\n        )}\n      </div>\n      {/* {measures && (\n        <Brush\n          className='trama2-brush-for-detail'\n          width={measures.width}\n          onNextClick={handleNexPoint}\n          onPrevClick={handlePrevPoint}\n        />\n      )} */}\n      {/* <div className=\"trama2-box-plot-year\">\n        <div>{years[0]}</div>\n        <div>Testi per ordine cronologico</div>\n        <div>{years[1]}</div>\n      </div> */}\n    </div>\n  )\n}\n\nexport default forwardRef(BoxPlot)\n","import React, { useMemo, useRef, useLayoutEffect, useState } from 'react'\nimport { line, curveMonotoneX } from 'd3-shape'\nimport { scaleLinear } from 'd3-scale'\nimport { makeScalaMotivoY, splitPath } from './utils'\nimport GradientsDefinitions from './GradientsDefinitions'\nimport MiniInfoBox from '../../general/MiniInfoBox'\nimport { groupBy, countBy, sortBy, orderBy, mapValues } from 'lodash'\n\nconst TRESHOLD_LABEL = 100\nfunction calculateLabelScore(data, i) {\n  let score = null\n  const datum = data[i]\n  for (let j = i + 1; j < data.length; j++) {\n    const lenX = Math.abs(data[j].x - datum.x)\n    const lenY = Math.abs(data[j].y - datum.y)\n    const len = Math.sqrt(lenX * lenX + lenY * lenY)\n\n    if (len < TRESHOLD_LABEL) {\n      if (score === null) {\n        score = parseInt(len)\n      } else {\n        score = Math.min(score, parseInt(TRESHOLD_LABEL - len))\n      }\n    }\n    if (lenX > TRESHOLD_LABEL) {\n      break\n    }\n  }\n  for (let j = i - 1; j >= 0; j--) {\n    const lenX = Math.abs(data[j].x - datum.x)\n    const lenY = Math.abs(data[j].y - datum.y)\n    const len = Math.sqrt(lenX * lenX + lenY * lenY)\n\n    if (len < TRESHOLD_LABEL) {\n      if (score === null) {\n        score = parseInt(len)\n      } else {\n        score = Math.min(score, parseInt(TRESHOLD_LABEL - len))\n      }\n    }\n    if (lenX > TRESHOLD_LABEL) {\n      break\n    }\n  }\n  return score\n}\n\nconst CHART_X_PADDING = 50\n\nconst lineGenerator = line()\n  .x((d) => d.x)\n  .y((d) => d.y)\n  .curve(curveMonotoneX)\n\nexport default function TramaDetail({\n  data,\n  tipologieByTipologia,\n  onBack,\n  detailHeight,\n}) {\n  const [measures, setMeasures] = useState(null)\n\n  useLayoutEffect(() => {\n    const m = containerRef.current.getBoundingClientRect()\n    setMeasures(m)\n  }, [])\n\n  const scalaMotivoY = useMemo(() => {\n    return makeScalaMotivoY(detailHeight)\n  }, [detailHeight])\n\n  const xScale = useMemo(() => {\n    if (!measures) {\n      return null\n    }\n    return scaleLinear()\n      .domain([0, 1])\n      .range([CHART_X_PADDING, measures.width - CHART_X_PADDING])\n  }, [measures])\n\n  // Re-Scale X, Y for fullscreen\n  const [fullData, subPaths, gradientsType] = useMemo(() => {\n    if (!xScale) {\n      return [null, null, null]\n    }\n    const gradientsSet = new Set()\n    const newData = data.reduce((acc, item, i) => {\n      if (i > 0) {\n        gradientsSet.add(item.motivo_type + '-' + acc[i - 1].motivo_type)\n      }\n      acc.push({\n        ...item,\n        x: xScale(item.originalX),\n        y: scalaMotivoY(item.ordineMotivo),\n      })\n      return acc\n    }, [])\n    const d = lineGenerator(newData)\n    const subPaths = splitPath(d)\n    return [newData, subPaths, Array.from(gradientsSet)]\n  }, [data, scalaMotivoY, xScale])\n  const containerRef = useRef(null)\n\n  const raccontiIncastonati = useMemo(() => {\n    if (!fullData) {\n      return null\n    }\n\n    const inkMap = groupBy(\n      fullData.filter((x) => x['racconto incastonato']),\n      'racconto incastonato'\n    )\n    return Object.keys(inkMap).map((key) => {\n      const racconti = inkMap[key]\n      const minX = Math.min(...racconti.map((d) => d.x))\n      const maxX = Math.max(...racconti.map((d) => d.x))\n      const inkY = scalaMotivoY(\n        +tipologieByTipologia['racconto incastonato']['ordine tipologia']\n      )\n      return {\n        key,\n        startY: racconti[0].y,\n        endY: racconti[racconti.length - 1].y,\n        x1: minX,\n        x2: maxX,\n        y: inkY,\n      }\n    })\n  }, [fullData, scalaMotivoY, tipologieByTipologia])\n\n  const labelsData = useMemo(() => {\n    if (fullData === null) {\n      return null\n    }\n    // const countData = countBy(fullData, (x) => x.motivo_type)\n    // const maxCount = Math.max(...Object.values(countData))\n\n    const dataWithScore = fullData.map((labelData, i) => ({\n      ...labelData,\n      // score: parseInt(\n      //   (calculateLabelScore(fullData, i) * countData[labelData.motivo_type]) /\n      //     maxCount\n      // ),\n      score: calculateLabelScore(fullData, i),\n    }))\n\n    const byTypeWithScore = dataWithScore.reduce(\n      (acc, datum, i) => ({\n        ...acc,\n        [datum.motivo_type]: orderBy(\n          [{ datum, score: datum.score, i }].concat(\n            acc[datum.motivo_type] ?? []\n          ),\n          'score',\n          'desc'\n        ),\n      }),\n      []\n    )\n\n    const keepByType = mapValues(byTypeWithScore, (dataWithScore) => {\n      const keep = [...dataWithScore]\n      dataWithScore.forEach((datum, i) => {\n        if (datum.score !== null && datum.score < 50 && keep.length > 1) {\n          keep.splice(keep.indexOf(datum), 1)\n        }\n      })\n      return keep\n    })\n\n    const finalLabels = [...dataWithScore]\n    Object.keys(keepByType).forEach((key) => {\n      const keep = keepByType[key]\n      keep.forEach((datum) => {\n        finalLabels[datum.i] = {\n          ...finalLabels[datum.i],\n          keepLabel: true,\n        }\n      })\n    })\n\n    return finalLabels\n  }, [fullData])\n\n  const [hoverMotivo, setHoverMotivo] = useState(null)\n\n  return (\n    <div className=\"trama2-detail-content\">\n      <div className=\"trama2-detail-header d-flex justify-content-center align-items-center\">\n        <MiniInfoBox onClose={onBack}>\n          {data.racconto.titolo}, {data.racconto.anno}\n        </MiniInfoBox>\n      </div>\n\n      <div\n        ref={containerRef}\n        className=\"w-100 h-100\"\n        style={{ overflow: 'hidden' }}\n      >\n        {measures && (\n          <svg\n            style={{\n              height: detailHeight + 100,\n              width: measures.width,\n            }}\n          >\n            <GradientsDefinitions\n              prefix=\"detail__\"\n              byTipologia={tipologieByTipologia}\n              gradientsType={gradientsType}\n            />\n            <g transform={`translate(0, 80)`}>\n              {/* <defs>\n                <linearGradient\n                  id=\"racconto-incastonato-gradient\"\n                  x1=\"0%\"\n                  y1=\"0%\"\n                  x2=\"0%\"\n                  y2=\"100%\"\n                >\n                  <stop offset=\"0%\" stop-color=\"#F3F3F3\" />\n                  <stop offset=\"50%\" stop-color=\"#dadada\" />\n                  <stop offset=\"100%\" stop-color=\"#F3F3F3\" />\n                </linearGradient>\n              </defs> */}\n              {raccontiIncastonati &&\n                raccontiIncastonati.map((racconto) => (\n                  <g key={racconto.key}>\n                    <rect\n                      y={0}\n                      height={racconto.y}\n                      className=\"trama2-racconto-incastonato-rect\"\n                      x={racconto.x1}\n                      width={racconto.x2 - racconto.x1}\n                    />\n                    {/* <line\n                      className=\"trama2-racconto-incastonato-line\"\n                      x1={racconto.x1}\n                      x2={racconto.x2}\n                      y1={racconto.y}\n                      y2={racconto.y}\n                    />\n                    <line\n                      className=\"trama2-racconto-incastonato-step-line\"\n                      x1={racconto.x1}\n                      x2={racconto.x1}\n                      y1={racconto.startY}\n                      y2={racconto.y}\n                    />\n                    <line\n                      className=\"trama2-racconto-incastonato-step-line\"\n                      x1={racconto.x2}\n                      x2={racconto.x2}\n                      y1={racconto.endY}\n                      y2={racconto.y}\n                    /> */}\n                  </g>\n                ))}\n              {subPaths.map((subPath, i) => {\n                const isFill = data[i + 1].motivo_type === data[i].motivo_type\n                const stroke = isFill\n                  ? data[i].colori\n                  : `url('#detail__${data[i + 1].motivo_type}-${\n                      data[i].motivo_type\n                    }')`\n                return (\n                  <path\n                    key={i}\n                    d={subPath}\n                    className=\"trama2-line\"\n                    style={{\n                      stroke: stroke,\n                      fill: 'none',\n                    }}\n                  ></path>\n                )\n              })}\n              <g>\n                {labelsData.map((d, i) => {\n                  let element\n                  if (i === 0) {\n                    element = (\n                      <rect x={0} y={0} className=\"trama2-start-symbol\" />\n                    )\n                  } else if (i === data.length - 1) {\n                    element = <rect x={0} y={1} className=\"trama2-end-symbol\" />\n                  } else {\n                    element = <circle className=\"trama2-circle\" r={2} />\n                  }\n                  return (\n                    <g\n                      className={`trama2-label-container ${\n                        hoverMotivo === d.motivo_type\n                          ? 'trama2-label-hover'\n                          : hoverMotivo === null\n                          ? ''\n                          : 'trama2-label-not-hover'\n                      }`}\n                      onMouseEnter={() => setHoverMotivo(d.motivo_type)}\n                      onMouseLeave={() => setHoverMotivo(null)}\n                      key={i}\n                      transform={`translate(${d.x}, ${d.y})`}\n                    >\n                      {element}\n                      {d.keepLabel === true && (\n                        <text\n                          x={5}\n                          y={-5}\n                          style={{ transform: 'rotate(-30deg)' }}\n                        >\n                          {d.motivo_type}\n                        </text>\n                      )}\n                    </g>\n                  )\n                })}\n              </g>\n            </g>\n          </svg>\n        )}\n      </div>\n    </div>\n  )\n}\n","import React, { useMemo, useState, useEffect } from 'react'\nimport keyBy from 'lodash/keyBy'\nimport groupBy from 'lodash/groupBy'\nimport find from 'lodash/find'\nimport orderBy from 'lodash/orderBy'\nimport uniq from 'lodash/uniq'\n\nconst SideBarItem = React.memo(\n  ({\n    tipologia,\n    addBound,\n    disabled,\n    selected,\n    fromDarkItem,\n    itemHeight,\n    disableEvents = false,\n    left,\n  }) => (\n    <div\n      key={tipologia.tipologia}\n      onClick={() => addBound(tipologia.tipologia)}\n      className={`trama2-sidebar-item\n        ${disabled ? 'disabled' : ''}\n        ${\n          fromDarkItem >= Number(tipologia['ordine tipologia'])\n            ? 'item-dark'\n            : 'item-light'\n        }\n        ${disableEvents ? 'no-pointer-events' : ''}\n        ${selected ? 'selected' : ''}`}\n      style={{\n        paddingLeft: left,\n        height: itemHeight,\n        background: selected ? tipologia.colore.colori : undefined,\n      }}\n    >\n      {tipologia.tipologia}\n    </div>\n  )\n)\n\nfunction useWindowWidth() {\n  const [width, setWidth] = useState(window.outerWidth)\n\n  useEffect(() => {\n    function setCurrentWidth() {\n      setWidth(window.outerWidth)\n    }\n    window.addEventListener('resize', setCurrentWidth)\n    return () => {\n      window.removeEventListener('resize', setCurrentWidth)\n    }\n  }, [])\n\n  return width\n}\n\nfunction SideBar({\n  tipologie,\n  racconti,\n  height,\n  bounds,\n  addBound,\n  setBounds,\n  tramaDetail,\n}) {\n  const boundsByKey = keyBy(bounds)\n\n  const itemHeight = height / tipologie.length\n\n  const windowWidth = useWindowWidth()\n  const leftAsMyNavGridIs = windowWidth / 24\n\n  const lookupMap = useMemo(() => {\n    return racconti.reduce(\n      (looks, racconto) => {\n        const min = racconto.minDatum.motivo_type\n        const max = racconto.maxDatum.motivo_type\n        looks[min] = looks[min] || {}\n        looks[max] = looks[max] || {}\n        looks[min][max] = true\n        looks[max][min] = true\n        return looks\n      },\n      [{}]\n    )\n  }, [racconti])\n  let lookup = null\n  if (bounds.length === 1) {\n    lookup = lookupMap[bounds[0]]\n  }\n\n  const tipologieGrouped = useMemo(() => {\n    return groupBy(tipologie, 'cluster tipologia')\n  }, [tipologie])\n\n  const fromDarkItem = useMemo(() => {\n    return (\n      find(tipologie, { tipologia: 'visione' })?.['ordine tipologia'] ??\n      -Infinity\n    )\n  }, [tipologie])\n\n  const motiviDetail = useMemo(() => {\n    if (tramaDetail) {\n      return uniq(\n        orderBy(tramaDetail, 'ordineMotivo', 'desc').map((x) => x.motivo_type)\n      )\n    }\n    return null\n  }, [tramaDetail])\n\n  return (\n    <div className=\"trama2-sidebar\">\n      <div className=\"trama2-sidebar-header\" style={{\n        paddingLeft: leftAsMyNavGridIs,\n      }}>\n        Ordine <br />\n        di turbamento\n      </div>\n      {Object.keys(tipologieGrouped).map((k) => {\n        const tipologie = tipologieGrouped[k]\n        return (\n          <div className=\"trama2-sidebar-content\" key={k}>\n            {tipologie.map((tipologia) => {\n              let disabled\n              let selected\n              if (motiviDetail) {\n                disabled = motiviDetail.indexOf(tipologia.tipologia) === -1\n                selected =\n                  motiviDetail[0] === tipologia.tipologia ||\n                  motiviDetail[motiviDetail.length - 1] === tipologia.tipologia\n              } else {\n                disabled =\n                  lookup !== null &&\n                  tipologia.tipologia !== bounds[0] &&\n                  (!lookup || !lookup[tipologia.tipologia])\n                selected = !!boundsByKey[tipologia.tipologia]\n              }\n              return (\n                <SideBarItem\n                  key={tipologia.tipologia}\n                  disableEvents={!!motiviDetail}\n                  tipologia={tipologia}\n                  addBound={addBound}\n                  disabled={disabled}\n                  selected={selected}\n                  itemHeight={itemHeight}\n                  fromDarkItem={fromDarkItem}\n                  left={leftAsMyNavGridIs}\n                />\n              )\n            })}\n          </div>\n        )\n      })}\n      <div className=\"trama2-sidebar-footer\" style={{\n        paddingLeft: leftAsMyNavGridIs,\n      }}>\n        Clicca per scegliere il <br />\n        punto più alto e più basso\n        <br />\n        delle curve\n      </div>\n      {/* <div>\n        {bounds.length > 0 && (\n          <span\n            onClick={() => {\n              setBounds([])\n            }}\n          >\n            Clear\n          </span>\n        )}\n      </div> */}\n    </div>\n  )\n}\n\nexport default React.memo(SideBar)\n","import React, {\n  useLayoutEffect,\n  useState,\n  useCallback,\n  useEffect,\n  useRef,\n  createContext,\n} from 'react'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faAngleDoubleRight } from '@fortawesome/free-solid-svg-icons'\n\n//data management\nimport keyBy from 'lodash/keyBy'\nimport sortBy from 'lodash/sortBy'\n\n//data helpers\nimport { MOTIVO_LINE_HEIGHT } from './utils'\n\n//local components\nimport LineeTrama from './LineeTrama'\nimport BoxPlot from './BoxPlot'\nimport TramaDetail from './TramaDetail'\nimport SideBar from './SideBar'\n\nexport const CurretTramaViewContext = createContext('list')\n\n// main component\nexport default function Trama2Content({\n  scalaMotivoY,\n  tipologie,\n  tipologieByTipologia,\n  colors,\n  racconti,\n  byRacconto,\n  selected,\n  toggleSelect,\n  setSelected,\n}) {\n  const [sidePanelOpen, setSidePanelOpen] = useState(false)\n  const toggleSidePanel = useCallback(() => {\n    setSidePanelOpen(!sidePanelOpen)\n  }, [sidePanelOpen])\n\n  const containerRef = useRef()\n  const [measures, setMeasures] = useState(null)\n  useLayoutEffect(() => {\n    const m = containerRef.current.getBoundingClientRect()\n    setMeasures(m)\n  }, [])\n\n  //bounds selection\n  const [bounds, setBounds] = useState([])\n  const addBound = useCallback(\n    (item) => {\n      if (bounds.length === 1 && bounds[0] === item) {\n        setBounds([])\n        return\n      }\n      if (bounds.length < 2) {\n        setBounds(bounds.concat([item]))\n      } else {\n        setBounds([item])\n      }\n    },\n    [bounds]\n  )\n\n  useEffect(() => {\n    if (bounds.length === 2) {\n      const orderedBounds = sortBy(\n        bounds,\n        (bound) => +tipologieByTipologia[bound]['ordine tipologia']\n      )\n      const indexes = racconti.reduce((acc, racconto, indenx) => {\n        if (\n          racconto.minDatum.motivo_type === orderedBounds[0] &&\n          racconto.maxDatum.motivo_type === orderedBounds[1]\n        ) {\n          acc.push(racconto.titolo)\n        }\n        return acc\n      }, [])\n\n      const sel = keyBy(indexes)\n      setSelected(sel, true)\n    }\n  }, [bounds, racconti, setSelected, tipologieByTipologia])\n\n  useEffect(() => {\n    if (\n      Object.keys(selected).some((key) => selected[key].fromBounds === false)\n    ) {\n      setBounds([])\n    }\n  }, [selected])\n\n  const listRef = useRef()\n  const [currentView, setCurrentView] = useState('list')\n  const [currentTramaDetail, setCurrentTramaDetail] = useState(null)\n\n  const handleClickRacconto = useCallback((data) => {\n    setCurrentTramaDetail(data)\n    setCurrentView('detail')\n  }, [])\n\n  const [years, setYears] = useState([\n    racconti[0].anno,\n    racconti[racconti.length - 1].anno,\n  ])\n\n  return (\n    <div className=\"trama2-container\" ref={containerRef}>\n      <div className={`trama2-side-panel ${sidePanelOpen ? 'open' : 'closed'}`}>\n        <div className=\"trama2-side-panel-content\">\n          {measures && (\n            <SideBar\n              tramaDetail={currentTramaDetail}\n              racconti={racconti}\n              height={measures.height - 140}\n              tipologie={tipologie}\n              bounds={bounds}\n              addBound={addBound}\n              setBounds={setBounds}\n            ></SideBar>\n          )}\n        </div>\n\n        <div\n          className={`trama2-side-panel-toggle ${\n            sidePanelOpen ? 'open-panel' : ''\n          }`}\n          onClick={toggleSidePanel}\n        >\n          <FontAwesomeIcon icon={faAngleDoubleRight} />\n        </div>\n\n        {currentView !== 'detail' && (\n          <div\n            className=\"trama2-side-panel-rotate\"\n            onClick={() => {\n              if (currentView === 'list') {\n                listRef.current.rotateView(() => {\n                  setCurrentView('boxplot')\n                })\n              } else {\n                setCurrentView('list')\n              }\n            }}\n          >\n            Routa la vista\n          </div>\n        )}\n      </div>\n      <div className=\"trama2-content-wrapper\">\n        {currentView === 'list' && (\n          <>\n            <div\n              style={{\n                position: 'absolute',\n                top: 80 + MOTIVO_LINE_HEIGHT,\n                borderBottom: 'solid #bbb 1px',\n              }}\n            >\n              {years[0]}\n            </div>\n            <div\n              style={{\n                position: 'absolute',\n                bottom: MOTIVO_LINE_HEIGHT + 30,\n                borderBottom: 'solid #bbb 1px',\n              }}\n            >\n              {years[1]}\n            </div>\n          </>\n        )}\n\n        <CurretTramaViewContext.Provider value={currentView}>\n          <div\n            className=\"trama2-content\"\n            style={{ display: currentView !== 'list' ? 'none' : undefined }}\n          >\n            <LineeTrama\n              onRaccontoClick={handleClickRacconto}\n              ref={listRef}\n              selected={selected}\n              toggleSelect={toggleSelect}\n              racconti={racconti}\n              tipologie={tipologie}\n              tipologieByTipologia={tipologieByTipologia}\n              data={byRacconto}\n              height={MOTIVO_LINE_HEIGHT}\n              scalaMotivoY={scalaMotivoY}\n              colors={colors}\n              setYears={setYears}\n            ></LineeTrama>\n          </div>\n\n          {currentView === 'boxplot' && measures && (\n            <BoxPlot\n              onRaccontoClick={handleClickRacconto}\n              ref={listRef}\n              selected={selected}\n              toggleSelect={toggleSelect}\n              racconti={racconti}\n              tipologie={tipologie}\n              tipologieByTipologia={tipologieByTipologia}\n              data={byRacconto}\n              height={measures.height}\n              scalaMotivoY={scalaMotivoY}\n              colors={colors}\n            ></BoxPlot>\n          )}\n          {currentView === 'detail' && measures && (\n            <TramaDetail\n              tipologieByTipologia={tipologieByTipologia}\n              detailHeight={measures.height - 140}\n              data={currentTramaDetail}\n              onBack={() => {\n                setCurrentTramaDetail(null)\n                setCurrentView('list')\n              }}\n            />\n          )}\n        </CurretTramaViewContext.Provider>\n      </div>\n    </div>\n  )\n}\n","import React, { useCallback, useState, useMemo, useEffect } from 'react'\nimport MainMenu from '../../general/MainMenu'\nimport PageTitle from '../../general/PageTitle'\nimport MoreInfo from '../../general/MoreInfo'\nimport CompassButton from '../../general/CompassButton/CompassButton'\nimport SearchDropDown from '../../general/Search/SearchDropDownControlled'\nimport HelpSidePanel from '../../panels/HelpSidePanel/HelpSidePanel'\n\nimport AltOptions from '../../general/Options/AltOptions'\nimport GlobalData from '../../utilities/GlobalData'\nimport Trama2Content from './Trama2Content'\nimport { makeScalaMotivoY, makeVizData, MOTIVO_LINE_HEIGHT } from './utils'\nimport keyBy from 'lodash/keyBy'\nimport './Trama2.css'\n\n// SCALES\nconst scalaMotivoY = makeScalaMotivoY(MOTIVO_LINE_HEIGHT)\n\n// GLOBAL DATA\nconst {\n  tipologie,\n  tipologieByTipologia,\n  colors,\n  racconti,\n  byRacconto,\n} = makeVizData(scalaMotivoY)\n\n// we leverage react lazy+suspense to load core component at first render (it will load all json by importing it)\n\nconst searchOptions = racconti.map((racconto) => ({\n  label: racconto.titolo,\n  value: racconto.titolo,\n}))\n\nconst cercaOptions = [{ label: 'Titolo' }]\n\nfunction Trama2Main({ title }) {\n  const [helpSidePanelOpen, setHelpSidePanelOpen] = useState(false)\n  const [ricerca, setRicerca] = useState([])\n\n  const toggleHelpSidePanel = useCallback(() => {\n    setHelpSidePanelOpen((a) => !a)\n  }, [])\n\n  const helpPage = GlobalData.helpPages.plot.main\n\n  const setSelected = useCallback((selection, fromBounds = false) => {\n    const newRicerca = Object.keys(selection).map((titolo) => ({\n      label: titolo,\n      value: titolo,\n      fromBounds,\n    }))\n    setRicerca(newRicerca)\n  }, [])\n\n  const toggleSelect = useCallback((titolo) => {\n    setRicerca((ricerca) => {\n      let clearedBounds = false\n      const newRicerca = ricerca.filter((item) => {\n        // Remove from bounds items\n        if (item.fromBounds === true) {\n          clearedBounds = true\n          return false\n        }\n        return item.label !== titolo\n      })\n      if (newRicerca.length < ricerca.length && !clearedBounds) {\n        return newRicerca\n      } else {\n        return newRicerca.concat({ label: titolo, value: titolo })\n      }\n    })\n  }, [])\n  const selected = useMemo(() => {\n    return keyBy(\n      ricerca.map((item) => ({\n        value: item.value,\n        fromBounds: item.fromBounds === undefined ? false : item.fromBounds,\n      })),\n      'value'\n    )\n  }, [ricerca])\n\n  return (\n    <div className=\"trasformare main\">\n      <HelpSidePanel\n        open={helpSidePanelOpen}\n        page={helpPage}\n        closeButtonClicked={toggleHelpSidePanel}\n      />\n\n      <div className=\"top-nav navigations\">\n        <MainMenu className=\"main-menu\" style={{ gridColumn: 'span 1' }} />\n        <PageTitle title={title} style={{ gridColumn: 'span 10' }} />\n\n        <AltOptions\n          title=\"Cerca per\"\n          options={cercaOptions}\n          disabled={true}\n          value={'Titolo'}\n          onChange={(x) => {}}\n          style={{\n            gridColumn: 'span 3',\n          }}\n        />\n\n        <SearchDropDown\n          style={{\n            gridColumn: 'span 8',\n          }}\n          data={{ options: searchOptions }}\n          changeOptions={(newOptions) => {\n            setRicerca(\n              newOptions.map((o) => ({\n                ...o,\n                fromBounds: false,\n              }))\n            )\n          }}\n          selectedOptions={ricerca}\n        />\n\n        <MoreInfo\n          style={{ gridColumn: 'span 1' }}\n          onClicked={toggleHelpSidePanel}\n        />\n        <CompassButton\n          style={{\n            gridColumn: 'span 1',\n            color: 'white',\n            backgroundColor: 'black',\n          }}\n        />\n      </div>\n\n      <Trama2Content\n        scalaMotivoY={scalaMotivoY}\n        tipologie={tipologie}\n        tipologieByTipologia={tipologieByTipologia}\n        colors={colors}\n        racconti={racconti}\n        byRacconto={byRacconto}\n        selected={selected}\n        setSelected={setSelected}\n        toggleSelect={toggleSelect}\n      ></Trama2Content>\n    </div>\n  )\n}\n\nexport default Trama2Main\n"],"sourceRoot":""}