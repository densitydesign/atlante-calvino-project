{"version":3,"sources":["../node_modules/d3-shape/src/link/index.js","../node_modules/d3-shape/src/pointRadial.js","../node_modules/lodash/mapValues.js","general/MiniInfoBox/MiniInfoBox.js","visualizations/Realismo/utils.js","visualizations/Realismo/CircleWorms.js","visualizations/Realismo/WormDetail.js","visualizations/Realismo/RealismoMain.js"],"names":["linkSource","d","source","linkTarget","target","link","curve","x","pointX","y","pointY","context","buffer","argv","slice","call","arguments","s","apply","this","t","path","_","length","constant","curveVertical","x0","y0","x1","y1","moveTo","bezierCurveTo","linkVertical","Math","cos","PI","sin","baseAssignValue","require","baseForOwn","baseIteratee","module","exports","object","iteratee","result","value","key","MiniInfoBox","children","onClose","style","className","onClick","realismoDataNormalized","realismoData","map","item","startNorm","start","endNorm","end","locationNorm","yearsExtent","extent","year","Date","racconti","uniqBy","title","volume","volume_primo","dataset","groupBy","maxLength","max","filter","Boolean","detailWormsCircles","mapValues","data","dataFilled","reduce","filledWithCream","calv0","i","push","level","occurrence_location","Number","ghost","prevCalvix","lastData","startTotalNorm","endTotalNorm","locationTotalNorm","lengthTotalNorm","intersectionCircleItem","colorScale","scaleOrdinal","range","domain","unknown","uniqueYears","sort","unitDeg","acc","lastRotation","LEGEND_SIZE","raccontiDegs","racconto","rotation","byYear","yearsArcs","startAngleDeg","startAngle","endAngle","angleLabel","calculateDegs","arcGenerator","arc","Worm","React","memo","circles","radius","labelSize","wormSize","isSelected","isOmitted","wormStart","size","flipText","circleRadius","animationDelays","animationGroups","opacity","cursor","undefined","circle","cx","movement","delay","direction","category","transformOrigin","animationDelay","r","cy","place","fill","CicrleYears","wormEnd","flipTextStyle","transform","alignmentBaseline","width","height","radiusStrokeSize","yearArc","textX","textAnchor","fontSize","outerRadius","innerRadius","Legend","endLineStart","endLineEnd","y2","x2","stroke","strokeWidth","CircleWorms","heightCircle","circlesMap","selected","omitted","raccontiJoinLines","toggleSelect","handleClick","useCallback","selectedKeys","Object","keys","allSelected","INNER_CIRCLE_STROKE_WIDTH","paddingTop","id","offset","stopColor","type","slope","pointAX","pointAY","pointBX","pointBY","strokeDasharray","angle","yScale","makeItemFill","color","makeItemGradientUrl","n","totalLabelX","ghostWorm","allWidth","CHART_PADDING_X","dataWorms","useMemo","xLocation","labalesData","dataForLabels","dataWormsLabeled","mul","linePath","levelsData","dataLevelWorms","hasData","dataLabel","totalLength","margin","marginLeft","attributeName","values","dur","repeatCount","datum","rx","ry","MINI_RADIUS","occurrence","circleWidth","out","interectionItems","sortBy","reverse","searchOptionsTitolo","label","searchOptionsVolume","keyByTitolo","volumeLabel","titoliByVolume","optionsMovimento","optionsSpace","cercaOptions","RealismoMain","useState","helpSidePanelOpen","setHelpSidePanelOpen","toggleHelpSidePanel","a","findFor","setFindFor","ricerca","setRicerca","helpPage","GlobalData","helpPages","realism","main","useDimensions","liveMeasure","ref","refCirlce","movimento","setMovimento","spazio","setSpazio","timeFilter","setTimeFilter","spazioLabels","omittedStuff","spazioValues","forEach","titolo","keep","some","every","categories","indexOf","getFullYear","mapSelected","volumeSelected","newRicerca","concat","selctedTitoliSorted","ricercaTitoli","leftRacconti","rightRacconti","lineHeightRight","lineHeightLeft","abs","REALISMO_DIAMETER","HelpSidePanel","open","page","closeButtonClicked","MainMenu","gridColumn","PageTitle","AltOptions","multiple","options","onChange","changeOptions","newOptions","selectedOptions","MoreInfo","onClicked","CompassButton","backgroundColor","position","lineHeight","allowEmpty","m","textAlign","RangeFilter","timeSpan"],"mappings":"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","file":"static/js/4.7aceae22.chunk.js","sourcesContent":["import {path} from \"d3-path\";\nimport {slice} from \"../array.js\";\nimport constant from \"../constant.js\";\nimport {x as pointX, y as pointY} from \"../point.js\";\nimport pointRadial from \"../pointRadial.js\";\n\nfunction linkSource(d) {\n  return d.source;\n}\n\nfunction linkTarget(d) {\n  return d.target;\n}\n\nfunction link(curve) {\n  var source = linkSource,\n      target = linkTarget,\n      x = pointX,\n      y = pointY,\n      context = null;\n\n  function link() {\n    var buffer, argv = slice.call(arguments), s = source.apply(this, argv), t = target.apply(this, argv);\n    if (!context) context = buffer = path();\n    curve(context, +x.apply(this, (argv[0] = s, argv)), +y.apply(this, argv), +x.apply(this, (argv[0] = t, argv)), +y.apply(this, argv));\n    if (buffer) return context = null, buffer + \"\" || null;\n  }\n\n  link.source = function(_) {\n    return arguments.length ? (source = _, link) : source;\n  };\n\n  link.target = function(_) {\n    return arguments.length ? (target = _, link) : target;\n  };\n\n  link.x = function(_) {\n    return arguments.length ? (x = typeof _ === \"function\" ? _ : constant(+_), link) : x;\n  };\n\n  link.y = function(_) {\n    return arguments.length ? (y = typeof _ === \"function\" ? _ : constant(+_), link) : y;\n  };\n\n  link.context = function(_) {\n    return arguments.length ? ((context = _ == null ? null : _), link) : context;\n  };\n\n  return link;\n}\n\nfunction curveHorizontal(context, x0, y0, x1, y1) {\n  context.moveTo(x0, y0);\n  context.bezierCurveTo(x0 = (x0 + x1) / 2, y0, x0, y1, x1, y1);\n}\n\nfunction curveVertical(context, x0, y0, x1, y1) {\n  context.moveTo(x0, y0);\n  context.bezierCurveTo(x0, y0 = (y0 + y1) / 2, x1, y0, x1, y1);\n}\n\nfunction curveRadial(context, x0, y0, x1, y1) {\n  var p0 = pointRadial(x0, y0),\n      p1 = pointRadial(x0, y0 = (y0 + y1) / 2),\n      p2 = pointRadial(x1, y0),\n      p3 = pointRadial(x1, y1);\n  context.moveTo(p0[0], p0[1]);\n  context.bezierCurveTo(p1[0], p1[1], p2[0], p2[1], p3[0], p3[1]);\n}\n\nexport function linkHorizontal() {\n  return link(curveHorizontal);\n}\n\nexport function linkVertical() {\n  return link(curveVertical);\n}\n\nexport function linkRadial() {\n  var l = link(curveRadial);\n  l.angle = l.x, delete l.x;\n  l.radius = l.y, delete l.y;\n  return l;\n}\n","export default function(x, y) {\n  return [(y = +y) * Math.cos(x -= Math.PI / 2), y * Math.sin(x)];\n}\n","var baseAssignValue = require('./_baseAssignValue'),\n    baseForOwn = require('./_baseForOwn'),\n    baseIteratee = require('./_baseIteratee');\n\n/**\n * Creates an object with the same keys as `object` and values generated\n * by running each own enumerable string keyed property of `object` thru\n * `iteratee`. The iteratee is invoked with three arguments:\n * (value, key, object).\n *\n * @static\n * @memberOf _\n * @since 2.4.0\n * @category Object\n * @param {Object} object The object to iterate over.\n * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n * @returns {Object} Returns the new mapped object.\n * @see _.mapKeys\n * @example\n *\n * var users = {\n *   'fred':    { 'user': 'fred',    'age': 40 },\n *   'pebbles': { 'user': 'pebbles', 'age': 1 }\n * };\n *\n * _.mapValues(users, function(o) { return o.age; });\n * // => { 'fred': 40, 'pebbles': 1 } (iteration order is not guaranteed)\n *\n * // The `_.property` iteratee shorthand.\n * _.mapValues(users, 'age');\n * // => { 'fred': 40, 'pebbles': 1 } (iteration order is not guaranteed)\n */\nfunction mapValues(object, iteratee) {\n  var result = {};\n  iteratee = baseIteratee(iteratee, 3);\n\n  baseForOwn(object, function(value, key, object) {\n    baseAssignValue(result, key, iteratee(value, key, object));\n  });\n  return result;\n}\n\nmodule.exports = mapValues;\n","import React from 'react'\nimport './MiniInfoBox.css'\n\nexport default function MiniInfoBox({ children, onClose, style }) {\n  return (\n    <div className=\"MiniInfoBox\" style={style}>\n      <div className=\"MiniInfoBox-start\">{children}</div>\n      <div className=\"MiniInfoBox-end\" onClick={onClose}>\n        &times;\n      </div>\n    </div>\n  )\n}\n","import realismoData from './data/realismo.json'\nimport groupBy from 'lodash/groupBy'\nimport uniqBy from 'lodash/uniqBy'\nimport { scaleOrdinal } from 'd3-scale'\nimport range from 'lodash/range'\nimport find from 'lodash/find'\nimport mapValues from 'lodash/mapValues'\nimport { extent } from 'd3-array'\nimport { sortBy } from 'lodash'\n\nconst realismoDataNormalized = realismoData.map((item) => ({\n  ...item,\n  startNorm: +item.start / item.length,\n  endNorm: +item.end / item.length,\n  locationNorm: +item['occurrence_location'] / +item.length,\n}))\n\nexport const yearsExtent = extent(realismoData, (d) => +d.year).map(\n  (y) => new Date(y, 0)\n)\n\nexport const racconti = uniqBy(realismoData, 'title').map((item) => ({\n  title: item.title,\n  length: item.length,\n  year: +item.year,\n  volume: item.volume_primo,\n}))\n\nexport const dataset = groupBy(realismoDataNormalized, 'title')\n\nconst maxLength = Math.max(\n  ...realismoData.map((d) => +d.length).filter(Boolean)\n)\nexport const detailWormsCircles = mapValues(dataset, (data) => {\n  // Fill the pie\n  const dataFilled = data.reduce((filledWithCream, calv0, i) => {\n    if (i === 0) {\n      // We are about to start\n      if (+calv0.start > 0) {\n        // The first piece of our story start from n0000where\n        // filled the start\n        filledWithCream.push({\n          ...calv0,\n          level: 0,\n          occurrence_location: 0,\n          start: 0,\n          end: Number(calv0.start) - 1,\n          ghost: true,\n        })\n      }\n    } else {\n      // Rewind back 2 prev\n      const prevCalvix = data[i - 1]\n      if (calv0.start > Number(prevCalvix.end) + 1) {\n        filledWithCream.push({\n          ...calv0,\n          level: 0,\n          occurrence_location: Number(prevCalvix.end) + 1,\n          start: Number(prevCalvix.end) + 1,\n          end: Number(calv0.start) - 1,\n          ghost: true,\n        })\n      }\n    }\n    // Add item\n    filledWithCream.push(calv0)\n    return filledWithCream\n  }, [])\n  if (dataFilled.length > 0) {\n    const lastData = dataFilled[dataFilled.length - 1]\n    if (lastData.end < lastData.length) {\n      dataFilled.push({\n        ...lastData,\n        level: 0,\n        occurrence_location: lastData.end + 1,\n        start: lastData.end + 1,\n        end: lastData.length,\n        ghost: true,\n      })\n    }\n  }\n\n  return dataFilled.map((item) => ({\n    ...item,\n    startTotalNorm: +item.start / maxLength,\n    endTotalNorm: +item.end / maxLength,\n    locationTotalNorm: +item['occurrence_location'] / maxLength,\n    lengthTotalNorm: +item.length / maxLength,\n  }))\n})\n\nfunction intersectionCircleItem(item, startNorm, endNorm) {\n  if (endNorm < item.startNorm) {\n    return 0\n  }\n  if (startNorm > item.endNorm) {\n    return 0\n  }\n  const diffStart = Math.max(0, item.startNorm - startNorm)\n  const diffEnd = Math.max(0, endNorm - item.endNorm)\n\n  return endNorm - startNorm - diffStart - diffEnd\n}\n\nexport function datasetToCircles(n) {\n  return mapValues(dataset, (data) => {\n    const circleWidth = 1 / n\n\n    const circles = range(n).reduce((acc, item, i) => {\n      const startNorm = i * circleWidth\n      const endNorm = (i + 1) * circleWidth\n      let interectionItems = sortBy(data, (item) =>\n        intersectionCircleItem(item, startNorm, endNorm)\n      ).reverse()\n      let out\n      if (\n        interectionItems.length > 0 &&\n        intersectionCircleItem(interectionItems[0], startNorm, endNorm) > 0\n      ) {\n        out = interectionItems[0]\n      } else {\n        out = {}\n      }\n      let place = false\n      if (\n        out.occurrence &&\n        out.locationNorm >= startNorm &&\n        out.locationNorm <= endNorm\n      ) {\n        place = true\n      }\n      acc.push({ ...out, place })\n      return acc\n    }, [])\n\n    return circles\n  })\n}\n\nexport const colorScale = scaleOrdinal()\n  .range(['#ffc33e', '#00c97c', '#4a4aff'])\n  .domain(['indoor', 'outdoor', 'transportation'])\n  .unknown(['#ccc'])\n\nconst GAP_SIZE = 1\nexport const LEGEND_SIZE = 10\n\nfunction calculateDegs() {\n  const uniqueYears = uniqBy(racconti, (item) => item.year)\n    .map((x) => x.year)\n    .sort()\n\n  const numGaps = uniqueYears.reduce((acc, year, i) => {\n    if (i > 0) {\n      return acc + year - uniqueYears[i - 1]\n    }\n    return acc\n  }, 0)\n  const unitDeg = (360 - LEGEND_SIZE - numGaps * GAP_SIZE) / racconti.length\n\n  let lastRotation = LEGEND_SIZE / 2 + unitDeg / 2\n  const raccontiDegs = racconti.map((racconto, i) => {\n    if (i > 0) {\n      lastRotation =\n        lastRotation +\n        unitDeg +\n        (racconto.year - racconti[i - 1].year) * GAP_SIZE\n    }\n    return {\n      ...racconto,\n      rotation: lastRotation - 90,\n    }\n  })\n\n  const byYear = groupBy(raccontiDegs, 'year')\n  const yearsArcs = uniqueYears.map((year) => {\n    const data = byYear[year]\n    const startAngleDeg = data[0].rotation + 90 - unitDeg / 2\n    const startAngle = (startAngleDeg / 360) * (2 * Math.PI)\n\n    const endAngle =\n      ((data[data.length - 1].rotation + 90 + unitDeg / 2) / 360) *\n      (2 * Math.PI)\n\n    return {\n      startAngle,\n      angleLabel: startAngleDeg + unitDeg - 90 + unitDeg / 2,\n      endAngle,\n      year,\n    }\n  })\n\n  return { raccontiDegs, yearsArcs }\n}\n\nexport const { raccontiDegs, yearsArcs } = calculateDegs()\n","import React, { useCallback } from 'react'\nimport { colorScale, yearsArcs } from './utils'\nimport { scaleLinear } from 'd3-scale'\nimport { arc } from 'd3'\n\nconst LABEL_VISIBLE_SIZE = 0\nconst LABEL_SIZE_PERCENT = 0\nconst WORM_SIZE_PERCENT = 0.55\nconst LABEL_PADDING = 10\nconst INNER_CIRCLE_PADDING = 10\nconst INNER_CIRCLE_STROKE_WIDTH = 5\nconst LEGEND_TEXT_MARGIN = 3\n\nconst arcGenerator = arc()\n\nconst Worm = React.memo(\n  ({\n    racconto,\n    circles,\n    radius,\n    labelSize,\n    wormSize,\n    onClick,\n    isSelected,\n    isOmitted,\n    size,\n    flipText = false,\n  }) => {\n    const wormStart = radius - labelSize - wormSize - LABEL_PADDING\n    const wormEnd = radius - labelSize\n\n    const circleRadius = wormSize / circles.length / 2\n\n    //var for animations delays\n    const animationDelays = circles.reduce((acc, item) => {\n      if (!acc[item.occurrence_location]) {\n        acc[item.occurrence_location] = 1\n      }\n      acc[item.occurrence_location] += 1\n      return acc\n    }, {})\n\n    const animationGroups = {}\n\n    return (\n      <g\n        style={{\n          opacity: isSelected ? 1 : 0.3,\n        }}\n      >\n        <title>{racconto.title}</title>\n        <g\n          onClick={() => {\n            if (!isOmitted) {\n              onClick(racconto)\n            }\n          }}\n          style={{\n            cursor: isOmitted ? undefined : 'pointer',\n          }}\n        >\n          {circles.map((circle, i) => {\n            const cx = wormStart + i * circleRadius * 2 + circleRadius\n            const cy = 0\n\n            if (circle.movement === 'TRUE') {\n              animationGroups[circle.occurrence_location] =\n                animationGroups[circle.occurrence_location] === undefined\n                  ? 0\n                  : animationGroups[circle.occurrence_location] + 1\n            }\n\n            const delay =\n              circle.direction === 'forward'\n                ? animationGroups[circle.occurrence_location] * 0.2\n                : (animationDelays[circle.occurrence_location] -\n                    animationGroups[circle.occurrence_location]) *\n                  0.2\n\n            return (\n              <g key={i}>\n                <circle\n                  className={`${\n                    circle.movement === 'TRUE' && !isOmitted ? 'movement' : ''\n                  } fill-realismo-circle-${circle.category ?? 'unknown'}`}\n                  style={{\n                    // fill: colorScale(circle.category),\n                    transformOrigin: `${cx}px ${cy}px`,\n                    animationDelay: `${delay}s`,\n                  }}\n                  r={isOmitted ? circleRadius * 0.5 : circleRadius * 1.5}\n                  cy={cy}\n                  cx={cx}\n                ></circle>\n                {circle.place && (\n                  <circle\n                    style={{ fill: '#fff' }}\n                    r={circleRadius / 3}\n                    cy={cy}\n                    cx={cx}\n                  ></circle>\n                )}\n              </g>\n            )\n          })}\n        </g>\n      </g>\n    )\n  }\n)\n\nconst WormLabel = React.memo(\n  ({\n    racconto,\n    circles,\n    radius,\n    labelSize,\n    wormSize,\n    onClick,\n    isSelected,\n    isOmitted,\n    size,\n    flipText = false,\n  }) => {\n    const wormStart = radius - labelSize - wormSize - LABEL_PADDING\n    const wormEnd = radius - labelSize\n\n    const circleRadius = wormSize / circles.length / 2\n    const flipTextStyle = flipText\n      ? {\n          transform: 'rotate(180deg)',\n          transformOrigin: `${wormEnd}px 0px`,\n        }\n      : undefined\n\n    return (\n      <g\n        className={`worm-label-container${flipText ? '-flipped' : ''}`}\n        style={{\n          opacity: isSelected ? 1 : 0.3,\n        }}\n      >\n        <g style={flipTextStyle}>\n          <text\n            style={{ alignmentBaseline: 'middle' }}\n            x={wormEnd - (flipText ? LABEL_VISIBLE_SIZE : 0)}\n          >\n            {racconto.title}\n          </text>\n        </g>\n        <g>\n          {!flipText && (\n            <rect\n              className=\"worm-label-gradient-rect\"\n              x={wormEnd + LABEL_VISIBLE_SIZE}\n              y={-7}\n              width={size / 2 - wormSize}\n              height={14}\n              fill=\"url(#label-gradient)\"\n            />\n          )}\n          {flipText && (\n            <rect\n              className=\"worm-label-gradient-rect\"\n              x={30}\n              y={-7}\n              width={wormEnd}\n              height={14}\n              fill=\"url(#label-gradient-flip)\"\n            />\n          )}\n        </g>\n      </g>\n    )\n  }\n)\n\nconst CicrleYears = React.memo(({ x, y, radius, radiusStrokeSize }) => {\n  return (\n    <g transform={`translate(${x}, ${y})`}>\n      {yearsArcs.map((yearArc) => {\n        const flipText = yearArc.angleLabel >= 90 && yearArc.angleLabel <= 270\n        const textX = radius - radiusStrokeSize\n        return (\n          <g key={yearArc.year}>\n            <g style={{ transform: `rotate(${yearArc.angleLabel}deg)` }}>\n              <text\n                textAnchor={flipText ? 'start' : 'end'}\n                x={textX}\n                y={0}\n                style={{\n                  transformOrigin: `${textX}px -3px`,\n                  transform: flipText ? 'rotate(180deg)' : undefined,\n                  fontSize: 10,\n                }}\n              >\n                {yearArc.year}\n              </text>\n            </g>\n            <path\n              style={{ fill: '#ddd' }}\n              d={arcGenerator({\n                ...yearArc,\n                outerRadius: radius - radiusStrokeSize / 2,\n                innerRadius: radius + radiusStrokeSize / 2,\n              })}\n            />\n          </g>\n        )\n      })}\n    </g>\n  )\n})\n\nconst Legend = React.memo(\n  ({ labelSize, x, wormSize, endLineStart, endLineEnd }) => {\n    return (\n      <g>\n        <line\n          y1={0}\n          y2={labelSize}\n          x1={x}\n          x2={x}\n          stroke=\"black\"\n          strokeWidth={2}\n        />\n        {/* <text\n          x={x}\n          y={labelSize - LEGEND_TEXT_MARGIN}\n          className=\"realismo-legend-text\"\n          style={{\n            transformOrigin: `${x}px ${labelSize}px`,\n            transform: 'rotate(270deg)',\n          }}\n        >\n          TITOLO\n        </text> */}\n        <line\n          y1={labelSize + LABEL_PADDING}\n          y2={labelSize + LABEL_PADDING + wormSize}\n          x1={x}\n          x2={x}\n          stroke=\"black\"\n          strokeWidth={2}\n        />\n        <text\n          x={x}\n          y={labelSize + LABEL_PADDING - LEGEND_TEXT_MARGIN}\n          className=\"realismo-legend-text\"\n          textAnchor={'end'}\n          style={{\n            transformOrigin: `${x}px ${labelSize + LABEL_PADDING}px`,\n            transform: 'rotate(270deg)',\n          }}\n        >\n          FINE\n        </text>\n        <text\n          x={x}\n          y={labelSize + LABEL_PADDING + wormSize - LEGEND_TEXT_MARGIN}\n          className=\"realismo-legend-text\"\n          textAnchor={'start'}\n          style={{\n            transformOrigin: `${x}px ${labelSize + LABEL_PADDING + wormSize}px`,\n            transform: 'rotate(270deg)',\n          }}\n        >\n          INIZIO DEL TESTO\n        </text>\n\n        <line\n          y1={endLineStart}\n          y2={endLineEnd}\n          x1={x}\n          x2={x}\n          stroke=\"black\"\n          strokeWidth={2}\n        />\n        <g\n          style={{\n            transform: `translate(${x - 14}px, ${endLineEnd}px) rotate(270deg)`,\n          }}\n        >\n          <text\n            x={0}\n            y={0}\n            className=\"realismo-legend-text\"\n            textAnchor={'start'}\n          >\n            ANNO PRIMA\n          </text>\n          <text\n            x={0}\n            y={10}\n            className=\"realismo-legend-text\"\n            textAnchor={'start'}\n          >\n            PUBBLICAZIONE\n          </text>\n        </g>\n      </g>\n    )\n  }\n)\n\nexport default function CircleWorms({\n  heightCircle,\n  radius,\n  circlesMap,\n  selected,\n  omitted,\n  racconti,\n  raccontiJoinLines,\n  toggleSelect,\n}) {\n  const size = radius * 2\n  const handleClick = useCallback(\n    (racconto) => {\n      toggleSelect(racconto.title)\n    },\n    [toggleSelect]\n  )\n\n  const selectedKeys = Object.keys(selected)\n  const allSelected = selectedKeys.length === 0\n\n  const labelSize = (size / 2) * LABEL_SIZE_PERCENT\n  const wormSize = (size / 2) * WORM_SIZE_PERCENT\n  const innerRadius =\n    size / 2 - labelSize - wormSize - LABEL_PADDING - INNER_CIRCLE_PADDING\n\n  const endLineStart =\n    labelSize +\n    LABEL_PADDING +\n    wormSize +\n    INNER_CIRCLE_PADDING -\n    INNER_CIRCLE_STROKE_WIDTH / 2\n  const endLineEnd = endLineStart + 90\n\n  const paddingTop = (heightCircle - size) / 2\n\n  // 0 - 90\n  return (\n    <svg width={size + 200} height={heightCircle}>\n      <defs>\n        <linearGradient id=\"label-gradient\">\n          <stop offset=\"0%\" stopColor=\"rgba(255, 255, 255, 0)\"></stop>\n          <stop offset=\"10%\" stopColor=\"var(--bg)\"></stop>\n        </linearGradient>\n        <linearGradient id=\"label-gradient-flip\">\n          <stop offset=\"90%\" stopColor=\"var(--bg)\"></stop>\n          <stop offset=\"100%\" stopColor=\"rgba(255, 255, 255, 0)\"></stop>\n        </linearGradient>\n        <filter id=\"brightness\">\n          <feComponentTransfer>\n            <feFuncR type=\"linear\" slope=\"1.2\" />\n            <feFuncG type=\"linear\" slope=\"1.2\" />\n            <feFuncB type=\"linear\" slope=\"1.2\" />\n          </feComponentTransfer>\n        </filter>\n      </defs>\n\n      <g transform={`translate(${size / 2 + 100}, ${size / 2 + paddingTop})`}>\n        {selectedKeys.map((title) => {\n          const {\n            x1,\n            y1,\n            x2,\n            y2,\n            pointAX,\n            pointAY,\n            pointBX,\n            pointBY,\n          } = raccontiJoinLines[title]\n          return (\n            <g key={title}>\n              {/* <line x1={x1} y1={y1} x2={x2} y2={y2} fill=\"red\" stroke=\"red\" />\n              <circle cx={pointAX} cy={pointAY} r={5} fill={'blue'} />\n              <circle cx={pointBX} cy={pointBY} r={5} fill={'purple'} /> */}\n              <path\n                strokeDasharray=\"2\"\n                className=\"realismo-label-join\"\n                fill=\"none\"\n                stroke=\"black\"\n                d={`M ${x1} ${y1} C ${pointAX} ${pointAY}, ${pointBX} ${pointBY}, ${x2} ${y2}`}\n              />\n            </g>\n          )\n        })}\n\n        {/* {racconti.map((racconto, i) => {\n          const angle = racconto.rotation\n          return (\n            <g\n              key={i}\n              className={`worm-label worm-label-${i}`}\n              style={{ transform: `rotate(${angle}deg)` }}\n            >\n              <WormLabel\n                size={size}\n                flipText={angle >= 90 && angle <= 270}\n                isSelected={allSelected || !!selected[racconto.title]}\n                isOmitted={!!omitted[racconto.title]}\n                onClick={handleClick}\n                radius={size / 2}\n                labelSize={(size / 2) * LABEL_SIZE_PERCENT}\n                wormSize={(size / 2) * WORM_SIZE_PERCENT}\n                racconto={racconto}\n                circles={circlesMap[racconto.title]}\n              ></WormLabel>\n            </g>\n          )\n        })} */}\n        {/* <circle cx={0} cy={0} r={size / 2 - labelSize} fill='transparent' /> */}\n        {racconti.map((racconto, i) => {\n          const angle = racconto.rotation\n          return (\n            <g\n              key={i}\n              className={`worm-${i}`}\n              style={{ transform: `rotate(${angle}deg)` }}\n            >\n              <Worm\n                size={size}\n                flipText={angle >= 90 && angle <= 270}\n                isSelected={allSelected || !!selected[racconto.title]}\n                isOmitted={!!omitted[racconto.title]}\n                onClick={handleClick}\n                radius={size / 2}\n                labelSize={(size / 2) * LABEL_SIZE_PERCENT}\n                wormSize={(size / 2) * WORM_SIZE_PERCENT}\n                racconto={racconto}\n                circles={circlesMap[racconto.title]}\n              ></Worm>\n            </g>\n          )\n        })}\n      </g>\n      <g transform={`translate(100, ${paddingTop})`}>\n        <Legend\n          x={radius}\n          wormSize={wormSize}\n          labelSize={labelSize}\n          endLineStart={endLineStart}\n          endLineEnd={endLineEnd}\n        />\n\n        <CicrleYears\n          x={radius}\n          y={radius}\n          radius={innerRadius}\n          radiusStrokeSize={INNER_CIRCLE_STROKE_WIDTH}\n        />\n      </g>\n    </svg>\n  )\n}\n","import React, { useMemo } from 'react'\nimport { linkVertical } from 'd3-shape'\nimport { colorScale } from './utils'\nimport range from 'lodash/range'\nimport MiniInfoBox from '../../general/MiniInfoBox'\n\nconst CHART_PADDING_X = 80\nconst LEGEND_TEXT_HEIGHT = 150\n\nconst MINI_RADIUS = 20\nconst LOCATION_RADIUS = 2\n\nconst LEVEL_HEIGHT = 40\n\nconst WORM_MARGIN_TOP = 20\n\nconst CHART_MARGIN_LEFT = 100\n\nfunction yScale(level) {\n  return WORM_MARGIN_TOP + LEVEL_HEIGHT * level\n}\n\nfunction makeItemFill(item) {\n  if (item.ghost) {\n    return 'rgba(95, 102, 100, 0.5)'\n  }\n  if (item.movement === 'FALSE') {\n    return item.color\n  }\n  return `url(${makeItemGradientUrl(item)})`\n}\n\nfunction makeItemGradientUrl(item) {\n  let direction = ''\n  if (item.direction === 'forward') {\n    direction = '-forward'\n  } else if (item.direction === 'backward') {\n    direction = '-backward'\n  }\n  return `#worm-detail-${item.category}${direction}`\n}\n\nfunction WormDetail({ data, width: allWidth, title, year, toggleSelect }) {\n  const width = allWidth - CHART_PADDING_X * 2 - CHART_MARGIN_LEFT\n  const dataWorms = useMemo(() => {\n    return data.map((item) => {\n      const x1 =\n        item.startTotalNorm * width + CHART_PADDING_X + CHART_MARGIN_LEFT\n      const x2 = item.endTotalNorm * width + CHART_PADDING_X + CHART_MARGIN_LEFT\n      const xLocation =\n        item.locationTotalNorm * width + CHART_PADDING_X + CHART_MARGIN_LEFT\n      const color = colorScale(item.category)\n      return {\n        ...item,\n        level: +item.level,\n        color,\n        x1,\n        x2,\n        xLocation,\n      }\n    })\n  }, [data, width])\n\n  const maxLevel = 3\n\n  const labalesData = useMemo(() => {\n    let dataForLabels\n    const dataWormsLabeled = dataWorms.filter(d => d.ghost !== true)\n    if (dataWormsLabeled.length < 13) {\n      dataForLabels = dataWormsLabeled.map((item, i) => {\n        const x = CHART_PADDING_X + CHART_MARGIN_LEFT + i * 60\n        return {\n          ...item,\n          x,\n          y: yScale(maxLevel),\n        }\n      })\n    } else {\n      const mul = width / (dataWormsLabeled.length - 1)\n      dataForLabels = dataWormsLabeled.map((item, i) => {\n        const x = CHART_PADDING_X + CHART_MARGIN_LEFT + i * mul\n        return {\n          ...item,\n          x,\n          y: yScale(maxLevel),\n        }\n      })\n    }\n    const link = linkVertical()\n    return dataForLabels.map((item) => {\n      const linePath = link({\n        source: [item.xLocation, yScale(item.level)],\n        target: [item.x, item.y - 5],\n      })\n      return {\n        ...item,\n        linePath,\n      }\n    })\n  }, [dataWorms, width])\n\n  const levelsData = useMemo(() => {\n    return range(maxLevel).map((level) => {\n      const dataLevelWorms = dataWorms.filter((d) => d.level === level)\n      const hasData = dataLevelWorms.length > 0\n      const dataLabel = labalesData.filter((d) => d.level === level)\n\n      return {\n        level,\n        dataLevelWorms,\n        hasData,\n        dataLabel,\n      }\n    })\n  }, [dataWorms, labalesData])\n\n  const totalLength = data[0]?.length ?? 0\n  let totalLabelX\n  const height = yScale(maxLevel) + LEGEND_TEXT_HEIGHT\n\n  let ghostWorm\n\n  // GHOST (no ambientazione)\n  if (dataWorms.length === 1 && dataWorms[0].occurrence_location === '0') {\n    ghostWorm = {\n      x1: 0 + CHART_PADDING_X + CHART_MARGIN_LEFT,\n      x2:\n        dataWorms[0].lengthTotalNorm * width +\n        CHART_PADDING_X +\n        CHART_MARGIN_LEFT,\n    }\n    totalLabelX = ghostWorm.x2\n  } else {\n    totalLabelX = dataWorms[dataWorms.length - 1]?.x2\n  }\n\n  return (\n    <div className=\"realismo-detail\">\n      <div className=\"realismo-detail-info-legend\">\n        Livelli\n        <br />\n        di annidamento\n        <br />\n        dei luoghi\n      </div>\n      <div style={{ margin: `0px ${CHART_PADDING_X}px` }}>\n        <MiniInfoBox\n          onClose={() => toggleSelect(title)}\n          style={{ marginLeft: CHART_MARGIN_LEFT }}\n        >\n          {title}, {year}\n        </MiniInfoBox>\n      </div>\n      <svg className=\"worm-detail-svg\" style={{ height }}>\n        <linearGradient id=\"worm-detail-indoor\">\n          <stop offset={'0%'} stopColor={'#ffc33e'} />\n          <stop offset={'50%'} stopColor={'#FFF3D7'}>\n            <animate\n              attributeName=\"offset\"\n              values=\"0;1;0\"\n              dur=\"8s\"\n              repeatCount=\"indefinite\"\n            ></animate>\n          </stop>\n          <stop offset={'100%'} stopColor={'#ffc33e'} />\n        </linearGradient>\n        <linearGradient id=\"worm-detail-indoor-backward\">\n          <stop offset={'0%'} stopColor={'#ffc33e'} />\n          <stop offset={'50%'} stopColor={'#FFF3D7'}>\n            <animate\n              attributeName=\"offset\"\n              values=\"1;0\"\n              dur=\"4s\"\n              repeatCount=\"indefinite\"\n            ></animate>\n          </stop>\n          <stop offset={'100%'} stopColor={'#ffc33e'} />\n        </linearGradient>\n        <linearGradient id=\"worm-detail-indoor-forward\">\n          <stop offset={'0%'} stopColor={'#ffc33e'} />\n          <stop offset={'50%'} stopColor={'#FFF3D7'}>\n            <animate\n              attributeName=\"offset\"\n              values=\"0;1\"\n              dur=\"4s\"\n              repeatCount=\"indefinite\"\n            ></animate>\n          </stop>\n          <stop offset={'100%'} stopColor={'#ffc33e'} />\n        </linearGradient>\n        <linearGradient id=\"worm-detail-outdoor\">\n          <stop offset={'0%'} stopColor={'#00c97c'} />\n          <stop offset={'50%'} stopColor={'#63FFC3'}>\n            <animate\n              attributeName=\"offset\"\n              values=\"0;1;0\"\n              dur=\"8s\"\n              repeatCount=\"indefinite\"\n            ></animate>\n          </stop>\n          <stop offset={'100%'} stopColor={'#00c97c'} />\n        </linearGradient>\n        <linearGradient id=\"worm-detail-outdoor-forward\">\n          <stop offset={'0%'} stopColor={'#00c97c'} />\n          <stop offset={'50%'} stopColor={'#63FFC3'}>\n            <animate\n              attributeName=\"offset\"\n              values=\"0;1\"\n              dur=\"4s\"\n              repeatCount=\"indefinite\"\n            ></animate>\n          </stop>\n          <stop offset={'100%'} stopColor={'#00c97c'} />\n        </linearGradient>\n        <linearGradient id=\"worm-detail-outdoor-backward\">\n          <stop offset={'0%'} stopColor={'#00c97c'} />\n          <stop offset={'50%'} stopColor={'#63FFC3'}>\n            <animate\n              attributeName=\"offset\"\n              values=\"1;0\"\n              dur=\"4s\"\n              repeatCount=\"indefinite\"\n            ></animate>\n          </stop>\n          <stop offset={'100%'} stopColor={'#00c97c'} />\n        </linearGradient>\n        <linearGradient id=\"worm-detail-transportation\">\n          <stop offset={'0%'} stopColor={'#4a4aff'} />\n          <stop offset={'50%'} stopColor={'#E3E3FF'}>\n            <animate\n              attributeName=\"offset\"\n              values=\"0;1;0\"\n              dur=\"8s\"\n              repeatCount=\"indefinite\"\n            ></animate>\n          </stop>\n          <stop offset={'100%'} stopColor={'#4a4aff'} />\n        </linearGradient>\n        <linearGradient id=\"worm-detail-transportation-forward\">\n          <stop offset={'0%'} stopColor={'#4a4aff'} />\n          <stop offset={'50%'} stopColor={'#E3E3FF'}>\n            <animate\n              attributeName=\"offset\"\n              values=\"0;1\"\n              dur=\"4s\"\n              repeatCount=\"indefinite\"\n            ></animate>\n          </stop>\n          <stop offset={'100%'} stopColor={'#4a4aff'} />\n        </linearGradient>\n        <linearGradient id=\"worm-detail-transportation-backward\">\n          <stop offset={'0%'} stopColor={'#4a4aff'} />\n          <stop offset={'50%'} stopColor={'#E3E3FF'}>\n            <animate\n              attributeName=\"offset\"\n              values=\"1;0\"\n              dur=\"4s\"\n              repeatCount=\"indefinite\"\n            ></animate>\n          </stop>\n          <stop offset={'100%'} stopColor={'#4a4aff'} />\n        </linearGradient>\n        <g transform={'translate(0, 10)'}>\n          {levelsData.map((datum) => (\n            <g\n              key={datum.level}\n              className={`worm-detail-grid-container ${\n                datum.hasData ? 'level-enabled' : 'level-disabled'\n              }`}\n            >\n              <line\n                x1={CHART_PADDING_X + CHART_MARGIN_LEFT}\n                x2={width + CHART_PADDING_X + CHART_MARGIN_LEFT}\n                y1={yScale(datum.level)}\n                y2={yScale(datum.level)}\n                className={`worm-detail-y-grid`}\n              ></line>\n              <text\n                className={'worm-detail-level-label'}\n                y={yScale(datum.level) + 4}\n                x={CHART_PADDING_X - 10 + CHART_MARGIN_LEFT}\n              >\n                {datum.level}\n              </text>\n            </g>\n          ))}\n\n          {levelsData.map((datum) => (\n            <g key={datum.level}>\n              {datum.dataLevelWorms.map((item) => (\n                <g key={item.occurrence_location}>\n                  <rect\n                    rx={2}\n                    ry={2}\n                    x={item.x1}\n                    width={item.x2 - item.x1}\n                    height={MINI_RADIUS}\n                    style={{\n                      fill: makeItemFill(item),\n                    }}\n                    y={yScale(item.level) - MINI_RADIUS / 2}\n                  />\n                </g>\n              ))}\n              {datum.dataLabel.map((item) => (\n                <g key={item.occurrence_location}>\n                  <path d={item.linePath} fill=\"none\" stroke=\"#858585\" />\n                  <text\n                    x={item.x}\n                    y={item.y}\n                    textAnchor=\"end\"\n                    style={{\n                      transformOrigin: `${item.x}px ${item.y}px`,\n                      transform: `rotate(-45deg)`,\n                    }}\n                  >\n                    {item.occurrence}\n                  </text>\n                </g>\n              ))}\n              {datum.dataLevelWorms.filter(d => d.ghost !== true).map((item) => (\n                <g key={item.occurrence_location}>\n                  <circle\n                    fill=\"black\"\n                    cx={item.xLocation}\n                    cy={yScale(item.level)}\n                    r={LOCATION_RADIUS}\n                  />\n                </g>\n              ))}\n            </g>\n          ))}\n          {ghostWorm && (\n            <rect\n              rx={2}\n              ry={2}\n              x={ghostWorm.x1}\n              width={ghostWorm.x2 - ghostWorm.x1}\n              height={MINI_RADIUS}\n              style={{\n                fill: 'rgba(95, 102, 100, 0.5)',\n              }}\n              y={yScale(0) - MINI_RADIUS / 2}\n            />\n          )}\n        </g>\n\n        <text\n          textAnchor={totalLabelX / width >= 0.75 ? 'end' : 'middle'}\n          x={totalLabelX}\n          y={10}\n          style={{ fontSize: 12 }}\n        >\n          {totalLength} caratteri\n        </text>\n        <line\n          x1={totalLabelX}\n          x2={totalLabelX}\n          y1={12}\n          y2={18}\n          stroke={'black'}\n        />\n      </svg>\n    </div>\n  )\n}\n\nexport default React.memo(WormDetail)\n","import React, {\n  useState,\n  useCallback,\n  useRef,\n  useLayoutEffect,\n  useMemo,\n} from 'react'\nimport HelpSidePanel from '../../panels/HelpSidePanel/HelpSidePanel'\nimport MainMenu from '../../general/MainMenu'\nimport PageTitle from '../../general/PageTitle'\nimport AltOptions from '../../general/Options/AltOptions'\nimport SearchDropDown from '../../general/Search/SearchDropDownControlled'\nimport MoreInfo from '../../general/MoreInfo'\nimport CompassButton from '../../general/CompassButton/CompassButton'\nimport useDimensions from 'react-use-dimensions'\nimport GlobalData from '../../utilities/GlobalData'\nimport RangeFilter from '../../general/RangeFilter'\n\nimport sortBy from 'lodash/sortBy'\nimport uniqBy from 'lodash/uniqBy'\n\nimport {\n  datasetToCircles,\n  dataset,\n  raccontiDegs as racconti,\n  yearsExtent,\n  detailWormsCircles,\n} from './utils'\nimport CircleWorms from './CircleWorms'\nimport WormDetail from './WormDetail'\nimport { groupBy } from 'lodash'\n\nconst LABEL_BEZIER_DELTA_A = 30\nconst RESET_BOX_HEIGHT = 70\nconst REALISMO_DIAMETER = 760\nconst REALISMO_RADIUS = REALISMO_DIAMETER / 2\n\nconst circlesMap = datasetToCircles(40)\n\nconst searchOptionsTitolo = racconti.map((racconto) => ({\n  label: racconto.title,\n  value: racconto.title,\n}))\nconst searchOptionsVolume = (() => {\n  const keyByTitolo = racconti.reduce((acc, r) => {\n    acc[r.title] = true\n    return acc\n  }, {})\n  return uniqBy(racconti, 'volume').map((racconto) => {\n    const volume = racconto.volume\n    let volumeLabel = volume\n    if (keyByTitolo[volumeLabel]) {\n      volumeLabel += ' (volume)'\n    }\n    return {\n      label: volumeLabel,\n      value: volumeLabel,\n      volume: volume,\n    }\n  })\n})()\n\nconst titoliByVolume = groupBy(racconti, 'volume')\n\nconst optionsMovimento = [\n  {\n    label: 'SI MOVIMENTO',\n  },\n  {\n    label: 'NO MOVIMENTO',\n  },\n]\n\nconst optionsSpace = [\n  {\n    label: 'INTERNO',\n    value: 'indoor',\n  },\n  {\n    label: 'ESTERNO',\n    value: 'outdoor',\n  },\n  {\n    label: 'MEZZO DI TRANSPORTO',\n    value: 'transportation',\n  },\n  {\n    label: 'ASSENZA DI AMBIENTAZIONE',\n    value: 'no_setting',\n  },\n]\n\nconst cercaOptions = [\n  { label: 'Volume', value: 'volume' },\n  { label: 'Titolo', value: 'titolo' },\n]\n\nexport default function RealismoMain({ title }) {\n  const [helpSidePanelOpen, setHelpSidePanelOpen] = useState(false)\n  const toggleHelpSidePanel = useCallback(() => {\n    setHelpSidePanelOpen((a) => !a)\n  }, [])\n  const [findFor, setFindFor] = useState('Titolo')\n  const [ricerca, setRicerca] = useState([])\n\n  const helpPage = GlobalData.helpPages.realism.main\n\n  // const containerRef = useRef()\n  // const [measures, setMeasures] = useState(null)\n  // useLayoutEffect(() => {\n  //   const m = containerRef.current.getBoundingClientRect()\n  //   setMeasures(m)\n  // }, [])\n  const [ref, { width }] = useDimensions({ liveMeasure: false })\n  const [refCirlce, { height: heightCircle }] = useDimensions({\n    liveMeasure: false,\n  })\n\n  const [movimento, setMovimento] = useState(null)\n  const [spazio, setSpazio] = useState([])\n  const [timeFilter, setTimeFilter] = useState(yearsExtent)\n  const spazioLabels = useMemo(() => spazio.map((s) => s.label), [spazio])\n\n  const omitted = useMemo(() => {\n    const omittedStuff = {}\n    const spazioValues = spazio.map((s) => s.value)\n    Object.keys(dataset).forEach((titolo) => {\n      let keep = true\n\n      if (keep && movimento !== null) {\n        if (movimento === 'SI MOVIMENTO') {\n          keep = dataset[titolo].some((datum) => {\n            if (movimento === 'SI MOVIMENTO') {\n              return datum.movement === 'TRUE'\n            }\n            return false\n          })\n        } else {\n          keep = dataset[titolo].every((datum) => {\n            if (movimento === 'NO MOVIMENTO') {\n              return datum.movement === 'FALSE'\n            }\n            return false\n          })\n        }\n      }\n\n      if (keep && spazioValues.length > 0) {\n        const categories = dataset[titolo].map((i) => i.category)\n        keep = spazioValues.some((category) => {\n          return categories.indexOf(category) !== -1\n        })\n      }\n\n      if (keep) {\n        keep = dataset[titolo].every((d) => {\n          return (\n            d.year >= timeFilter[0].getFullYear() &&\n            d.year <= timeFilter[1].getFullYear()\n          )\n        })\n      }\n\n      if (!keep) {\n        omittedStuff[titolo] = true\n      }\n    })\n    return omittedStuff\n  }, [movimento, spazio, timeFilter])\n\n  const selected = useMemo(() => {\n    const mapSelected = {}\n    const volumeSelected = {}\n    ricerca.forEach((item) => {\n      if (!item.volume) {\n        mapSelected[item.value] = true\n      } else {\n        volumeSelected[item.volume] = true\n      }\n    })\n    racconti\n      .filter((r) => volumeSelected[r.volume])\n      .forEach((item) => {\n        mapSelected[item.title] = true\n      })\n    return mapSelected\n  }, [ricerca])\n\n  const toggleSelect = useCallback((title) => {\n    setRicerca((ricerca) => {\n      const newRicerca = ricerca.filter((item) => item.value !== title)\n      if (ricerca.length === newRicerca.length) {\n        return ricerca.concat({ label: title, value: title })\n      }\n      return newRicerca\n    })\n  }, [])\n\n  const selctedTitoliSorted = useMemo(() => {\n    const ricercaTitoli = uniqBy(\n      ricerca\n        .filter((r) => r.volume)\n        .reduce(\n          (acc, r) =>\n            acc.concat(\n              titoliByVolume[r.volume].map((r) => ({\n                value: r.title,\n                label: r.title,\n              }))\n            ),\n          []\n        )\n        .concat(ricerca.filter((r) => !r.volume)),\n      'value'\n    )\n    return sortBy(ricercaTitoli, (item) => dataset[item.value]?.[0]?.year)\n  }, [ricerca])\n\n  const leftRacconti = useMemo(() => {\n    return racconti\n      .filter((r) => r.rotation >= 90 && r.rotation <= 270)\n      .reverse()\n  }, [])\n\n  const rightRacconti = useMemo(() => {\n    return racconti.filter((r) => !(r.rotation >= 90 && r.rotation <= 270))\n  }, [])\n\n  const lineHeightRight = heightCircle / rightRacconti.length\n  const lineHeightLeft = (heightCircle - RESET_BOX_HEIGHT) / leftRacconti.length\n\n  const raccontiJoinLines = useMemo(() => {\n    const paddingTop = (heightCircle - REALISMO_DIAMETER) / 2\n\n    return racconti.reduce((acc, racconto) => {\n      const isLeft = racconto.rotation >= 90 && racconto.rotation <= 270\n\n      let x1, x2, y1, y2, pointAX, pointAY, pointBX, pointBY\n\n      if (isLeft) {\n        const angle = Math.abs(180 - racconto.rotation)\n        const index = leftRacconti.indexOf(racconto)\n        x2 = -(REALISMO_DIAMETER / 2 + 100) + 5\n        y2 =\n          -(REALISMO_DIAMETER / 2) +\n          index * lineHeightLeft +\n          lineHeightLeft / 2 -\n          paddingTop +\n          RESET_BOX_HEIGHT\n\n        y1 =\n          -Math.sin((Math.PI / 180) * angle) *\n          (REALISMO_RADIUS - 5) *\n          (racconto.rotation > 180 ? 1 : -1)\n        x1 = -Math.cos((Math.PI / 180) * angle) * (REALISMO_RADIUS - 5)\n\n        pointAY =\n          -Math.sin((Math.PI / 180) * angle) *\n          (REALISMO_RADIUS + LABEL_BEZIER_DELTA_A) *\n          (racconto.rotation > 180 ? 1 : -1)\n        pointAX =\n          -Math.cos((Math.PI / 180) * angle) *\n          (REALISMO_RADIUS + LABEL_BEZIER_DELTA_A)\n      } else {\n        const index = rightRacconti.indexOf(racconto)\n        x2 = REALISMO_DIAMETER / 2 + 100 - 5\n        y2 =\n          -(REALISMO_DIAMETER / 2) +\n          index * lineHeightRight +\n          lineHeightRight / 2 -\n          paddingTop\n\n        const angle = Math.abs(racconto.rotation)\n\n        y1 =\n          -Math.sin((Math.PI / 180) * angle) *\n          (REALISMO_RADIUS - 5) *\n          (racconto.rotation > 0 ? -1 : 1)\n        x1 = Math.cos((Math.PI / 180) * angle) * (REALISMO_RADIUS - 5)\n\n        pointAY =\n          -Math.sin((Math.PI / 180) * angle) *\n          (REALISMO_RADIUS + LABEL_BEZIER_DELTA_A) *\n          (racconto.rotation > 0 ? -1 : 1)\n        pointAX =\n          Math.cos((Math.PI / 180) * angle) *\n          (REALISMO_RADIUS + LABEL_BEZIER_DELTA_A)\n      }\n\n      pointBX = (x1 + x2) / 2\n      pointBY = y2\n\n      acc[racconto.title] = {\n        x1,\n        y1,\n        x2,\n        y2,\n        pointAX,\n        pointAY,\n        pointBX,\n        pointBY,\n      }\n\n      return acc\n    }, {})\n  }, [\n    leftRacconti,\n    rightRacconti,\n    heightCircle,\n    lineHeightRight,\n    lineHeightLeft,\n  ])\n\n  return (\n    <div>\n      <HelpSidePanel\n        open={helpSidePanelOpen}\n        page={helpPage}\n        closeButtonClicked={toggleHelpSidePanel}\n      />\n      <div className=\"top-nav navigations\">\n        <MainMenu className=\"main-menu\" style={{ gridColumn: 'span 1' }} />\n        <PageTitle title={title} style={{ gridColumn: 'span 10' }} />\n        <AltOptions\n          multiple={false}\n          title=\"Cerca per\"\n          options={cercaOptions}\n          value={findFor}\n          onChange={(x) => setFindFor(x.label)}\n          style={{\n            gridColumn: 'span 3',\n          }}\n        />\n        <SearchDropDown\n          style={{\n            gridColumn: 'span 8',\n          }}\n          data={{\n            options:\n              findFor === 'Titolo' ? searchOptionsTitolo : searchOptionsVolume,\n          }}\n          changeOptions={(newOptions) => {\n            setRicerca(newOptions)\n          }}\n          selectedOptions={ricerca}\n        />\n        <MoreInfo\n          style={{ gridColumn: 'span 1' }}\n          onClicked={toggleHelpSidePanel}\n        />\n        <CompassButton\n          style={{\n            gridColumn: 'span 1',\n            color: 'white',\n            backgroundColor: 'black',\n          }}\n        />\n      </div>\n      <div className=\"realismo-content\">\n        <div\n          className=\"h-100 w-100 d-flex justify-content-center realismo-circle-wrapper\"\n          style={{\n            position: 'relative',\n          }}\n        >\n          <div className=\"realismo-labels-container on-left text-right\">\n            <div className=\"realismo-reset\">\n              <div>\n                <div>Seleziona i test e poi scorri in basso</div>\n                <button\n                  onClick={() => {\n                    // Reset Selection\n                    setRicerca([])\n                    // Reset Filters\n                    // setSpazio([])\n                    // setMovimento(null)\n                    // setTimeFilter(yearsExtent)\n                  }}\n                >\n                  Reset\n                </button>\n              </div>\n            </div>\n            {leftRacconti.map((racconto, i) => {\n              return (\n                <div\n                  onClick={() => toggleSelect(racconto.title)}\n                  className={`realismo-label ${\n                    selected[racconto.title] ? 'realismo-label-selected' : ''\n                  }`}\n                  style={{\n                    height: `${lineHeightLeft}px`,\n                    lineHeight: `${lineHeightLeft}px`,\n                  }}\n                  key={i}\n                >\n                  {racconto.title}\n                </div>\n              )\n            })}\n          </div>\n          <div className=\"circle-worms-the-wrapper\" ref={refCirlce}>\n            {heightCircle && (\n              <CircleWorms\n                heightCircle={heightCircle}\n                toggleSelect={toggleSelect}\n                selected={selected}\n                omitted={omitted}\n                circlesMap={circlesMap}\n                racconti={racconti}\n                raccontiJoinLines={raccontiJoinLines}\n                radius={REALISMO_RADIUS}\n              ></CircleWorms>\n            )}\n          </div>\n          <div className=\"realismo-labels-container on-right\">\n            {rightRacconti.map((racconto, i) => {\n              return (\n                <div\n                  style={{\n                    lineHeight: `${lineHeightRight}px`,\n                    height: `${lineHeightRight}px`,\n                  }}\n                  onClick={() => toggleSelect(racconto.title)}\n                  className={`realismo-label ${\n                    selected[racconto.title] ? 'realismo-label-selected' : ''\n                  }`}\n                  key={i}\n                >\n                  {racconto.title}\n                </div>\n              )\n            })}\n          </div>\n        </div>\n        <div className=\"bottom-nav navigations\">\n          <AltOptions\n            title=\"Movimento\"\n            options={optionsMovimento}\n            value={movimento}\n            allowEmpty={true}\n            onChange={(m) => {\n              if (m) {\n                setMovimento(m.label)\n              } else {\n                setMovimento(null)\n              }\n            }}\n            style={{\n              gridColumn: 'span 8',\n              textAlign: 'center',\n            }}\n          />\n          <AltOptions\n            title=\"Spazio\"\n            multiple\n            options={optionsSpace}\n            value={spazioLabels}\n            allowEmpty={true}\n            onChange={(s) => {\n              setSpazio(s)\n            }}\n            style={{\n              gridColumn: 'span 8',\n              textAlign: 'center',\n            }}\n          />\n          <RangeFilter\n            style={{ gridColumn: 'span 8' }}\n            data={timeFilter}\n            changeOptions={(timeSpan) => {\n              setTimeFilter(timeSpan)\n            }}\n          />\n        </div>\n      </div>\n      {ricerca.length > 0 && (\n        <div className=\"realismo-details-container\" ref={ref}>\n          <h4>VEDI IN DETTAGLIO I TESTI SELEZIONATI</h4>\n          {width &&\n            selctedTitoliSorted.map((item) => (\n              <WormDetail\n                data={detailWormsCircles[item.value]}\n                year={detailWormsCircles[item.value]?.[0]?.year}\n                title={item.value}\n                width={width}\n                key={item.value}\n                toggleSelect={toggleSelect}\n              />\n            ))}\n        </div>\n      )}\n    </div>\n  )\n}\n"],"sourceRoot":""}