{"version":3,"sources":["general/MiniInfoBox/MiniInfoBox.js","general/MiniInfoBox/index.js","../node_modules/lodash/mapValues.js","visualizations/Realismo/utils.js","visualizations/Realismo/CircleWorms.js","visualizations/Realismo/WormDetail.js","visualizations/Realismo/WormDetail2.js","visualizations/Realismo/RealismoMain.js"],"names":["MiniInfoBox","children","onClose","className","onClick","baseAssignValue","require","baseForOwn","baseIteratee","module","exports","object","iteratee","result","value","key","realismoDataNormalized","realismoData","map","item","startNorm","start","length","endNorm","end","locationNorm","yearsExtent","extent","d","year","y","Date","racconti","uniqBy","title","dataset","groupBy","maxLength","Math","max","filter","Boolean","detailWormsCircles","mapValues","data","startTotalNorm","endTotalNorm","locationTotalNorm","lengthTotalNorm","colorScale","scaleOrdinal","range","domain","unknown","GAP_SIZE","LEGEND_SIZE","uniqueYears","x","sort","numGaps","reduce","acc","i","unitDeg","lastRotation","raccontiDegs","racconto","rotation","byYear","yearsArcs","startAngleDeg","startAngle","PI","endAngle","angleLabel","calculateDegs","LABEL_SIZE_PERCENT","WORM_SIZE_PERCENT","LABEL_PADDING","INNER_CIRCLE_PADDING","INNER_CIRCLE_STROKE_WIDTH","arcGenerator","arc","Worm","React","memo","circles","radius","labelSize","wormSize","isSelected","isOmitted","wormStart","size","flipText","circleRadius","yScale","scaleLinear","animationDelays","occurrence_location","animationGroups","style","opacity","cursor","undefined","circle","cx","cy","level","movement","delay","direction","fill","category","transformOrigin","animationDelay","r","place","WormLabel","wormEnd","flipTextStyle","transform","alignmentBaseline","width","height","CicrleYears","radiusStrokeSize","yearArc","textX","textAnchor","fontSize","outerRadius","innerRadius","Legend","endLineStart","endLineEnd","y1","y2","x1","x2","stroke","strokeWidth","CircleWorms","circlesMap","selected","omitted","toggleSelect","min","handleClick","useCallback","allSelected","Object","keys","id","offset","stopColor","angle","margins","occurrence","CHART_PADDING_X","LEGEND_TEXT_HEIGHT","MINI_RADIUS","LOCATION_RADIUS","OVERLAP_RADIUS","WORM_MARGIN_TOP","CirclesLine","color","xLocation","circlesCount","locationCenterIndex","j","allWidth","dataWorms","useMemo","widthWorm","ceil","maxLevel","margin","n","circleWidth","out","find","push","searchOptions","label","optionsMovimento","optionsSpace","cercaOptions","RealismoMain","useState","helpSidePanelOpen","setHelpSidePanelOpen","toggleHelpSidePanel","a","ricerca","setRicerca","helpPage","GlobalData","helpPages","plot","main","containerRef","useRef","measures","setMeasures","useLayoutEffect","m","current","getBoundingClientRect","movimento","setMovimento","spazio","setSpazio","timeFilter","setTimeFilter","spazioLabels","s","omittedStuff","spazioValues","forEach","titolo","keep","some","datum","categories","indexOf","every","getFullYear","selcted","mapSelected","newRicerca","concat","selctedTitoliSorted","sortBy","useDimensions","liveMeasure","ref","HelpSidePanel","open","page","closeButtonClicked","MainMenu","gridColumn","PageTitle","AltOptions","options","disabled","onChange","changeOptions","newOptions","selectedOptions","MoreInfo","onClicked","CompassButton","backgroundColor","position","allowEmpty","textAlign","multiple","RangeFilter","timeSpan"],"mappings":"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","file":"static/js/4.0313b52e.chunk.js","sourcesContent":["import React from 'react'\nimport './MiniInfoBox.css'\n\nexport default function MiniInfoBox({ children, onClose }) {\n  return (\n    <div className=\"MiniInfoBox\">\n      <div className=\"MiniInfoBox-start\">{children}</div>\n      <div className=\"MiniInfoBox-end\" onClick={onClose}>\n        &times;\n      </div>\n    </div>\n  )\n}\n","export { default } from './MiniInfoBox'","var baseAssignValue = require('./_baseAssignValue'),\n    baseForOwn = require('./_baseForOwn'),\n    baseIteratee = require('./_baseIteratee');\n\n/**\n * Creates an object with the same keys as `object` and values generated\n * by running each own enumerable string keyed property of `object` thru\n * `iteratee`. The iteratee is invoked with three arguments:\n * (value, key, object).\n *\n * @static\n * @memberOf _\n * @since 2.4.0\n * @category Object\n * @param {Object} object The object to iterate over.\n * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n * @returns {Object} Returns the new mapped object.\n * @see _.mapKeys\n * @example\n *\n * var users = {\n *   'fred':    { 'user': 'fred',    'age': 40 },\n *   'pebbles': { 'user': 'pebbles', 'age': 1 }\n * };\n *\n * _.mapValues(users, function(o) { return o.age; });\n * // => { 'fred': 40, 'pebbles': 1 } (iteration order is not guaranteed)\n *\n * // The `_.property` iteratee shorthand.\n * _.mapValues(users, 'age');\n * // => { 'fred': 40, 'pebbles': 1 } (iteration order is not guaranteed)\n */\nfunction mapValues(object, iteratee) {\n  var result = {};\n  iteratee = baseIteratee(iteratee, 3);\n\n  baseForOwn(object, function(value, key, object) {\n    baseAssignValue(result, key, iteratee(value, key, object));\n  });\n  return result;\n}\n\nmodule.exports = mapValues;\n","import realismoData from './data/realismo.json'\nimport groupBy from 'lodash/groupBy'\nimport uniqBy from 'lodash/uniqBy'\nimport { scaleOrdinal } from 'd3-scale'\nimport range from 'lodash/range'\nimport find from 'lodash/find'\nimport mapValues from 'lodash/mapValues'\nimport { extent } from 'd3-array'\n\nconst realismoDataNormalized = realismoData.map((item) => ({\n  ...item,\n  startNorm: +item.start / item.length,\n  endNorm: +item.end / item.length,\n  locationNorm: +item['occurrence_location'] / +item.length,\n}))\n\nexport const yearsExtent = extent(realismoData, (d) => +d.year).map(\n  (y) => new Date(y, 0)\n)\n\nexport const racconti = uniqBy(realismoData, 'title').map((item) => ({\n  title: item.title,\n  length: item.length,\n  year: +item.year,\n}))\n\nexport const dataset = groupBy(realismoDataNormalized, 'title')\n\nconst maxLength = Math.max(...realismoData.map(d => +d.length).filter(Boolean))\nexport const detailWormsCircles = mapValues(dataset, (data) => {\n  return data.map(item => ({\n    ...item,\n    startTotalNorm: +item.start / maxLength,\n    endTotalNorm: +item.end / maxLength,\n    locationTotalNorm: +item['occurrence_location'] / maxLength,\n    lengthTotalNorm: +item.length / maxLength,\n  }))\n})\n\nexport function datasetToCircles(n) {\n  return mapValues(dataset, (data) => {\n    const circleWidth = 1 / n\n\n    const circles = range(n).reduce((acc, item, i) => {\n      const startNorm = i * circleWidth\n      const endNorm = (i + 1) * circleWidth\n      const out =\n        find(\n          data,\n          (item) => item.startNorm <= startNorm && item.endNorm >= endNorm\n        ) || {}\n      let place = false\n      if (\n        out.occurrence &&\n        out.locationNorm >= startNorm &&\n        out.locationNorm <= endNorm\n      ) {\n        place = true\n      }\n      acc.push({ ...out, place })\n      return acc\n    }, [])\n\n    return circles\n  })\n}\n\nexport const colorScale = scaleOrdinal()\n  .range(['#ffc33e', '#00c97c', '#4a4aff'])\n  .domain(['indoor', 'outdoor', 'transportation'])\n  .unknown(['#ccc'])\n\nconst GAP_SIZE = 1\nexport const LEGEND_SIZE = 10\n\nfunction calculateDegs() {\n  const uniqueYears = uniqBy(racconti, (item) => item.year)\n    .map((x) => x.year)\n    .sort()\n\n  const numGaps = uniqueYears.reduce((acc, year, i) => {\n    if (i > 0) {\n      return acc + year - uniqueYears[i - 1]\n    }\n    return acc\n  }, 0)\n  const unitDeg = (360 - LEGEND_SIZE - numGaps * GAP_SIZE) / racconti.length\n\n  let lastRotation = LEGEND_SIZE / 2 + unitDeg / 2\n  const raccontiDegs = racconti.map((racconto, i) => {\n    if (i > 0) {\n      lastRotation =\n        lastRotation +\n        unitDeg +\n        (racconto.year - racconti[i - 1].year) * GAP_SIZE\n    }\n    return {\n      ...racconto,\n      rotation: lastRotation - 90,\n    }\n  })\n\n  const byYear = groupBy(raccontiDegs, 'year')\n  const yearsArcs = uniqueYears.map((year) => {\n    const data = byYear[year]\n    const startAngleDeg = (data[0].rotation + 90 - unitDeg / 2)\n    const startAngle = (startAngleDeg / 360) * (2 * Math.PI)\n\n    const endAngle =\n      ((data[data.length - 1].rotation + 90 + unitDeg / 2) / 360) *\n      (2 * Math.PI)\n\n    return {\n      startAngle,\n      angleLabel: startAngleDeg + unitDeg - 90 + unitDeg / 2,\n      endAngle,\n      year,\n    }\n  })\n\n  return { raccontiDegs, yearsArcs }\n}\n\nexport const { raccontiDegs, yearsArcs } = calculateDegs()\n","import React, { useCallback } from 'react'\nimport { colorScale, yearsArcs } from './utils'\nimport { scaleLinear } from 'd3-scale'\nimport { arc } from 'd3'\n\nconst LABEL_VISIBLE_SIZE = 80\nconst LABEL_SIZE_PERCENT = 0.2\nconst WORM_SIZE_PERCENT = 0.45\nconst LABEL_PADDING = 10\nconst INNER_CIRCLE_PADDING = 10\nconst INNER_CIRCLE_STROKE_WIDTH = 5\nconst LEGEND_TEXT_MARGIN = 3\n\nconst arcGenerator = arc()\n\nconst Worm = React.memo(\n  ({\n    racconto,\n    circles,\n    radius,\n    labelSize,\n    wormSize,\n    onClick,\n    isSelected,\n    isOmitted,\n    size,\n    flipText = false,\n  }) => {\n    const wormStart = radius - labelSize - wormSize - LABEL_PADDING\n    const wormEnd = radius - labelSize\n\n    const circleRadius = wormSize / circles.length / 2\n\n    const yScale = scaleLinear()\n      .domain([0, 2])\n      .range([0, circleRadius * 2])\n\n    //var for animations delays\n    const animationDelays = circles.reduce((acc, item) => {\n      if (!acc[item.occurrence_location]) {\n        acc[item.occurrence_location] = 1\n      }\n      acc[item.occurrence_location] += 1\n      return acc\n    }, {})\n\n    const animationGroups = {}\n\n    return (\n      <g\n        style={{\n          opacity: isSelected ? 1 : 0.3,\n        }}\n      >\n        <g\n          onClick={() => {\n            if (!isOmitted) {\n              onClick(racconto)\n            }\n          }}\n          style={{\n            cursor: isOmitted ? undefined : 'pointer',\n          }}\n        >\n          {circles.map((circle, i) => {\n            const cx = wormStart + i * circleRadius * 2 + circleRadius\n            const cy = yScale(circle.level || 0)\n\n            if (circle.movement === 'TRUE') {\n              animationGroups[circle.occurrence_location] =\n                animationGroups[circle.occurrence_location] === undefined\n                  ? 0\n                  : animationGroups[circle.occurrence_location] + 1\n            }\n\n            const delay =\n              circle.direction === 'forward'\n                ? animationGroups[circle.occurrence_location] * 0.2\n                : (animationDelays[circle.occurrence_location] -\n                    animationGroups[circle.occurrence_location]) *\n                  0.2\n\n            return (\n              <g key={i}>\n                <circle\n                  className={`${\n                    circle.movement === 'TRUE' && !isOmitted ? 'movement' : ''\n                  }`}\n                  style={{\n                    fill: colorScale(circle.category),\n                    transformOrigin: `${cx}px ${cy}px`,\n                    animationDelay: `${delay}s`,\n                  }}\n                  r={isOmitted ? circleRadius * 0.5 : circleRadius * 1.5}\n                  cy={cy}\n                  cx={cx}\n                ></circle>\n                {circle.place && (\n                  <circle\n                    style={{ fill: '#fff' }}\n                    r={circleRadius / 3}\n                    cy={cy}\n                    cx={cx}\n                  ></circle>\n                )}\n              </g>\n            )\n          })}\n        </g>\n      </g>\n    )\n  }\n)\n\nconst WormLabel = React.memo(\n  ({\n    racconto,\n    circles,\n    radius,\n    labelSize,\n    wormSize,\n    onClick,\n    isSelected,\n    isOmitted,\n    size,\n    flipText = false,\n  }) => {\n    const wormStart = radius - labelSize - wormSize - LABEL_PADDING\n    const wormEnd = radius - labelSize\n\n    const circleRadius = wormSize / circles.length / 2\n    const flipTextStyle = flipText\n      ? {\n          transform: 'rotate(180deg)',\n          transformOrigin: `${wormEnd}px 0px`,\n        }\n      : undefined\n\n\n    return (\n      <g\n        style={{\n          opacity: isSelected ? 1 : 0.3,\n        }}\n      >\n        <g style={flipTextStyle}>\n          <text\n            style={{ alignmentBaseline: 'middle' }}\n            x={wormEnd - (flipText ? LABEL_VISIBLE_SIZE : 0)}>{racconto.title}</text>\n        </g>\n        <g>\n          {!flipText && (\n            <rect\n              x={wormEnd + LABEL_VISIBLE_SIZE}\n              y={-7}\n              width={size / 2 - wormSize}\n              height={14}\n              fill=\"url(#label-gradient)\"\n            />\n          )}\n          {flipText && (\n            <rect\n              x={30}\n              y={-7}\n              width={wormEnd}\n              height={14}\n              fill=\"url(#label-gradient-flip)\"\n            />\n          )}\n          </g>\n      </g>\n    )\n  }\n)\n\nconst CicrleYears = React.memo(({ x, y, radius, radiusStrokeSize }) => {\n  return (\n    <g transform={`translate(${x}, ${y})`}>\n      {yearsArcs.map((yearArc) => {\n        const flipText = yearArc.angleLabel >= 90 && yearArc.angleLabel <= 270\n        const textX = radius - radiusStrokeSize\n        return (\n          <g key={yearArc.year}>\n            <g style={{ transform: `rotate(${yearArc.angleLabel}deg)` }}>\n              <text\n                textAnchor={flipText ? 'start' : 'end'}\n                x={textX}\n                y={0}\n                style={{\n                  transformOrigin: `${textX}px -3px`,\n                  transform: flipText ? 'rotate(180deg)' : undefined,\n                  fontSize: 10,\n                }}\n              >\n                {yearArc.year}\n              </text>\n            </g>\n            <path\n              style={{ fill: '#ddd' }}\n              d={arcGenerator({\n                ...yearArc,\n                outerRadius: radius - radiusStrokeSize / 2,\n                innerRadius: radius + radiusStrokeSize / 2,\n              })}\n            />\n          </g>\n        )\n      })}\n    </g>\n  )\n})\n\nconst Legend = React.memo(\n  ({ labelSize, x, wormSize, endLineStart, endLineEnd }) => {\n    return (\n      <g>\n        <line\n          y1={0}\n          y2={labelSize}\n          x1={x}\n          x2={x}\n          stroke=\"black\"\n          strokeWidth={2}\n        />\n        <text\n          x={x}\n          y={labelSize - LEGEND_TEXT_MARGIN}\n          className=\"realismo-legend-text\"\n          style={{\n            transformOrigin: `${x}px ${labelSize}px`,\n            transform: 'rotate(270deg)',\n          }}\n        >\n          TITOLO\n        </text>\n        <line\n          y1={labelSize + LABEL_PADDING}\n          y2={labelSize + LABEL_PADDING + wormSize}\n          x1={x}\n          x2={x}\n          stroke=\"black\"\n          strokeWidth={2}\n        />\n        <text\n          x={x}\n          y={labelSize + LABEL_PADDING - LEGEND_TEXT_MARGIN}\n          className=\"realismo-legend-text\"\n          textAnchor={'end'}\n          style={{\n            transformOrigin: `${x}px ${labelSize + LABEL_PADDING}px`,\n            transform: 'rotate(270deg)',\n          }}\n        >\n          FINE\n        </text>\n        <text\n          x={x}\n          y={labelSize + LABEL_PADDING + wormSize - LEGEND_TEXT_MARGIN}\n          className=\"realismo-legend-text\"\n          textAnchor={'start'}\n          style={{\n            transformOrigin: `${x}px ${labelSize + LABEL_PADDING + wormSize}px`,\n            transform: 'rotate(270deg)',\n          }}\n        >\n          INIZIO DEL TESTO\n        </text>\n\n        <line\n          y1={endLineStart}\n          y2={endLineEnd}\n          x1={x}\n          x2={x}\n          stroke=\"black\"\n          strokeWidth={2}\n        />\n        <g\n          className=\"babu\"\n          style={{\n            transform: `translate(${x - 14}px, ${endLineEnd}px) rotate(270deg)`,\n          }}\n        >\n          <text\n            x={0}\n            y={0}\n            className=\"realismo-legend-text\"\n            textAnchor={'start'}\n          >\n            ANNO PRIMA\n          </text>\n          <text\n            x={0}\n            y={10}\n            className=\"realismo-legend-text\"\n            textAnchor={'start'}\n          >\n            PUBBLICAZIONE\n          </text>\n        </g>\n      </g>\n    )\n  }\n)\n\nexport default function CircleWorms({\n  width,\n  height,\n  circlesMap,\n  selected,\n  omitted,\n  racconti,\n  toggleSelect,\n}) {\n  const size = Math.min(width, height)\n\n  const handleClick = useCallback(\n    (racconto) => {\n      toggleSelect(racconto.title)\n    },\n    [toggleSelect]\n  )\n\n  const allSelected = Object.keys(selected).length === 0\n\n  const labelSize = (size / 2) * LABEL_SIZE_PERCENT\n  const wormSize = (size / 2) * WORM_SIZE_PERCENT\n  const innerRadius =\n    size / 2 - labelSize - wormSize - LABEL_PADDING - INNER_CIRCLE_PADDING\n\n  const endLineStart =\n    labelSize +\n    LABEL_PADDING +\n    wormSize +\n    INNER_CIRCLE_PADDING -\n    INNER_CIRCLE_STROKE_WIDTH / 2\n  const endLineEnd = endLineStart + 90\n\n  // 0 - 90\n  return (\n    <svg width={width} height={size}>\n      <defs>\n        <linearGradient id=\"label-gradient\">\n          <stop offset=\"0%\" stopColor=\"rgba(255, 255, 255, 0)\"></stop>\n          <stop offset=\"10%\" stopColor=\"var(--bg)\"></stop>\n        </linearGradient>\n        <linearGradient id=\"label-gradient-flip\">\n          <stop offset=\"90%\" stopColor=\"var(--bg)\"></stop>\n          <stop offset=\"100%\" stopColor=\"rgba(255, 255, 255, 0)\"></stop>\n        </linearGradient>\n      </defs>\n\n      <g transform={`translate(${width / 2}, ${size / 2})`}>\n        {racconti.map((racconto, i) => {\n          const angle = racconto.rotation\n          return (\n            <g\n              key={i}\n              className={`worm-label-${i}`}\n              style={{ transform: `rotate(${angle}deg)` }}\n            >\n              <WormLabel\n                size={size}\n                flipText={angle >= 90 && angle <= 270}\n                isSelected={allSelected || !!selected[racconto.title]}\n                isOmitted={!!omitted[racconto.title]}\n                onClick={handleClick}\n                radius={size / 2}\n                labelSize={(size / 2) * LABEL_SIZE_PERCENT}\n                wormSize={(size / 2) * WORM_SIZE_PERCENT}\n                racconto={racconto}\n                circles={circlesMap[racconto.title]}\n              ></WormLabel>\n            </g>\n          )\n        })}\n        {racconti.map((racconto, i) => {\n          const angle = racconto.rotation\n          return (\n            <g\n              key={i}\n              className={`worm-${i}`}\n              style={{ transform: `rotate(${angle}deg)` }}\n            >\n              <Worm\n                size={size}\n                flipText={angle >= 90 && angle <= 270}\n                isSelected={allSelected || !!selected[racconto.title]}\n                isOmitted={!!omitted[racconto.title]}\n                onClick={handleClick}\n                radius={size / 2}\n                labelSize={(size / 2) * LABEL_SIZE_PERCENT}\n                wormSize={(size / 2) * WORM_SIZE_PERCENT}\n                racconto={racconto}\n                circles={circlesMap[racconto.title]}\n              ></Worm>\n            </g>\n          )\n        })}\n      </g>\n      <Legend\n        x={width / 2}\n        wormSize={wormSize}\n        labelSize={labelSize}\n        endLineStart={endLineStart}\n        endLineEnd={endLineEnd}\n      />\n\n      <CicrleYears\n        x={width / 2}\n        y={size / 2}\n        radius={innerRadius}\n        radiusStrokeSize={INNER_CIRCLE_STROKE_WIDTH}\n      />\n    </svg>\n  )\n}\n","import React from 'react'\nimport { scaleLinear } from 'd3-scale'\nimport { colorScale } from './utils'\nimport MiniInfoBox from '../../general/MiniInfoBox'\n\nfunction WormDetail({ title, year, circles, width, toggleSelect }) {\n  const margins = {\n    h: 50,\n    v: 50,\n  }\n  const circleRadius = width / circles.length / 2\n\n  const yScale = scaleLinear()\n    .domain([0, 2])\n    .range([\n      margins.v + circleRadius * 2,\n      circleRadius * 4 + margins.v * 2 - circleRadius,\n    ])\n\n  return (\n    <div className=\"realismo-detail border-dark\">\n      <MiniInfoBox onClose={() => toggleSelect(title)}>\n        {title}, {year}\n      </MiniInfoBox>\n      <svg className=\"worm-detail-svg\">\n        <line\n          x1={0}\n          x2={width}\n          y1={yScale(0)}\n          y2={yScale(0)}\n          className=\"worm-detail-y-grid\"\n        ></line>\n        <line\n          x1={0}\n          x2={width}\n          y1={yScale(1)}\n          y2={yScale(1)}\n          className=\"worm-detail-y-grid\"\n        ></line>\n        <line\n          x1={0}\n          x2={width}\n          y1={yScale(2)}\n          y2={yScale(2)}\n          className=\"worm-detail-y-grid\"\n        ></line>\n\n        {circles.map((circle, i) => {\n          return (\n            <g key={i}>\n              {circle.place && (\n                <g>\n                  <line\n                    className=\"worm-detail-x-place\"\n                    x1={i * circleRadius * 2 + circleRadius}\n                    x2={i * circleRadius * 2 + circleRadius}\n                    y1={yScale(circle.level || 0)}\n                    y2={250 - margins.v}\n                  ></line>\n                  <text\n                    // style={{transformOrigin:`${i * circleRadius * 2 + circleRadius}px, ${200}px`}}\n                    className=\"worm-detail-place-label\"\n                    x={i * circleRadius * 2 + circleRadius}\n                    y={200}\n                  >\n                    {circle.occurrence}\n                  </text>\n                </g>\n              )}\n\n              <circle\n                // className=\"movement\"\n                style={{ fill: colorScale(circle.category) }}\n                r={circleRadius}\n                cy={yScale(circle.level || 0)}\n                cx={i * circleRadius * 2 + circleRadius}\n              ></circle>\n              {circle.place && (\n                <circle\n                  style={{ fill: '#fff' }}\n                  r={circleRadius / 3}\n                  cy={yScale(circle.level)}\n                  cx={i * circleRadius * 2 + circleRadius}\n                ></circle>\n              )}\n            </g>\n          )\n        })}\n      </svg>\n    </div>\n  )\n}\n\nexport default React.memo(WormDetail)\n","import React, { useMemo } from 'react'\nimport { colorScale } from './utils'\nimport range from 'lodash/range'\nimport find from 'lodash/find'\nimport MiniInfoBox from '../../general/MiniInfoBox'\n\nconst CHART_PADDING_X = 80\nconst LEGEND_TEXT_HEIGHT = 150\n\nconst MINI_RADIUS = 10\nconst LOCATION_RADIUS = 3\nconst OVERLAP_RADIUS = 0.4\n\nconst WORM_MARGIN_TOP = 50\n\nfunction yScale(level) {\n  return (\n    (MINI_RADIUS + MINI_RADIUS * OVERLAP_RADIUS) * 2 * (level + 1) +\n    level * WORM_MARGIN_TOP\n  )\n}\n\nfunction CirclesLine({\n  x1,\n  x2,\n  xLocation,\n  color,\n  level,\n  circlesCount,\n  locationCenterIndex,\n}) {\n  return (\n    <g>\n      <g\n        transform={`translate(${\n          x1 + MINI_RADIUS + MINI_RADIUS * OVERLAP_RADIUS\n        }, ${yScale(level)})`}\n      >\n        {range(circlesCount).map((j) => (\n          <circle\n            style={{ fill: color }}\n            key={j}\n            cx={j * MINI_RADIUS * 2}\n            cy={0}\n            r={MINI_RADIUS + MINI_RADIUS * OVERLAP_RADIUS}\n          />\n        ))}\n        {/* <circle\n          fill=\"white\"\n          cx={locationCenterIndex * MINI_RADIUS * 2}\n          r={LOCATION_RADIUS}\n        /> */}\n        {/* NOTE: THIS IS THE ~R E A L~ LOCATION */}\n        {/* <circle\n          fill='white'\n          cx={xLocation + LOCATION_RADIUS}\n          cy={0}\n          r={LOCATION_RADIUS}\n        /> */}\n      </g>\n    </g>\n  )\n}\n\nfunction WormDetail2({ data, width: allWidth, title, year, toggleSelect }) {\n  const width = allWidth - CHART_PADDING_X * 2\n  const dataWorms = useMemo(() => {\n    return data.map((item) => {\n      const x1 = item.startTotalNorm * width + CHART_PADDING_X\n      const x2 = item.endTotalNorm * width + CHART_PADDING_X\n      const xLocation = item.locationTotalNorm * width + CHART_PADDING_X\n\n      const widthWorm = x2 - x1\n      const circlesCount = Math.ceil(widthWorm / (MINI_RADIUS * 2))\n\n      // const locationCenterIndex = find(range(circlesCount), (j) => {\n      //   const baseX = x1 + MINI_RADIUS + MINI_RADIUS * OVERLAP_RADIUS\n      //   const cx = baseX + j * MINI_RADIUS * 2\n      //   const xStart = cx - MINI_RADIUS\n      //   const xEnd = cx + MINI_RADIUS\n      //   console.log('X', xStart, xEnd, xLocation)\n      //   return xLocation >= xStart && xLocation <= xEnd\n      // })\n\n      const color = colorScale(item.category)\n\n      return {\n        ...item,\n        level: +item.level,\n        color,\n        x1,\n        x2,\n        circlesCount,\n        xLocation,\n        // locationCenterIndex,\n      }\n    })\n  }, [data, width])\n\n  const maxLevel = useMemo(() => {\n    return Math.max(...dataWorms.map((d) => d.level))\n  }, [dataWorms])\n\n  const height = yScale(maxLevel + 1) + LEGEND_TEXT_HEIGHT\n\n  return (\n    <div className=\"realismo-detail\">\n      <div style={{ margin: `0px ${CHART_PADDING_X}px` }}>\n        <MiniInfoBox onClose={() => toggleSelect(title)}>\n          {title}, {year}\n        </MiniInfoBox>\n      </div>\n      <svg className=\"worm-detail-svg\" style={{ height }}>\n        {dataWorms.map((item) => (\n          <g key={item.occurrence_location}>\n            <line\n              className=\"worm-detail-x-place\"\n              x1={item.xLocation + LOCATION_RADIUS}\n              x2={item.xLocation + LOCATION_RADIUS}\n              y1={yScale(item.level)}\n              y2={yScale(maxLevel + 1) + 20}\n              stroke=\"black\"\n            />\n            <text\n              style={{\n                transformOrigin: `${item.xLocation + LOCATION_RADIUS + 5}px ${\n                  yScale(maxLevel + 1) + 30\n                }px`,\n                transform: `rotate(-45deg)`,\n              }}\n              textAnchor=\"end\"\n              x={item.xLocation + LOCATION_RADIUS + 5}\n              y={yScale(maxLevel + 1) + 30}\n            >\n              {item.occurrence}\n            </text>\n          </g>\n        ))}\n        {range(maxLevel + 1).map((level) => (\n          <line\n            key={level}\n            x1={CHART_PADDING_X}\n            x2={width + CHART_PADDING_X}\n            y1={yScale(level)}\n            y2={yScale(level)}\n            className=\"worm-detail-y-grid\"\n          ></line>\n        ))}\n        {dataWorms.map((item) => (\n          <g key={item.occurrence_location}>\n            <CirclesLine\n              color={item.color}\n              x1={item.x1}\n              x2={item.x2}\n              level={item.level}\n              xLocation={item.xLocation}\n              circlesCount={item.circlesCount}\n              locationCenterIndex={item.locationCenterIndex}\n            />\n            <line\n              x1={item.x1}\n              x2={item.x2}\n              stroke={item.color}\n              strokeWidth={10}\n              y1={yScale(item.level) + MINI_RADIUS + WORM_MARGIN_TOP / 2}\n              y2={yScale(item.level) + MINI_RADIUS + WORM_MARGIN_TOP / 2}\n            />\n          </g>\n        ))}\n        {dataWorms.map((item) => (\n          <circle\n            key={item.occurrence_location}\n            fill=\"white\"\n            cx={item.xLocation + LOCATION_RADIUS}\n            cy={yScale(item.level)}\n            r={LOCATION_RADIUS}\n          />\n        ))}\n        {/* {dataWorms.map((item) => {\n          const x =\n            item.x1 +\n            MINI_RADIUS +\n            MINI_RADIUS * OVERLAP_RADIUS +\n            item.locationCenterIndex * MINI_RADIUS\n          return (\n            <text x={x} y={yScale(3)} key={item.occurrence_location}>\n              {item.location}\n            </text>\n          )\n        })} */}\n      </svg>\n    </div>\n  )\n}\n\nexport default React.memo(WormDetail2)\n","import React, {\n  useState,\n  useCallback,\n  useRef,\n  useLayoutEffect,\n  useMemo,\n} from 'react'\nimport HelpSidePanel from '../../panels/HelpSidePanel/HelpSidePanel'\nimport MainMenu from '../../general/MainMenu'\nimport PageTitle from '../../general/PageTitle'\nimport AltOptions from '../../general/Options/AltOptions'\nimport SearchDropDown from '../../general/Search/SearchDropDownControlled'\nimport MoreInfo from '../../general/MoreInfo'\nimport CompassButton from '../../general/CompassButton/CompassButton'\nimport useDimensions from 'react-use-dimensions'\nimport GlobalData from '../../utilities/GlobalData'\nimport RangeFilter from '../../general/RangeFilter'\n\nimport sortBy from 'lodash/sortBy'\n\nimport {\n  datasetToCircles,\n  dataset,\n  raccontiDegs as racconti,\n  yearsExtent,\n  detailWormsCircles,\n} from './utils'\nimport CircleWorms from './CircleWorms'\nimport WormDetail from './WormDetail'\nimport WormDetail2 from './WormDetail2'\n\nconst circlesMap = datasetToCircles(40)\n\nconst searchOptions = racconti.map((racconto) => ({\n  label: racconto.title,\n  value: racconto.title,\n}))\n\nconst optionsMovimento = [\n  {\n    label: 'SI MOVIMENTO',\n  },\n  {\n    label: 'NO MOVIMENTO',\n  },\n]\n\nconst optionsSpace = [\n  {\n    label: 'INTERNO',\n    value: 'indoor',\n  },\n  {\n    label: 'ESTERNO',\n    value: 'outdoor',\n  },\n  {\n    label: 'MEZZO DI TRANSPORTO',\n    value: 'transportation',\n  },\n  {\n    label: 'ASSENZA DI AMBIENTAZIONE',\n    value: 'no_setting',\n  },\n]\n\n// console.log('dataset', dataset)\n// console.log('circlesMap', circlesMap)\n\nconst cercaOptions = [{ label: 'Volume' }]\n\nexport default function RealismoMain({ title }) {\n  const [helpSidePanelOpen, setHelpSidePanelOpen] = useState(false)\n  const toggleHelpSidePanel = useCallback(() => {\n    setHelpSidePanelOpen((a) => !a)\n  }, [])\n  const [ricerca, setRicerca] = useState([])\n\n  const helpPage = GlobalData.helpPages.plot.main\n\n  const containerRef = useRef()\n  const [measures, setMeasures] = useState(null)\n  useLayoutEffect(() => {\n    const m = containerRef.current.getBoundingClientRect()\n    setMeasures(m)\n  }, [])\n\n  const [movimento, setMovimento] = useState(null)\n  const [spazio, setSpazio] = useState([])\n  const [timeFilter, setTimeFilter] = useState(yearsExtent)\n  const spazioLabels = useMemo(() => spazio.map((s) => s.label), [spazio])\n\n  const omitted = useMemo(() => {\n    const omittedStuff = {}\n    const spazioValues = spazio.map((s) => s.value)\n    Object.keys(dataset).forEach((titolo) => {\n      let keep = true\n\n      if (keep && movimento !== null) {\n        keep = dataset[titolo].some((datum) => {\n          if (movimento === 'SI MOVIMENTO') {\n            return datum.movement === 'TRUE'\n          }\n          if (movimento === 'NO MOVIMENTO') {\n            return datum.movement === 'FALSE'\n          }\n          return false\n        })\n      }\n\n      if (keep && spazioValues.length > 0) {\n        const categories = dataset[titolo].map((i) => i.category)\n        keep = spazioValues.some((category) => {\n          return categories.indexOf(category) !== -1\n        })\n      }\n\n      if (keep) {\n        keep = dataset[titolo].every((d) => {\n          return (\n            d.year >= timeFilter[0].getFullYear() &&\n            d.year <= timeFilter[1].getFullYear()\n          )\n        })\n      }\n\n      if (!keep) {\n        omittedStuff[titolo] = true\n      }\n    })\n    return omittedStuff\n  }, [movimento, spazio, timeFilter])\n\n  const selcted = useMemo(() => {\n    const mapSelected = {}\n    ricerca.forEach((item) => {\n      mapSelected[item.value] = true\n    })\n    return mapSelected\n  }, [ricerca])\n\n  const toggleSelect = useCallback((title) => {\n    setRicerca((ricerca) => {\n      const newRicerca = ricerca.filter((item) => item.value !== title)\n      if (ricerca.length === newRicerca.length) {\n        return ricerca.concat({ label: title, value: title })\n      }\n      return newRicerca\n    })\n  }, [])\n\n  const selctedTitoliSorted = useMemo(() => {\n    return sortBy(ricerca, (item) => dataset[item.value]?.[0]?.year)\n  }, [ricerca])\n\n  const [ref, { width }] = useDimensions({ liveMeasure: false })\n\n  return (\n    <div>\n      <HelpSidePanel\n        open={helpSidePanelOpen}\n        page={helpPage}\n        closeButtonClicked={toggleHelpSidePanel}\n      />\n      <div className=\"top-nav navigations\">\n        <MainMenu className=\"main-menu\" style={{ gridColumn: 'span 1' }} />\n        <PageTitle title={title} style={{ gridColumn: 'span 10' }} />\n        <AltOptions\n          title=\"Cerca per\"\n          options={cercaOptions}\n          disabled={true}\n          value={'Volume'}\n          onChange={(x) => {}}\n          style={{\n            gridColumn: 'span 3',\n          }}\n        />\n        <SearchDropDown\n          style={{\n            gridColumn: 'span 8',\n          }}\n          data={{ options: searchOptions }}\n          changeOptions={(newOptions) => {\n            setRicerca(newOptions)\n          }}\n          selectedOptions={ricerca}\n        />\n        <MoreInfo\n          style={{ gridColumn: 'span 1' }}\n          onClicked={toggleHelpSidePanel}\n        />\n        <CompassButton\n          style={{\n            gridColumn: 'span 1',\n            color: 'white',\n            backgroundColor: 'black',\n          }}\n        />\n      </div>\n      <div className=\"realismo-content \" ref={containerRef}>\n        <div\n          className=\"h-100 w-100 d-flex justify-content-center align-items-center\"\n          style={{\n            position: 'relative',\n          }}\n        >\n          <div className=\"realismo-reset\">\n            <div>Seleziona i test e poi scorri in basso</div>\n            <button\n              onClick={() => {\n                // Reset Selection\n                setRicerca([])\n                // Reset Filters\n                // setSpazio([])\n                // setMovimento(null)\n                // setTimeFilter(yearsExtent)\n              }}\n            >\n              reset\n            </button>\n          </div>\n          {measures && (\n            <CircleWorms\n              toggleSelect={toggleSelect}\n              selected={selcted}\n              omitted={omitted}\n              circlesMap={circlesMap}\n              racconti={racconti}\n              width={measures.width}\n              height={measures.height}\n            ></CircleWorms>\n          )}\n        </div>\n        <div className=\"bottom-nav navigations\">\n          <AltOptions\n            title=\"Movimento\"\n            options={optionsMovimento}\n            value={movimento}\n            allowEmpty={true}\n            onChange={(m) => {\n              if (m) {\n                setMovimento(m.label)\n              } else {\n                setMovimento(null)\n              }\n            }}\n            style={{\n              gridColumn: 'span 8',\n              textAlign: 'center',\n            }}\n          />\n          <AltOptions\n            title=\"Spazio\"\n            multiple\n            options={optionsSpace}\n            value={spazioLabels}\n            allowEmpty={true}\n            onChange={(s) => {\n              setSpazio(s)\n            }}\n            style={{\n              gridColumn: 'span 8',\n              textAlign: 'center',\n            }}\n          />\n          <RangeFilter\n            style={{ gridColumn: 'span 8' }}\n            data={timeFilter}\n            changeOptions={(timeSpan) => {\n              setTimeFilter(timeSpan)\n            }}\n          />\n        </div>\n      </div>\n      {ricerca.length > 0 && (\n        <div className=\"realismo-details-container\" ref={ref}>\n          {width &&\n            selctedTitoliSorted.map((item) => (\n              <WormDetail2\n                data={detailWormsCircles[item.value]}\n                year={detailWormsCircles[item.value]?.[0]?.year}\n                title={item.value}\n                width={width}\n                key={item.value}\n                toggleSelect={toggleSelect}\n              />\n              // <WormDetail\n              //   width={width}\n              //   key={item.value}\n              //   title={item.value}\n              //   year={dataset[item.value]?.[0]?.year}\n              //   circles={circlesMap[item.value]}\n              //   toggleSelect={toggleSelect}\n              // />\n            ))}\n        </div>\n      )}\n    </div>\n  )\n}\n"],"sourceRoot":""}