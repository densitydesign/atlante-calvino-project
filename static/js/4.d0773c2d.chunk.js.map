{"version":3,"sources":["../node_modules/lodash/mapValues.js","visualizations/Realismo/utils.js","visualizations/Realismo/CircleWorms.js","visualizations/Realismo/WormDetail.js","visualizations/Realismo/RealismoMain.js"],"names":["baseAssignValue","require","baseForOwn","baseIteratee","module","exports","object","iteratee","result","value","key","realismoDataNormalized","realismoData","map","item","startNorm","start","length","endNorm","end","locationNorm","racconti","uniqBy","title","dataset","groupBy","colorScale","scaleOrdinal","range","domain","unknown","Worm","React","memo","racconto","circles","radius","labelSize","wormSize","onClick","isSelected","wormStart","wormEnd","circleRadius","yScale","scaleLinear","style","opacity","cursor","circle","i","className","fill","category","r","cy","level","cx","place","x","CircleWorms","size","circlesMap","selected","toggleSelect","deltaAngle","handleClick","useCallback","allSelected","Object","keys","width","height","transform","margins","x1","x2","y1","y2","y","occurrence","n","mapValues","data","circleWidth","reduce","acc","out","find","push","searchOptions","label","cercaOptions","RealismoMain","useState","helpSidePanelOpen","setHelpSidePanelOpen","toggleHelpSidePanel","a","ricerca","setRicerca","helpPage","GlobalData","helpPages","plot","main","containerRef","useRef","measures","setMeasures","useLayoutEffect","m","current","getBoundingClientRect","Math","min","selcted","useMemo","mapSelected","forEach","newRicerca","filter","concat","useDimensions","ref","HelpSidePanel","open","page","closeButtonClicked","MainMenu","gridColumn","PageTitle","AltOptions","options","disabled","onChange","changeOptions","newOptions","selectedOptions","MoreInfo","onClicked","CompassButton","color","backgroundColor","position"],"mappings":"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","file":"static/js/4.d0773c2d.chunk.js","sourcesContent":["var baseAssignValue = require('./_baseAssignValue'),\n    baseForOwn = require('./_baseForOwn'),\n    baseIteratee = require('./_baseIteratee');\n\n/**\n * Creates an object with the same keys as `object` and values generated\n * by running each own enumerable string keyed property of `object` thru\n * `iteratee`. The iteratee is invoked with three arguments:\n * (value, key, object).\n *\n * @static\n * @memberOf _\n * @since 2.4.0\n * @category Object\n * @param {Object} object The object to iterate over.\n * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n * @returns {Object} Returns the new mapped object.\n * @see _.mapKeys\n * @example\n *\n * var users = {\n *   'fred':    { 'user': 'fred',    'age': 40 },\n *   'pebbles': { 'user': 'pebbles', 'age': 1 }\n * };\n *\n * _.mapValues(users, function(o) { return o.age; });\n * // => { 'fred': 40, 'pebbles': 1 } (iteration order is not guaranteed)\n *\n * // The `_.property` iteratee shorthand.\n * _.mapValues(users, 'age');\n * // => { 'fred': 40, 'pebbles': 1 } (iteration order is not guaranteed)\n */\nfunction mapValues(object, iteratee) {\n  var result = {};\n  iteratee = baseIteratee(iteratee, 3);\n\n  baseForOwn(object, function(value, key, object) {\n    baseAssignValue(result, key, iteratee(value, key, object));\n  });\n  return result;\n}\n\nmodule.exports = mapValues;\n","import realismoData from './data/realismo.json'\nimport groupBy from 'lodash/groupBy'\nimport uniqBy from 'lodash/uniqBy'\nimport {scaleOrdinal} from 'd3-scale'\nimport range from 'lodash/range'\nimport find from 'lodash/find'\nimport mapValues from 'lodash/mapValues'\nimport sortBy from 'lodash/sortBy'\n\n\nconst realismoDataNormalized = realismoData.map(item => ({\n  ...item,\n  startNorm: +item.start / item.length,\n  endNorm: +item.end / item.length,\n  locationNorm: +item['occurrence_location'] / +item.length,\n\n}))\n\n\nexport const racconti = uniqBy(realismoData, 'title').map(item => ({\n  title: item.title,\n  length: item.length,\n}))\n\n\nexport const dataset = groupBy(realismoDataNormalized, 'title')\n\n\nexport function datasetToCircles(n){\n  return mapValues(dataset, data => {\n\n    const circleWidth = 1 / n\n    \n    const circles = range(n).reduce(\n      (acc, item, i) => {\n  \n        const startNorm = i * circleWidth\n        const endNorm = (i + 1) * circleWidth \n        // const pos = (startNorm + endNorm) / 2\n        // const dataOrdered = sortBy(data, item => Math.abs(+item.locationNorm - pos))\n        const out = find(data, item => item.startNorm <= startNorm && item.endNorm >= endNorm) || {}\n        let place = false\n        if (out.occurrence && (i === 0 || acc[i-1].occurrence !== out.occurrence )){\n          place = true\n        } \n        acc.push({...out, place})\n        return acc\n\n        // return dataOrdered[0]\n      }\n    , [])\n  \n    return circles\n  \n  })\n}\n\n\n\nexport const colorScale = scaleOrdinal()\n  .range(['#ffc33e','#00c97c','#4a4aff'])\n  .domain(['indoor','outdoor','transportation'])\n  .unknown(['#ccc'])","import React, { useCallback } from 'react'\nimport { colorScale } from './utils'\nimport { scaleLinear } from 'd3-scale'\n\nconst Worm = React.memo(\n  ({ racconto, circles, radius, labelSize, wormSize, onClick, isSelected }) => {\n    const wormStart = radius - labelSize - wormSize\n    const wormEnd = radius - labelSize\n\n    const circleRadius = wormSize / circles.length / 2\n\n    const yScale = scaleLinear()\n      .domain([0, 2])\n      .range([0, circleRadius * 2])\n\n    return (\n      <g\n        style={{\n          opacity: isSelected ? 1 : 0.3,\n        }}\n      >\n        <g\n          onClick={() => onClick(racconto)}\n          style={{\n            cursor: 'pointer',\n          }}\n        >\n          {circles.map((circle, i) => {\n            return (\n              <g key={i}>\n                <circle\n                  className=\"movement\"\n                  style={{ fill: colorScale(circle.category) }}\n                  r={circleRadius * 1.5}\n                  cy={yScale(circle.level)}\n                  cx={wormStart + i * circleRadius * 2 + circleRadius}\n                ></circle>\n                {circle.place && (\n                  <circle\n                    style={{ fill: '#fff' }}\n                    r={circleRadius / 3}\n                    cy={yScale(circle.level)}\n                    cx={wormStart + i * circleRadius * 2 + circleRadius}\n                  ></circle>\n                )}\n              </g>\n            )\n          })}\n        </g>\n        <text x={wormEnd}>&nbsp;&nbsp;{racconto.title}</text>\n      </g>\n    )\n  }\n)\n\nexport default function CircleWorms({\n  size,\n  circlesMap,\n  selected,\n  racconti,\n  toggleSelect,\n}) {\n  const deltaAngle = 360 / racconti.length\n\n  const handleClick = useCallback((racconto) => {\n    toggleSelect(racconto.title)\n  }, [toggleSelect])\n\n  const allSelected = Object.keys(selected).length === 0\n\n  return (\n    <svg width={size} height={size}>\n      <g transform={`translate(${size / 2}, ${size / 2})`}>\n        {racconti.map((racconto, i) => (\n          <g key={i} style={{ transform: `rotate(${i * deltaAngle}deg)` }}>\n            <Worm\n              isSelected={allSelected || !!selected[racconto.title]}\n              onClick={handleClick}\n              radius={size / 2}\n              labelSize={size / 10}\n              wormSize={(size / 10) * 2}\n              racconto={racconto}\n              circles={circlesMap[racconto.title]}\n            ></Worm>\n          </g>\n        ))}\n      </g>\n    </svg>\n  )\n}\n","import React from 'react'\nimport { scaleLinear } from 'd3-scale'\nimport { colorScale } from './utils'\n\nfunction WormDetail({ title, circles, width }) {\n\n    const margins = {\n      h: 50,\n      v: 50,\n\n    }\n\n    const xScale = scaleLinear()\n      .domain([0, 1])\n      .range([0+margins.h, width-margins.h])\n\n    const circleRadius = width / circles.length / 2\n\n    const yScale = scaleLinear()\n      .domain([0, 2])\n      .range([margins.v + circleRadius*2,  circleRadius * 4 + margins.v * 2 - circleRadius ])\n\n\n\n  return (\n    <div className=\"realismo-detail border-dark\">\n      <h2>{title}</h2>\n      <svg className=\"worm-detail-svg\">\n\n\n      <line x1={0} x2={width} y1={yScale(0)} y2={yScale(0)} className=\"worm-detail-y-grid\"></line>\n      <line x1={0} x2={width} y1={yScale(1)} y2={yScale(1)} className=\"worm-detail-y-grid\"></line>\n      <line x1={0} x2={width} y1={yScale(2)} y2={yScale(2)} className=\"worm-detail-y-grid\"></line>\n\n      {circles.map((circle, i) => {\n            return (\n              <g key={i}>\n\n                {circle.place && (\n                  <g>\n                  <line className=\"worm-detail-x-place\" x1={i * circleRadius * 2 + circleRadius} x2={i * circleRadius * 2 + circleRadius} y1={yScale(circle.level || 0)} y2={250-margins.v}>\n\n                  </line>\n                    <text\n                    // style={{transformOrigin:`${i * circleRadius * 2 + circleRadius}px, ${200}px`}}\n                    className=\"worm-detail-place-label\" x={i * circleRadius * 2 + circleRadius} y={200}>{circle.occurrence}</text>\n                  </g>\n                )}\n\n\n                <circle\n                  className=\"movement\"\n                  style={{ fill: colorScale(circle.category) }}\n                  r={circleRadius}\n                  cy={yScale(circle.level || 0)}\n                  cx={ i * circleRadius * 2 + circleRadius}\n                ></circle>\n                {circle.place && (\n                  <circle\n                    style={{ fill: '#fff' }}\n                    r={circleRadius / 3}\n                    cy={yScale(circle.level)}\n                    cx={i * circleRadius * 2 + circleRadius}\n                  ></circle>\n                )}\n              </g>\n            )\n          })}\n\n\n\n\n      </svg>\n\n    </div>\n  )\n}\n\nexport default React.memo(WormDetail)","import React, {\n  useState,\n  useCallback,\n  useRef,\n  useLayoutEffect,\n  useMemo,\n} from 'react'\nimport HelpSidePanel from '../../panels/HelpSidePanel/HelpSidePanel'\nimport MainMenu from '../../general/MainMenu'\nimport PageTitle from '../../general/PageTitle'\nimport AltOptions from '../../general/Options/AltOptions'\nimport SearchDropDown from '../../general/Search/SearchDropDownControlled'\nimport MoreInfo from '../../general/MoreInfo'\nimport CompassButton from '../../general/CompassButton/CompassButton'\nimport useDimensions from \"react-use-dimensions\";\nimport GlobalData from '../../utilities/GlobalData'\n\nimport { datasetToCircles, dataset, racconti } from './utils'\nimport CircleWorms from './CircleWorms'\nimport WormDetail from './WormDetail'\n\nconst circlesMap = datasetToCircles(30)\n\nconst searchOptions = racconti.map((racconto) => ({\n  label: racconto.title,\n  value: racconto.title,\n}))\n\n// console.log('dataset', dataset)\n// console.log('circlesMap', circlesMap)\n\nconst cercaOptions = [{ label: 'Volume' }]\n\nexport default function RealismoMain({ title }) {\n  const [helpSidePanelOpen, setHelpSidePanelOpen] = useState(false)\n  const toggleHelpSidePanel = useCallback(() => {\n    setHelpSidePanelOpen((a) => !a)\n  }, [])\n  const [ricerca, setRicerca] = useState([])\n\n  const helpPage = GlobalData.helpPages.plot.main\n\n  const containerRef = useRef()\n  const [measures, setMeasures] = useState(null)\n  useLayoutEffect(() => {\n    const m = containerRef.current.getBoundingClientRect()\n    setMeasures(m)\n  }, [])\n  const size =\n    measures === null ? null : Math.min(measures.width, measures.height)\n\n  const selcted = useMemo(() => {\n    const mapSelected = {}\n    ricerca.forEach((item) => {\n      mapSelected[item.value] = true\n    })\n    return mapSelected\n  }, [ricerca])\n\n  const toggleSelect = useCallback((title) => {\n    setRicerca((ricerca) => {\n      const newRicerca = ricerca.filter((item) => item.value !== title)\n      if (ricerca.length === newRicerca.length) {\n        return ricerca.concat({ label: title, value: title })\n      }\n      return newRicerca\n    })\n  }, [])\n\n  const [ref, { x, y, width, height }] = useDimensions();\n\n  return (\n    <div>\n      <HelpSidePanel\n        open={helpSidePanelOpen}\n        page={helpPage}\n        closeButtonClicked={toggleHelpSidePanel}\n      />\n      <div className=\"top-nav navigations\">\n        <MainMenu className=\"main-menu\" style={{ gridColumn: 'span 1' }} />\n        <PageTitle title={title} style={{ gridColumn: 'span 10' }} />\n        <AltOptions\n          title=\"Cerca per\"\n          options={cercaOptions}\n          disabled={true}\n          value={'Volume'}\n          onChange={(x) => {}}\n          style={{\n            gridColumn: 'span 3',\n          }}\n        />\n        <SearchDropDown\n          style={{\n            gridColumn: 'span 8',\n          }}\n          data={{ options: searchOptions }}\n          changeOptions={(newOptions) => {\n            setRicerca(newOptions)\n          }}\n          selectedOptions={ricerca}\n        />\n        <MoreInfo\n          style={{ gridColumn: 'span 1' }}\n          onClicked={toggleHelpSidePanel}\n        />\n        <CompassButton\n          style={{\n            gridColumn: 'span 1',\n            color: 'white',\n            backgroundColor: 'black',\n          }}\n        />\n      </div>\n      <div className=\"realismo-content \" ref={containerRef}>\n        <div\n          className=\"h-100 w-100 d-flex justify-content-center align-items-center\"\n          style={{\n            position: 'relative',\n          }}\n        >\n          <div className=\"realismo-reset\">\n            <div>Seleziona i test e poi scorri in basso</div>\n            <button onClick={() => setRicerca([])}>reset</button>\n          </div>\n          <CircleWorms\n            toggleSelect={toggleSelect}\n            selected={selcted}\n            circlesMap={circlesMap}\n            racconti={racconti}\n            size={size}\n          ></CircleWorms>\n        </div>\n      </div>\n      {ricerca.length > 0 && <div className=\"realismo-details-container\" ref={ref}>\n      {width && ricerca.map((item) => (\n        <WormDetail\n          width={width}\n          key={item.value}\n          title={item.value}\n          circles={circlesMap[item.value]}\n        />\n      ))}\n      </div>}\n    </div>\n  )\n}\n"],"sourceRoot":""}