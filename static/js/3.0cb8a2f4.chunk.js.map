{"version":3,"sources":["../node_modules/d3-shape/src/curve/monotone.js","../node_modules/lodash/minBy.js","../node_modules/lodash/_baseLt.js","../node_modules/lodash/mapValues.js","../node_modules/lodash/take.js","visualizations/Trama2/LineeTrama.js","visualizations/Trama2/SideBar.js","visualizations/Trama2/Trama2Main.js"],"names":["sign","x","slope3","that","x2","y2","h0","_x1","_x0","h1","s0","_y1","_y0","s1","p","Math","min","abs","slope2","t","h","point","t0","t1","x0","y0","x1","y1","dx","_context","bezierCurveTo","MonotoneX","context","this","MonotoneY","ReflectContext","monotoneX","prototype","areaStart","_line","areaEnd","NaN","lineStart","_t0","_point","lineEnd","lineTo","closePath","y","moveTo","Object","create","call","baseExtremum","require","baseIteratee","baseLt","module","exports","array","iteratee","length","undefined","value","other","baseAssignValue","baseForOwn","object","result","key","baseSlice","toInteger","n","guard","MAX_ZOOM_LEVEL","LineaTrama","racconto","data","width","xScale","zoomLevel","height","itemSelected","index","gradient","toggleItem","d","line","curve","curveMonotoneX","lineGenerator","stroke","className","onClick","style","strokeWidth","textAnchor","titolo","map","i","cx","cy","r","motivo_type","LineeTrama","racconti","scalaColore","scalaMotivoY","colors","selected","toggleSelect","containerRef","useRef","useState","measures","setMeasures","setZoomLevel","zoomY","setZoomY","useEffect","m","current","getBoundingClientRect","scrollHandler","useCallback","e","deltaY","newLevel","max","layerY","sh","addEventListener","passive","removeEventListener","delta","useMemo","scaleLinear","domain","range","dataRacconti","out","filter","baseDisplacements","displacements","dy","j","floor","diff","deltaColors","ref","overflow","id","gradientUnits","color","offset","stopColor","datum","transform","SideBar","tipologie","bounds","addBound","setBounds","boundsByKey","keyBy","tipologia","background","colore","colori","MOTIVO_LINE_HEIGHT","clusterByMotivo","mapValues","mappaMotivoTipologia","item","ordineByCluster","coloriPosizioni","ordineMotivoByMotivo","ordineColore","motivoExtent","extent","get","sortBy","ordine","uniqBy","datasetLines","anno","mese","toFixed","datasetLinesNormalized","tot","motivo","cluster","coloreCluster","ordineCluster","ordineMotivo","startMotivoNorm","start_motivo","endMotivoNorm","end_motivo","byRacconto","groupBy","tipologieByTipologia","Trama2Main","sidePanelOpen","setSidePanelOpen","toggleSidePanel","setSelected","newSelected","concat","raccontiFiltered","orderedBounds","bound","minDatum","maxDatum","indexes","sel","console","log","minBy","maxBy"],"mappings":"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","file":"static/js/3.0cb8a2f4.chunk.js","sourcesContent":["function sign(x) {\n  return x < 0 ? -1 : 1;\n}\n\n// Calculate the slopes of the tangents (Hermite-type interpolation) based on\n// the following paper: Steffen, M. 1990. A Simple Method for Monotonic\n// Interpolation in One Dimension. Astronomy and Astrophysics, Vol. 239, NO.\n// NOV(II), P. 443, 1990.\nfunction slope3(that, x2, y2) {\n  var h0 = that._x1 - that._x0,\n      h1 = x2 - that._x1,\n      s0 = (that._y1 - that._y0) / (h0 || h1 < 0 && -0),\n      s1 = (y2 - that._y1) / (h1 || h0 < 0 && -0),\n      p = (s0 * h1 + s1 * h0) / (h0 + h1);\n  return (sign(s0) + sign(s1)) * Math.min(Math.abs(s0), Math.abs(s1), 0.5 * Math.abs(p)) || 0;\n}\n\n// Calculate a one-sided slope.\nfunction slope2(that, t) {\n  var h = that._x1 - that._x0;\n  return h ? (3 * (that._y1 - that._y0) / h - t) / 2 : t;\n}\n\n// According to https://en.wikipedia.org/wiki/Cubic_Hermite_spline#Representations\n// \"you can express cubic Hermite interpolation in terms of cubic Bézier curves\n// with respect to the four values p0, p0 + m0 / 3, p1 - m1 / 3, p1\".\nfunction point(that, t0, t1) {\n  var x0 = that._x0,\n      y0 = that._y0,\n      x1 = that._x1,\n      y1 = that._y1,\n      dx = (x1 - x0) / 3;\n  that._context.bezierCurveTo(x0 + dx, y0 + dx * t0, x1 - dx, y1 - dx * t1, x1, y1);\n}\n\nfunction MonotoneX(context) {\n  this._context = context;\n}\n\nMonotoneX.prototype = {\n  areaStart: function() {\n    this._line = 0;\n  },\n  areaEnd: function() {\n    this._line = NaN;\n  },\n  lineStart: function() {\n    this._x0 = this._x1 =\n    this._y0 = this._y1 =\n    this._t0 = NaN;\n    this._point = 0;\n  },\n  lineEnd: function() {\n    switch (this._point) {\n      case 2: this._context.lineTo(this._x1, this._y1); break;\n      case 3: point(this, this._t0, slope2(this, this._t0)); break;\n    }\n    if (this._line || (this._line !== 0 && this._point === 1)) this._context.closePath();\n    this._line = 1 - this._line;\n  },\n  point: function(x, y) {\n    var t1 = NaN;\n\n    x = +x, y = +y;\n    if (x === this._x1 && y === this._y1) return; // Ignore coincident points.\n    switch (this._point) {\n      case 0: this._point = 1; this._line ? this._context.lineTo(x, y) : this._context.moveTo(x, y); break;\n      case 1: this._point = 2; break;\n      case 2: this._point = 3; point(this, slope2(this, t1 = slope3(this, x, y)), t1); break;\n      default: point(this, this._t0, t1 = slope3(this, x, y)); break;\n    }\n\n    this._x0 = this._x1, this._x1 = x;\n    this._y0 = this._y1, this._y1 = y;\n    this._t0 = t1;\n  }\n}\n\nfunction MonotoneY(context) {\n  this._context = new ReflectContext(context);\n}\n\n(MonotoneY.prototype = Object.create(MonotoneX.prototype)).point = function(x, y) {\n  MonotoneX.prototype.point.call(this, y, x);\n};\n\nfunction ReflectContext(context) {\n  this._context = context;\n}\n\nReflectContext.prototype = {\n  moveTo: function(x, y) { this._context.moveTo(y, x); },\n  closePath: function() { this._context.closePath(); },\n  lineTo: function(x, y) { this._context.lineTo(y, x); },\n  bezierCurveTo: function(x1, y1, x2, y2, x, y) { this._context.bezierCurveTo(y1, x1, y2, x2, y, x); }\n};\n\nexport function monotoneX(context) {\n  return new MonotoneX(context);\n}\n\nexport function monotoneY(context) {\n  return new MonotoneY(context);\n}\n","var baseExtremum = require('./_baseExtremum'),\n    baseIteratee = require('./_baseIteratee'),\n    baseLt = require('./_baseLt');\n\n/**\n * This method is like `_.min` except that it accepts `iteratee` which is\n * invoked for each element in `array` to generate the criterion by which\n * the value is ranked. The iteratee is invoked with one argument: (value).\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Math\n * @param {Array} array The array to iterate over.\n * @param {Function} [iteratee=_.identity] The iteratee invoked per element.\n * @returns {*} Returns the minimum value.\n * @example\n *\n * var objects = [{ 'n': 1 }, { 'n': 2 }];\n *\n * _.minBy(objects, function(o) { return o.n; });\n * // => { 'n': 1 }\n *\n * // The `_.property` iteratee shorthand.\n * _.minBy(objects, 'n');\n * // => { 'n': 1 }\n */\nfunction minBy(array, iteratee) {\n  return (array && array.length)\n    ? baseExtremum(array, baseIteratee(iteratee, 2), baseLt)\n    : undefined;\n}\n\nmodule.exports = minBy;\n","/**\n * The base implementation of `_.lt` which doesn't coerce arguments.\n *\n * @private\n * @param {*} value The value to compare.\n * @param {*} other The other value to compare.\n * @returns {boolean} Returns `true` if `value` is less than `other`,\n *  else `false`.\n */\nfunction baseLt(value, other) {\n  return value < other;\n}\n\nmodule.exports = baseLt;\n","var baseAssignValue = require('./_baseAssignValue'),\n    baseForOwn = require('./_baseForOwn'),\n    baseIteratee = require('./_baseIteratee');\n\n/**\n * Creates an object with the same keys as `object` and values generated\n * by running each own enumerable string keyed property of `object` thru\n * `iteratee`. The iteratee is invoked with three arguments:\n * (value, key, object).\n *\n * @static\n * @memberOf _\n * @since 2.4.0\n * @category Object\n * @param {Object} object The object to iterate over.\n * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n * @returns {Object} Returns the new mapped object.\n * @see _.mapKeys\n * @example\n *\n * var users = {\n *   'fred':    { 'user': 'fred',    'age': 40 },\n *   'pebbles': { 'user': 'pebbles', 'age': 1 }\n * };\n *\n * _.mapValues(users, function(o) { return o.age; });\n * // => { 'fred': 40, 'pebbles': 1 } (iteration order is not guaranteed)\n *\n * // The `_.property` iteratee shorthand.\n * _.mapValues(users, 'age');\n * // => { 'fred': 40, 'pebbles': 1 } (iteration order is not guaranteed)\n */\nfunction mapValues(object, iteratee) {\n  var result = {};\n  iteratee = baseIteratee(iteratee, 3);\n\n  baseForOwn(object, function(value, key, object) {\n    baseAssignValue(result, key, iteratee(value, key, object));\n  });\n  return result;\n}\n\nmodule.exports = mapValues;\n","var baseSlice = require('./_baseSlice'),\n    toInteger = require('./toInteger');\n\n/**\n * Creates a slice of `array` with `n` elements taken from the beginning.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Array\n * @param {Array} array The array to query.\n * @param {number} [n=1] The number of elements to take.\n * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n * @returns {Array} Returns the slice of `array`.\n * @example\n *\n * _.take([1, 2, 3]);\n * // => [1]\n *\n * _.take([1, 2, 3], 2);\n * // => [1, 2]\n *\n * _.take([1, 2, 3], 5);\n * // => [1, 2, 3]\n *\n * _.take([1, 2, 3], 0);\n * // => []\n */\nfunction take(array, n, guard) {\n  if (!(array && array.length)) {\n    return [];\n  }\n  n = (guard || n === undefined) ? 1 : toInteger(n);\n  return baseSlice(array, 0, n < 0 ? 0 : n);\n}\n\nmodule.exports = take;\n","import React, {\n  useRef,\n  useState,\n  useMemo,\n  useEffect,\n  useCallback,\n} from \"react\";\nimport { line, curveMonotoneX } from \"d3-shape\";\nimport { scaleLinear } from \"d3-scale\";\nimport { zoom } from \"d3\";\n\nconst MAX_ZOOM_LEVEL = 10;\nconst TOP_SVG_PADDING = 20;\n\nfunction LineaTrama({\n  racconto,\n  data,\n  xScale,\n  width,\n  height,\n  zoomLevel,\n  index,\n  gradient,\n  itemSelected,\n  toggleItem,\n}) {\n  const lineGenerator = line()\n    .x((d) => d.x)\n    .y((d) => d.y * zoomLevel)\n    .curve(curveMonotoneX);\n  const d = lineGenerator(data);\n\n  const stroke = itemSelected ? `url('#trama-gradient-${zoomLevel}')` : \"#ddd\";\n  return (\n    <g>\n      {/* <rect\n        width={width}\n        height={height}\n        style={{fill:`teal`, fillOpacity: 0.2}}\n      ></rect> */}\n      <path\n        d={d}\n        className={`trama2-pointer ${itemSelected ? \"selected\" : \"\"}`}\n        onClick={toggleItem}\n      ></path>\n      <path\n        d={d}\n        className=\"trama2-line\"\n        style={{ stroke, strokeWidth: zoomLevel }}\n      ></path>\n\n      {/* <line x1={0} x2={width} y1={height} y2={height} style={{stroke: '#000'}}></line> */}\n      {itemSelected && (\n        <g>\n          <g>\n            {/* <rect ></rect> */}\n            <text x={width} y={0} style={{ textAnchor: \"end\" }}>\n              {data.racconto.titolo}\n            </text>\n          </g>\n\n          {data.map((d, i) => (\n            <circle\n              key={i}\n              className=\"trama2-circle\"\n              cx={d.x}\n              cy={d.y * zoomLevel}\n              r={2}\n            >\n              <title>{d.motivo_type}</title>\n            </circle>\n          ))}\n        </g>\n      )}\n    </g>\n  );\n}\n\nexport default function LineeTrama({\n  racconti = [],\n  data = {},\n  height,\n  scalaColore,\n  scalaMotivoY,\n  colors,\n  selected,\n  toggleSelect,\n}) {\n  const containerRef = useRef(null);\n  const [measures, setMeasures] = useState(null);\n  const [zoomLevel, setZoomLevel] = useState(1.0);\n  const [zoomY, setZoomY] = useState(0);\n\n  useEffect(() => {\n    const m = containerRef.current.getBoundingClientRect();\n    setMeasures(m);\n  }, []);\n\n  const scrollHandler = useCallback(\n    (e, n) => {\n      const sign = e.deltaY > 0 ? 1.0 : -1.0;\n\n      const newLevel = zoomLevel + 0.1 * sign;\n\n      if (newLevel > MAX_ZOOM_LEVEL) {\n        return;\n      }\n      if (newLevel <= 1) {\n        setZoomY(0);\n        setZoomLevel(1)\n        return;\n      }\n      setZoomLevel(Math.max(1, Math.min(newLevel, MAX_ZOOM_LEVEL)));\n      if (!zoomY) {\n        setZoomY(e.layerY);\n      }\n\n      return false;\n    },\n    [zoomLevel, zoomY]\n  );\n\n  useEffect(() => {\n    const n = containerRef.current;\n\n    const sh = (e) => {\n      scrollHandler(e, n);\n    };\n\n    n.addEventListener(\"wheel\", sh, { passive: true });\n    return () => {\n      n.removeEventListener(\"wheel\", sh, { passive: true });\n    };\n  }, [scrollHandler]);\n\n  const delta = useMemo(() => {\n    if (!measures) {\n      return 0;\n    }\n    return (measures.height - height) / racconti.length;\n  }, [height, measures, racconti.length]);\n\n  const xScale = useMemo(() => {\n    if (!measures) {\n      return null;\n    }\n    return scaleLinear().domain([0, 1]).range([0, measures.width]);\n  }, [measures]);\n\n  const dataRacconti = useMemo(() => {\n    if (!xScale) {\n      return [];\n    }\n    return racconti.map((racconto) => {\n      const out = data[racconto.titolo]\n        .filter((d) => d.y !== undefined)\n        .map((d) => {\n          return {\n            ...d,\n            x: xScale(d.x),\n            y: d.y,\n          };\n        });\n      out.racconto = racconto;\n      return out;\n    });\n  }, [data, racconti, xScale]);\n\n  const baseDisplacements = useMemo(() => {\n    return dataRacconti.map((d, i) => {\n      let dy = delta * i //+ TOP_SVG_PADDING;\n      return dy;\n    });\n  }, [dataRacconti, delta]);\n\n  const displacements = useMemo(() => {\n    if(!measures){\n      return []\n    }\n    return dataRacconti.map((d, i) => {\n      let dy = baseDisplacements[i];\n      //return dy * zoomLevel\n\n      const j = Math.floor(zoomY / delta);\n\n      \n      //const translation = zoomLevel === 1 ? 0 : (measures.height / (2 * delta * zoomLevel) - 1) * (delta * zoomLevel)\n      //const translation = \n      const factor = (zoomLevel-1) / (MAX_ZOOM_LEVEL-1);\n      const diff = zoomLevel === 1 ? 0 : delta * j * zoomLevel - (measures.height / 2)// / zoomLevel\n\n      // const diff1 =  delta * j * 1\n      // const diffMax =  delta * j * MAX_ZOOM_LEVEL - (measures.height / 2)\n      // const diff = diff1 + (diffMax - diff1) / (MAX_ZOOM_LEVEL - 1) * (zoomLevel - 1)\n\n\n      return dy * zoomLevel - diff \n      // return diff - (j - i) * delta * zoomLevel\n    });\n  }, [baseDisplacements, dataRacconti, delta, measures, zoomLevel, zoomY]);\n\n  const deltaColors = useMemo(() => {\n    return 100 / (colors.length - 1);\n  }, [colors.length]);\n\n  return (\n    <div\n      ref={containerRef}\n      className=\"w-100 h-100\"\n      style={{ overflow: \"auto\" }}\n    >\n      {/* <div>\n        {colors.map(color => <div key={color} style={{background:color, height: 10}}></div>)}\n      </div> */}\n      {measures && (\n        <svg\n          style={{\n            height: measures.height,\n            width: measures.width,\n            // transform: `perspective(${zoomLevel})`,\n            // transformOrigin: `50% 50%`,\n          }}\n          ref={containerRef}\n        >\n          <linearGradient\n            id={`trama-gradient-${zoomLevel}`}\n            gradientUnits=\"userSpaceOnUse\"\n            y2={0}\n            y1={height * zoomLevel}\n            x1={0}\n            x2={0}\n          >\n            {colors.map((color, i) => (\n              <stop\n                key={i}\n                offset={`${deltaColors * i}%`}\n                stopColor={color}\n              ></stop>\n            ))}\n          </linearGradient>\n          {/* <linearGradient id={`trama-gradient-${zoomLevel}`} gradientUnits=\"userSpaceOnUse\" y1={0} y2={height* zoomLevel} x1={0} x2={0}>\n            \n              <stop offset={`0%`} stopColor={'#000'}></stop>\n              <stop offset={`100%`} stopColor={'#fff'}></stop>\n            \n          </linearGradient> */}\n\n          {dataRacconti.map((datum, i) => {\n            const dy = displacements[i];\n\n            if (dy < -height * zoomLevel) {\n              return null;\n            }\n            if (dy > measures.height) {\n              return null;\n            }\n\n            // const datum = data[racconto]\n            return (\n              <g\n                key={i}\n                style={{\n                  transform: `translateY(${dy}px)`,\n                }}\n              >\n                <LineaTrama\n                  scalaColore={scalaColore}\n                  scalaMotivoY={scalaMotivoY}\n                  index={i}\n                  width={measures.width}\n                  height={height * zoomLevel}\n                  zoomLevel={zoomLevel}\n                  itemSelected={selected[racconti[i].titolo]}\n                  toggleItem={toggleSelect(racconti[i].titolo)}\n                  xScale={xScale}\n                  racconto={racconti[i]}\n                  data={datum}\n                ></LineaTrama>\n              </g>\n            );\n          })}\n        </svg>\n      )}\n    </div>\n  );\n}\n","import React from \"react\";\nimport keyBy from \"lodash/keyBy\";\n\nexport default function SideBar({ tipologie, bounds, addBound, setBounds }) {\n  const boundsByKey = keyBy(bounds);\n\n  return (\n    <div className=\"trama2-sidebar\">\n      <div className=\"trama2-sidebar-header\"></div>\n      {tipologie.map((tipologia) => (\n        <div\n          key={tipologia.tipologia}\n          onClick={addBound(tipologia.tipologia)}\n          className={`trama2-sidebar-item ${boundsByKey[tipologia.tipologia] ? 'selected' : ''}`}\n          style={{\n            background: boundsByKey[tipologia.tipologia]\n              ? tipologia.colore.colori\n              : undefined,\n          }}\n        >\n          {tipologia.tipologia}\n        </div>\n      ))}\n    <div>\n      {bounds.length > 0 && <span onClick={()=> {setBounds([])}}>Clear</span>}\n    </div>\n    </div>\n  );\n}\n","import React, { useState, useCallback, useMemo, useEffect } from \"react\";\n\n//data management\nimport groupBy from \"lodash/groupBy\";\nimport keyBy from \"lodash/keyBy\";\nimport sortBy from \"lodash/sortBy\";\nimport uniqBy from \"lodash/uniqBy\";\nimport minBy from \"lodash/minBy\";\nimport maxBy from \"lodash/maxBy\";\nimport mapValues from \"lodash/mapValues\";\nimport get from \"lodash/get\";\nimport take from \"lodash/take\";\nimport { extent } from \"d3-array\";\n\n//visual helpers\nimport { scaleLinear } from \"d3-scale\";\n\n//data loading\n//#TODO: move to separate file?\nimport datasetLines from \"./dati/dataset_lines.json\";\nimport mappaMotivoTipologia from \"./dati/mappa_motivo_tipologia.json\";\nimport ordineColore from \"./dati/ordine_colore_y.json\";\nimport coloriPosizioni from \"./dati/colori_posizioni.json\";\n\n//local components\nimport LineeTrama from \"./LineeTrama\";\nimport SideBar from \"./SideBar\";\n\n//VISUAL CONSTANTS\nconst MOTIVO_LINE_HEIGHT = 50;\n\nconst clusterByMotivo = mapValues(\n  keyBy(mappaMotivoTipologia, \"motivo_type\"),\n  (item) => item[\"cluster tipologie\"]\n);\nconst ordineByCluster = keyBy(coloriPosizioni, \"valore\");\nconst ordineMotivoByMotivo = mapValues(\n  keyBy(ordineColore, \"tipologia\"),\n  (item) => +item[\"ordine tipologia\"]\n);\n\n//scales\nconst motivoExtent = extent(ordineColore, (item) => +item[\"ordine tipologia\"]);\nconst scalaMotivoY = scaleLinear()\n  .domain(motivoExtent)\n  .range([MOTIVO_LINE_HEIGHT, 0]);\n\n// const colorsOrdered = sortBy(coloriPosizioni, (item) => +item.ordine);\n// // const colorsExtent = extent(coloriPosizioni, item => +item.ordine)\n// const scalaColore = scaleLinear()\n//   .domain(colorsOrdered.map((item) => item.ordine))\n//   .range(colorsOrdered.map((item) => item.colori));\n\nconst tipologie = ordineColore.map((item) => ({\n  ...item,\n  colore: get(ordineByCluster, item[\"cluster tipologia\"]),\n}));\n\nconst colors = sortBy(tipologie, (item) => item.colore.ordine).map(\n  (x) => x.colore.colori\n);\n\nlet racconti = sortBy(\n  uniqBy(datasetLines, (item) => item[\"titolo racconto\"]).map((item) => ({\n    titolo: item[\"titolo racconto\"],\n    anno: item[\"anno\"],\n    mese: item[\"mese\"],\n  })),\n  (item) => {\n    const anno = +item.anno;\n    const mese = +item.mese;\n\n    return `${anno.toFixed(4)}${mese.toFixed(2)}`;\n  }\n);\n\n//#TODO: remove this (limiting for debug)\n//racconti = take(racconti,10)\n\nconst datasetLinesNormalized = datasetLines.map((item) => {\n  const tot = +item[\"tot caratteri\"];\n  const motivo = item[\"motivo_type\"];\n  const cluster = get(clusterByMotivo, motivo);\n  const coloreCluster = get(ordineByCluster, `[${cluster}].colori`);\n  const ordineCluster = get(ordineByCluster, `[${cluster}].ordine`);\n  const ordineMotivo = get(ordineMotivoByMotivo, motivo);\n\n  const startMotivoNorm = +item.start_motivo / tot;\n  const endMotivoNorm = +item.end_motivo / tot;\n  const y = ordineMotivo !== undefined ? scalaMotivoY(ordineMotivo) : undefined;\n  const x = (startMotivoNorm + endMotivoNorm) / 2;\n\n  return {\n    ...item,\n    startMotivoNorm,\n    endMotivoNorm,\n    cluster,\n    coloreCluster,\n    ordineCluster: ordineCluster ? +ordineCluster : undefined,\n    ordineMotivo,\n    y,\n    x,\n  };\n});\n\nconst byRacconto = groupBy(datasetLinesNormalized, \"titolo racconto\");\n\nconst tipologieByTipologia = keyBy(tipologie, (item) => item.tipologia);\n\n//pre-computing filters\nracconti = racconti.map((racconto) => {\n  const minDatum = minBy(\n    byRacconto[racconto.titolo],\n    (item) => item.ordineMotivo\n  );\n  const maxDatum = maxBy(\n    byRacconto[racconto.titolo],\n    (item) => item.ordineMotivo\n  );\n  // console.log(123, racconto.titolo, minDatum, maxDatum)\n  return { ...racconto, minDatum, maxDatum };\n});\n\n// main component\nexport default function Trama2Main() {\n  const [sidePanelOpen, setSidePanelOpen] = useState(false);\n  const toggleSidePanel = useCallback(() => {\n    setSidePanelOpen(!sidePanelOpen);\n  }, [sidePanelOpen]);\n\n  //lines selection\n  const [selected, setSelected] = useState({});\n  const toggleSelect = useCallback(\n    (titolo) => () => {\n      const newSelected = { ...selected, [titolo]: !!!selected[titolo] };\n      setSelected(newSelected);\n    },\n    [selected]\n  );\n\n  //bounds selection\n  const [bounds, setBounds] = useState([]);\n  const addBound = useCallback(\n    (item) => () => {\n      if (bounds.length === 1 && bounds[0] === item) {\n        setBounds([]);\n        return;\n      }\n      if (bounds.length < 2) {\n        setBounds(bounds.concat([item]));\n      } else {\n        setBounds([item]);\n      }\n    },\n    [bounds]\n  );\n\n  //actual dataset\n  const raccontiFiltered = useMemo(() => {\n    if (bounds.length === 2) {\n      const orderedBounds = sortBy(\n        bounds,\n        (bound) => tipologieByTipologia[bound][\"ordine tipologia\"]\n      );\n      return racconti.filter(\n        (racconto) =>\n          racconto.minDatum.motivo_type === orderedBounds[0] &&\n          racconto.maxDatum.motivo_type === orderedBounds[1]\n      );\n    }\n\n    return racconti;\n  }, [bounds]);\n\n  useEffect(() => {\n    if (bounds.length === 2) {\n      const orderedBounds = sortBy(\n        bounds,\n        (bound) => tipologieByTipologia[bound][\"ordine tipologia\"]\n      );\n\n      const indexes = racconti\n        .map((racconto, index) => [\n          racconto.titolo,\n          racconto.minDatum.motivo_type,\n          racconto.maxDatum.motivo_type,\n        ])\n        .filter((x) => x[1] === orderedBounds[0] && x[2] === orderedBounds[1])\n        .map((x) => x[0]);\n\n      const sel = keyBy(indexes);\n      setSelected(sel);\n    }\n  }, [bounds]);\n\n\n  // const raccontiOrdered = useMemo(() => {\n  //   return sortBy(racconti, (racconto, j) => selected[racconto.titolo] ? j + 1000 : j)\n  // }, [selected])\n\n  console.log(\"tipologie\", tipologie);\n  console.log(\"racconti\", racconti);\n  console.log(\"raccontiFiltered\", raccontiFiltered);\n  console.log(\"bounds\", bounds);\n\n  return (\n    <div className=\"trama2-container\">\n      <div className={`trama2-side-panel ${sidePanelOpen ? \"open\" : \"closed\"}`}>\n        <div className=\"trama2-side-panel-content\">\n          <SideBar\n            tipologie={tipologie}\n            bounds={bounds}\n            addBound={addBound}\n            setBounds={setBounds}\n          ></SideBar>\n        </div>\n\n        <div\n          className=\"trama2-side-panel-toggle \"\n          onClick={toggleSidePanel}\n        ></div>\n      </div>\n      <div className=\"trama2-content-wrapper\">\n        <div className=\"trama2-content\">\n          <LineeTrama\n            selected={selected}\n            toggleSelect={toggleSelect}\n            racconti={racconti}\n            data={byRacconto}\n            height={MOTIVO_LINE_HEIGHT}\n            scalaMotivoY={scalaMotivoY}\n            colors={colors}\n          ></LineeTrama>\n        </div>\n      </div>\n    </div>\n  );\n}\n"],"sourceRoot":""}