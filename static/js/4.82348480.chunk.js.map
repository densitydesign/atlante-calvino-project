{"version":3,"sources":["general/MiniInfoBox/MiniInfoBox.js","../node_modules/lodash/difference.js","../node_modules/lodash/_baseDifference.js","../node_modules/lodash/isArrayLikeObject.js","visualizations/Realismo/utils.js","visualizations/Realismo/CircleWorms.js","visualizations/Realismo/WormDetail.js","visualizations/Realismo/RealismoMain.js","../node_modules/d3-shape/src/link/index.js","../node_modules/d3-shape/src/pointRadial.js","../node_modules/lodash/mapValues.js"],"names":["MiniInfoBox","children","onClose","style","className","onClick","baseDifference","require","baseFlatten","baseRest","isArrayLikeObject","difference","array","values","module","exports","SetCache","arrayIncludes","arrayIncludesWith","arrayMap","baseUnary","cacheHas","iteratee","comparator","index","includes","isCommon","length","result","valuesLength","outer","value","computed","valuesIndex","push","isArrayLike","isObjectLike","realismoDataNormalized","realismoData","map","item","startNorm","start","endNorm","end","locationNorm","yearsExtent","extent","d","year","y","i","Date","racconti","uniqBy","title","volume","volume_primo","id","fonte_id","dataset","groupBy","maxLength","Math","max","filter","Boolean","detailWormsCircles","mapValues","data","dataFilled","reduce","filledWithCream","calv0","level","occurrence_location","Number","ghost","prevCalvix","lastData","startTotalNorm","endTotalNorm","locationTotalNorm","lengthTotalNorm","intersectionCircleItem","colorScale","scaleOrdinal","range","domain","unknown","uniqueYears","x","sort","unitDeg","acc","lastRotation","LEGEND_SIZE","raccontiDegs","racconto","rotation","byYear","yearsArcs","startAngleDeg","startAngle","PI","endAngle","angleLabel","calculateDegs","arcGenerator","arc","Worm","React","memo","circles","radius","labelSize","wormSize","isOmitted","isSelected","wormStart","size","flipText","circleRadius","animationDelays","animationGroups","cursor","undefined","circle","cx","movement","delay","direction","key","category","transformOrigin","animationDelay","r","cy","place","fill","CicrleYears","wormEnd","flipTextStyle","transform","opacity","alignmentBaseline","width","height","radiusStrokeSize","yearArc","textX","fontSize","textAnchor","outerRadius","innerRadius","Legend","endLineStart","endLineEnd","t","y1","y2","x1","x2","stroke","strokeWidth","CircleWorms","heightCircle","circlesMap","selected","selectedByHand","omitted","raccontiJoinLines","toggleSelect","handleClick","useCallback","useTranslation","selectedKeys","Object","keys","allSelected","INNER_CIRCLE_STROKE_WIDTH","paddingTop","offset","stopColor","type","slope","pointAX","pointAY","pointBX","pointBY","strokeDasharray","angle","yScale","makeItemFill","color","makeItemGradientUrl","n","totalLabelX","ghostWorm","allWidth","CHART_PADDING_X","dataWorms","useMemo","xLocation","labalesData","dataForLabels","dataWormsLabeled","mul","link","linkVertical","linePath","source","target","levelsData","dataLevelWorms","hasData","dataLabel","totalLength","margin","marginLeft","attributeName","dur","repeatCount","datum","rx","ry","MINI_RADIUS","occurrence","circleWidth","out","interectionItems","sortBy","reverse","titoliByVolume","label","keyByTitolo","volumeLabel","availableVolumes","_titles","find","toLowerCase","flat","RealismoMain","useState","helpSidePanelOpen","setHelpSidePanelOpen","toggleHelpSidePanel","a","ricerca","setRicerca","ricerca2","setRicerca2","helpPage","GlobalData","helpPages","realism","main","optionsMovimento","optionsSpace","useDimensions","liveMeasure","ref","refCirlce","movimento","setMovimento","spazio","setSpazio","timeFilter","setTimeFilter","spazioLabels","s","omittedStuff","spazioValues","forEach","titolo","keep","some","every","categories","wormCateogry","indexOf","getFullYear","mapSelected","volumeSelected","selectedOnWorms","selected2","omittedKeys","newRicerca","concat","selctedTitoliSorted","ricercaTitoli","leftRacconti","rightRacconti","lineHeightRight","lineHeightLeft","raccontiFontSize","realismoDiameter","realismoRadius","abs","sin","cos","HelpSidePanel","open","page","closeButtonClicked","MainMenu","gridColumn","PageTitle","TextSearch","changeOptions","newOptions","temp","dd","selectedOptions","availableIds","availableOptions","MoreInfo","onClicked","CompassButton","position","lineHeight","AltOptions","options","allowEmpty","onChange","m","textAlign","multiple","RangeFilterSnap","update","timeSpan","linkSource","linkTarget","curve","pointX","pointY","context","buffer","argv","slice","call","arguments","apply","this","path","_","constant","curveVertical","x0","y0","moveTo","bezierCurveTo","baseAssignValue","baseForOwn","baseIteratee","object"],"mappings":"gOAGe,SAASA,EAAT,GAAoD,IAA7BC,EAA4B,EAA5BA,SAAUC,EAAkB,EAAlBA,QAASC,EAAS,EAATA,MACvD,OACE,yBAAKC,UAAU,cAAcD,MAAOA,GAClC,yBAAKC,UAAU,qBAAqBH,GACpC,yBAAKG,UAAU,kBAAkBC,QAASH,GAA1C,W,qBCPN,IAAII,EAAiBC,EAAQ,MACzBC,EAAcD,EAAQ,KACtBE,EAAWF,EAAQ,KACnBG,EAAoBH,EAAQ,MAuB5BI,EAAaF,GAAS,SAASG,EAAOC,GACxC,OAAOH,EAAkBE,GACrBN,EAAeM,EAAOJ,EAAYK,EAAQ,EAAGH,GAAmB,IAChE,MAGNI,EAAOC,QAAUJ,G,qBChCjB,IAAIK,EAAWT,EAAQ,KACnBU,EAAgBV,EAAQ,KACxBW,EAAoBX,EAAQ,KAC5BY,EAAWZ,EAAQ,KACnBa,EAAYb,EAAQ,KACpBc,EAAWd,EAAQ,KA6DvBO,EAAOC,QA7CP,SAAwBH,EAAOC,EAAQS,EAAUC,GAC/C,IAAIC,GAAS,EACTC,EAAWR,EACXS,GAAW,EACXC,EAASf,EAAMe,OACfC,EAAS,GACTC,EAAehB,EAAOc,OAE1B,IAAKA,EACH,OAAOC,EAELN,IACFT,EAASM,EAASN,EAAQO,EAAUE,KAElCC,GACFE,EAAWP,EACXQ,GAAW,GAEJb,EAAOc,QA/BK,MAgCnBF,EAAWJ,EACXK,GAAW,EACXb,EAAS,IAAIG,EAASH,IAExBiB,EACA,OAASN,EAAQG,GAAQ,CACvB,IAAII,EAAQnB,EAAMY,GACdQ,EAAuB,MAAZV,EAAmBS,EAAQT,EAASS,GAGnD,GADAA,EAASR,GAAwB,IAAVQ,EAAeA,EAAQ,EAC1CL,GAAYM,IAAaA,EAAU,CAErC,IADA,IAAIC,EAAcJ,EACXI,KACL,GAAIpB,EAAOoB,KAAiBD,EAC1B,SAASF,EAGbF,EAAOM,KAAKH,QAEJN,EAASZ,EAAQmB,EAAUT,IACnCK,EAAOM,KAAKH,GAGhB,OAAOH,I,qBC/DT,IAAIO,EAAc5B,EAAQ,KACtB6B,EAAe7B,EAAQ,IA+B3BO,EAAOC,QAJP,SAA2BgB,GACzB,OAAOK,EAAaL,IAAUI,EAAYJ,K,+z8NCnBtCM,EAAyBC,EAAaC,KAAI,SAACC,GAAD,mBAAC,eAC5CA,GAD2C,IAE9CC,WAAYD,EAAKE,MAAQF,EAAKb,OAC9BgB,SAAUH,EAAKI,IAAMJ,EAAKb,OAC1BkB,cAAeL,EAAI,qBAA2BA,EAAKb,YAGxCmB,EAAcC,YAAOT,GAAc,SAACU,GAAD,OAAQA,EAAEC,QAAMV,KAC9D,SAACW,EAAEC,GAAH,OAAS,IAAIC,KAAKF,EAAG,MAGVG,EAAWC,IAAOhB,EAAc,SAASC,KAAI,SAACC,GAAD,MAAW,CACnEe,MAAOf,EAAKe,MACZ5B,OAAQa,EAAKb,OACbsB,MAAOT,EAAKS,KACZO,OAAQhB,EAAKiB,aACbC,GAAIlB,EAAKmB,aAGEC,EAAUC,IAAQxB,EAAwB,SAEjDyB,EAAYC,KAAKC,IAAL,MAAAD,KAAI,YACjBzB,EAAaC,KAAI,SAACS,GAAD,OAAQA,EAAErB,UAAQsC,OAAOC,WAElCC,EAAqBC,IAAUR,GAAS,SAACS,GAEpD,IAAMC,EAAaD,EAAKE,QAAO,SAACC,EAAiBC,EAAOtB,GACtD,GAAU,IAANA,GAEGsB,EAAM/B,MAAQ,GAGjB8B,EAAgBtC,KAAhB,2BACKuC,GADL,IAEEC,MAAO,EACPC,oBAAqB,EACrBjC,MAAO,EACPE,IAAKgC,OAAOH,EAAM/B,OAAS,EAC3BmC,OAAO,SAGN,CAEL,IAAMC,EAAaT,EAAKlB,EAAI,GACxBsB,EAAM/B,MAAQkC,OAAOE,EAAWlC,KAAO,GACzC4B,EAAgBtC,KAAhB,2BACKuC,GADL,IAEEC,MAAO,EACPC,oBAAqBC,OAAOE,EAAWlC,KAAO,EAC9CF,MAAOkC,OAAOE,EAAWlC,KAAO,EAChCA,IAAKgC,OAAOH,EAAM/B,OAAS,EAC3BmC,OAAO,KAMb,OADAL,EAAgBtC,KAAKuC,GACdD,IACN,IACH,GAAIF,EAAW3C,OAAS,EAAG,CACzB,IAAMoD,EAAWT,EAAWA,EAAW3C,OAAS,GAC5CoD,EAASnC,IAAMmC,EAASpD,QAC1B2C,EAAWpC,KAAX,2BACK6C,GADL,IAEEL,MAAO,EACPC,oBAAqBI,EAASnC,IAAM,EACpCF,MAAOqC,EAASnC,IAAM,EACtBA,IAAKmC,EAASpD,OACdkD,OAAO,KAKb,OAAOP,EAAW/B,KAAI,SAACC,GAAD,mBAAC,eAClBA,GADiB,IAEpBwC,gBAAiBxC,EAAKE,MAAQoB,EAC9BmB,cAAezC,EAAKI,IAAMkB,EAC1BoB,mBAAoB1C,EAAI,oBAA0BsB,EAClDqB,iBAAkB3C,EAAKb,OAASmC,UAIpC,SAASsB,EAAuB5C,EAAMC,EAAWE,GAC/C,OAAIA,EAAUH,EAAKC,WAGfA,EAAYD,EAAKG,QAFZ,EAQFA,EAAUF,EAHCsB,KAAKC,IAAI,EAAGxB,EAAKC,UAAYA,GAC/BsB,KAAKC,IAAI,EAAGrB,EAAUH,EAAKG,SAwCtC,IAAM0C,EAAaC,cACvBC,MAAM,CAAC,UAAW,UAAW,YAC7BC,OAAO,CAAC,SAAU,UAAW,mBAC7BC,QAAQ,CAAC,S,MAKZ,WACE,IAAMC,EAAcpC,IAAOD,GAAU,SAACb,GAAD,OAAUA,EAAKS,QACjDV,KAAI,SAACoD,GAAD,OAAOA,EAAE1C,QACb2C,OAQGC,GAAW,IAdF,EAQCH,EAAYnB,QAAO,SAACuB,EAAK7C,EAAME,GAC7C,OAAIA,EAAI,EACC2C,EAAM7C,EAAOyC,EAAYvC,EAAI,GAE/B2C,IACN,IACwDzC,EAAS1B,OAEhEoE,EAAeC,EAAkBH,EAAU,EACzCI,EAAe5C,EAASd,KAAI,SAAC2D,EAAU/C,GAO3C,OANIA,EAAI,IACN4C,EACEA,EACAF,EArBS,GAsBRK,EAASjD,KAAOI,EAASF,EAAI,GAAGF,OAE9B,2BACFiD,GADL,IAEEC,SAAUJ,EAAe,QAIvBK,EAASvC,IAAQoC,EAAc,QAkBrC,MAAO,CAAEA,eAAcI,UAjBLX,EAAYnD,KAAI,SAACU,GACjC,IAAMoB,EAAO+B,EAAOnD,GACdqD,EAAgBjC,EAAK,GAAG8B,SAAW,GAAKN,EAAU,EAClDU,EAAcD,EAAgB,KAAQ,EAAIvC,KAAKyC,IAE/CC,GACFpC,EAAKA,EAAK1C,OAAS,GAAGwE,SAAW,GAAKN,EAAU,GAAK,KACtD,EAAI9B,KAAKyC,IAEZ,MAAO,CACLD,aACAG,WAAYJ,EAAgBT,EAAU,GAAKA,EAAU,EACrDY,WACAxD,YAOqC0D,GAA5BV,E,EAAAA,aAAcI,E,EAAAA,U,OCtLvBO,EAAeC,cAEfC,EAAOC,IAAMC,MACjB,YAWO,IAVLd,EAUI,EAVJA,SACAe,EASI,EATJA,QACAC,EAQI,EARJA,OACAC,EAOI,EAPJA,UACAC,EAMI,EANJA,SACA/G,EAKI,EALJA,QAEAgH,GAGI,EAJJC,WAII,EAHJD,WAIME,GADF,EAFJC,KAEI,EADJC,SAEkBP,EAASC,EAAYC,EApBrB,IAuBZM,EAAeN,EAAWH,EAAQtF,OAAS,EAG3CgG,EAAkBV,EAAQ1C,QAAO,SAACuB,EAAKtD,GAK3C,OAJKsD,EAAItD,EAAKmC,uBACZmB,EAAItD,EAAKmC,qBAAuB,GAElCmB,EAAItD,EAAKmC,sBAAwB,EAC1BmB,IACN,IAEG8B,EAAkB,GAExB,OACE,uBACEzH,MACE,IAKF,+BAAQ+F,EAAS3C,OACjB,uBACElD,QAAS,WACFgH,GACHhH,EAAQ6F,IAGZ/F,MAAO,CACL0H,OAAQR,OAAYS,EAAY,YAGjCb,EAAQ1E,KAAI,SAACwF,EAAQ5E,GAAO,IAAD,EACpB6E,EAAKT,EAAYpE,EAAIuE,EAAe,EAAIA,EAGtB,SAApBK,EAAOE,WACTL,EAAgBG,EAAOpD,0BAC2BmD,IAAhDF,EAAgBG,EAAOpD,qBACnB,EACAiD,EAAgBG,EAAOpD,qBAAuB,GAGtD,IAAMuD,EACiB,YAArBH,EAAOI,UAC2C,GAA9CP,EAAgBG,EAAOpD,qBAGvB,IAFCgD,EAAgBI,EAAOpD,qBACtBiD,EAAgBG,EAAOpD,sBAG/B,OACE,uBAAGyD,IAAKjF,GACN,4BACE/C,UAAS,UACa,SAApB2H,EAAOE,UAAwBZ,EAAyB,GAAb,WADpC,2CAEgBU,EAAOM,gBAFvB,QAEmC,WAC5ClI,MAAO,CAELmI,gBAAgB,GAAD,OAAKN,EAAL,cAxBZ,EAwBY,MACfO,eAAe,GAAD,OAAKL,EAAL,MAEhBM,EAAGnB,EAA2B,GAAfK,EAAoC,IAAfA,EACpCe,GA5BK,EA6BLT,GAAIA,IAELD,EAAOW,OACN,4BACEvI,MAAO,CAAEwI,KAAM,QACfH,EAAGd,EAAe,EAClBe,GAnCG,EAoCHT,GAAIA,aA8ElBY,GAlEY7B,IAAMC,MACtB,YAWO,IAVLd,EAUI,EAVJA,SACAe,EASI,EATJA,QACAC,EAQI,EARJA,OACAC,EAOI,EAPJA,UACAC,EAMI,EANJA,SAEAE,GAII,EALJjH,QAKI,EAJJiH,YAEAE,GAEI,EAHJH,UAGI,EAFJG,MAEI,IADJC,gBACI,SAEEoB,EAAU3B,EAASC,EAGnB2B,GAD0B7B,EAAQtF,OAClB8F,EAClB,CACEsB,UAAW,iBACXT,gBAAgB,GAAD,OAAKO,EAAL,gBAEjBf,GAEJ,OACE,uBACE1H,UAAS,8BAAyBqH,EAAW,WAAa,IAC1DtH,MAAO,CACL6I,QAAS1B,EAAa,EAAI,KAG5B,uBAAGnH,MAAO2I,GACR,0BACE3I,MAAO,CAAE8I,kBAAmB,UAC5BtD,EAAGkD,EA9IY,GAgJd3C,EAAS3C,QAGd,4BACIkE,GACA,0BACErH,UAAU,2BACVuF,EAAGkD,EAvJU,EAwJb3F,GAAI,EACJgG,MAAO1B,EAAO,EAAIJ,EAClB+B,OAAQ,GACRR,KAAK,yBAGRlB,GACC,0BACErH,UAAU,2BACVuF,EAAG,GACHzC,GAAI,EACJgG,MAAOL,EACPM,OAAQ,GACRR,KAAK,mCASC5B,IAAMC,MAAK,YAAyC,IAAtCrB,EAAqC,EAArCA,EAAGzC,EAAkC,EAAlCA,EAAGgE,EAA+B,EAA/BA,OAAQkC,EAAuB,EAAvBA,iBAC9C,OACE,uBAAGL,UAAS,oBAAepD,EAAf,aAAqBzC,EAArB,MACTmD,EAAU9D,KAAI,SAAC8G,GACd,IAAM5B,EAAW4B,EAAQ3C,YAAc,IAAM2C,EAAQ3C,YAAc,IAC7D4C,EAAQpC,EAASkC,EACvB,OACE,uBAAGhB,IAAKiB,EAAQpG,MACd,uBAAG9C,MAAO,CAAE4I,UAAU,UAAD,OAAYM,EAAQ3C,WAApB,UACnB,uBACEvG,MAAO,CACLmI,gBAAgB,GAAD,OAAKgB,EAAL,WACfP,UAAWtB,EAAW,sBAAmBK,EACzCyB,SAAU,IAGZ,0BAAMC,WAAY/B,EAAW,QAAU,MAAO9B,EAAG2D,EAAOpG,EAAG,GACxDmG,EAAQpG,QAIf,0BACE9C,MAAO,CAAEwI,KAAM,QACf3F,EAAG4D,EAAa,2BACXyC,GADU,IAEbI,YAAavC,EAASkC,EAAmB,EACzCM,YAAaxC,EAASkC,EAAmB,gBAUnDO,EAAS5C,IAAMC,MACnB,YAA8D,IAA3DG,EAA0D,EAA1DA,UAAWxB,EAA+C,EAA/CA,EAAGyB,EAA4C,EAA5CA,SAAUwC,EAAkC,EAAlCA,aAAcC,EAAoB,EAApBA,WAAYC,EAAQ,EAARA,EACnD,OACE,2BACE,0BACEC,GAAI,EACJC,GAAI7C,EACJ8C,GAAItE,EACJuE,GAAIvE,EACJwE,OAAO,QACPC,YAAa,IAaf,0BACEL,GAAI5C,EAvOQ,GAwOZ6C,GAAI7C,EAxOQ,GAwOoBC,EAChC6C,GAAItE,EACJuE,GAAIvE,EACJwE,OAAO,QACPC,YAAa,IAEf,0BACEzE,EAAGA,EACHzC,EAAGiE,EAhPS,GAGK,EA8OjB/G,UAAU,sCACVoJ,WAAY,MACZrJ,MAAO,CACLmI,gBAAgB,GAAD,OAAK3C,EAAL,cAAYwB,EApPjB,GAoPK,MACf4B,UAAW,mBAGZe,EAAE,SAEL,0BACEnE,EAAGA,EACHzC,EAAGiE,EA5PS,GA4PmBC,EAzPd,EA0PjBhH,UAAU,uBACVoJ,WAAY,QACZrJ,MAAO,CACLmI,gBAAgB,GAAD,OAAK3C,EAAL,cAAYwB,EAhQjB,GAgQ6CC,EAAxC,MACf2B,UAAW,mBAGZe,EAAE,qBAGL,0BACEC,GAAIH,EACJI,GAAIH,EACJI,GAAItE,EACJuE,GAAIvE,EACJwE,OAAO,QACPC,YAAa,IAEf,uBACEjK,MAAO,CACL4I,UAAU,aAAD,OAAepD,EAAI,GAAnB,eAA4BkE,EAA5B,wBAGX,0BACElE,EAAG,EACHzC,EAAG,EACH9C,UAAU,uBACVoJ,WAAY,SAEXM,EAAE,kBAEL,0BACEnE,EAAG,EACHzC,EAAG,GACH9C,UAAU,uBACVoJ,WAAY,SAEXM,EAAE,uBAQA,SAASO,EAAT,GAUX,IATFC,EASC,EATDA,aACApD,EAQC,EARDA,OACAqD,EAOC,EAPDA,WACAC,EAMC,EANDA,SACAC,EAKC,EALDA,eACAC,EAIC,EAJDA,QACArH,EAGC,EAHDA,SACAsH,EAEC,EAFDA,kBACAC,EACC,EADDA,aAEMpD,EAAgB,EAATN,EACP2D,EAAcC,uBAClB,SAAC5E,GACC0E,EAAa1E,EAAS3C,SAExB,CAACqH,IAGKd,EAAMiB,YAAe,YAArBjB,EAEFkB,EAAeC,OAAOC,KAAKV,GAC3BW,EAAsC,IAAxBH,EAAarJ,OAE3BwF,EAAaK,EAAO,EApUD,EAqUnBJ,EAAYI,EAAO,EApUD,IAqUlBkC,EACJlC,EAAO,EAAIL,EAAYC,EArUL,GACO,GAsUrBwC,EACJzC,EAxUkB,GA0UlBC,EAzUyB,GA2UzBgE,IACIvB,EAAaD,EAAe,GAE5ByB,GAAcf,EAAe9C,GAAQ,EAG3C,OACE,yBAAK0B,MAAO1B,EAAO,IAAK2B,OAAQmB,GAC9B,8BACE,oCAAgB5G,GAAG,kBACjB,0BAAM4H,OAAO,KAAKC,UAAU,2BAC5B,0BAAMD,OAAO,MAAMC,UAAU,eAE/B,oCAAgB7H,GAAG,uBACjB,0BAAM4H,OAAO,MAAMC,UAAU,cAC7B,0BAAMD,OAAO,OAAOC,UAAU,4BAEhC,4BAAQ7H,GAAG,cACT,6CACE,6BAAS8H,KAAK,SAASC,MAAM,QAC7B,6BAASD,KAAK,SAASC,MAAM,QAC7B,6BAASD,KAAK,SAASC,MAAM,WAKnC,uBAAG1C,UAAS,oBAAevB,EAAO,EAAI,IAA1B,aAAkCA,EAAO,EAAI6D,EAA7C,MACTL,EAAazI,KAAI,SAACgB,GAAW,IAAD,EAUvBoH,EAAkBpH,GARpB0G,EAFyB,EAEzBA,GACAF,EAHyB,EAGzBA,GACAG,EAJyB,EAIzBA,GACAF,EALyB,EAKzBA,GACA0B,EANyB,EAMzBA,QACAC,EAPyB,EAOzBA,QACAC,EARyB,EAQzBA,QACAC,EATyB,EASzBA,QAEF,OACE,uBAAGzD,IAAK7E,GAIN,0BACEuI,gBAAgB,IAChB1L,UAAS,8BACPqK,EAAelH,GAAS,+BAAiC,IAE3DoF,KAAK,OACL3F,EAAC,YAAOiH,EAAP,YAAaF,EAAb,cAAqB2B,EAArB,YAAgCC,EAAhC,aAA4CC,EAA5C,YAAuDC,EAAvD,aAAmE3B,EAAnE,YAAyEF,SA8BjF3G,EAASd,KAAI,SAAC2D,EAAU/C,GACvB,IAAM4I,EAAQ7F,EAASC,SACvB,OACE,uBACEiC,IAAKjF,EACL/C,UAAS,eAAU+C,GACnBhD,MAAO,CAAE4I,UAAU,UAAD,OAAYgD,EAAZ,UAElB,kBAACjF,EAAD,CACEU,KAAMA,EACNC,SAAUsE,GAAS,IAAMA,GAAS,IAClCzE,WAAY6D,KAAiBX,EAAStE,EAAS3C,OAC/C8D,YAAaqD,EAAQxE,EAAS3C,OAC9BlD,QAASwK,EACT3D,OAAQM,EAAO,EACfL,UAAYK,EAAO,EA5aR,EA6aXJ,SAAWI,EAAO,EA5aR,IA6aVtB,SAAUA,EACVe,QAASsD,EAAWrE,EAAS3C,cAMvC,uBAAGwF,UAAS,yBAAoBsC,EAApB,MACV,kBAAC1B,EAAD,CACEG,EAAGA,EACHnE,EAAGuB,EACHE,SAAUA,EACVD,UAAWA,EACXyC,aAAcA,EACdC,WAAYA,IAGd,kBAACjB,EAAD,CACEjD,EAAGuB,EACHhE,EAAGgE,EACHA,OAAQwC,EACRN,iBA/bwB,M,uBCOlC,SAAS4C,GAAOtH,GACd,OALsB,GAFH,GAOqBA,EAG1C,SAASuH,GAAazJ,GACpB,OAAIA,EAAKqC,MACA,0BAEa,UAAlBrC,EAAKyF,SACAzF,EAAK0J,MAER,OAAN,OAGF,SAA6B1J,GAC3B,IAAI2F,EAAY,GACO,YAAnB3F,EAAK2F,UACPA,EAAY,WACgB,aAAnB3F,EAAK2F,YACdA,EAAY,aAEd,MAAM,gBAAN,OAAuB3F,EAAK6F,UAA5B,OAAuCF,GAVzBgE,CAAoB3J,GAAlC,KAmVauE,IFvQkBqF,GEuQlBrF,OAAMC,MAtUrB,YAA2E,IAAD,IA2EpEqF,EAGAC,EAYG,EA1FajI,EAAoD,EAApDA,KAAakI,EAAuC,EAA9CrD,MAAiB3F,EAA6B,EAA7BA,MAAON,EAAsB,EAAtBA,KAAM2H,EAAgB,EAAhBA,aAClD1B,EAAQqD,EAAWC,IA3BD,IA4BlBC,EAAYC,mBAAQ,WACxB,OAAOrI,EAAK9B,KAAI,SAACC,GACf,IAAMyH,EACJzH,EAAKwC,eAAiBkE,EAzCN,GAUE,IAgCdgB,EAAK1H,EAAKyC,aAAeiE,EA1Cb,GAUE,IAiCdyD,EACJnK,EAAK0C,kBAAoBgE,EA5CT,GAUE,IAmCdgD,EAAQ7G,EAAW7C,EAAK6F,UAC9B,OAAO,2BACF7F,GADL,IAEEkC,OAAQlC,EAAKkC,MACbwH,QACAjC,KACAC,KACAyC,mBAGH,CAACtI,EAAM6E,IAIJ0D,EAAcF,mBAAQ,WAC1B,IAAIG,EACEC,EAAmBL,EAAUxI,QAAO,SAACjB,GAAD,OAAmB,IAAZA,EAAE6B,SACnD,GAAIiI,EAAiBnL,OAAS,GAC5BkL,EAAgBC,EAAiBvK,KAAI,SAACC,EAAMW,GAC1C,IAAMwC,EAAI6G,IAA0C,GAAJrJ,EAChD,OAAO,2BACFX,GADL,IAEEmD,IACAzC,EAAG8I,GAXM,YAcR,CACL,IAAMe,EAAM7D,GAAS4D,EAAiBnL,OAAS,GAC/CkL,EAAgBC,EAAiBvK,KAAI,SAACC,EAAMW,GAC1C,IAAMwC,EAAI6G,IAAsCrJ,EAAI4J,EACpD,OAAO,2BACFvK,GADL,IAEEmD,IACAzC,EAAG8I,GArBM,QAyBf,IAAMgB,EAAOC,cACb,OAAOJ,EAActK,KAAI,SAACC,GACxB,IAAM0K,EAAWF,EAAK,CACpBG,OAAQ,CAAC3K,EAAKmK,UAAWX,GAAOxJ,EAAKkC,QACrC0I,OAAQ,CAAC5K,EAAKmD,EAAGnD,EAAKU,EAAI,KAE5B,OAAO,2BACFV,GADL,IAEE0K,kBAGH,CAACT,EAAWvD,IAETmE,EAAaX,mBAAQ,WACzB,OAAOnH,IAvCQ,GAuCQhD,KAAI,SAACmC,GAC1B,IAAM4I,EAAiBb,EAAUxI,QAAO,SAACjB,GAAD,OAAOA,EAAE0B,QAAUA,KACrD6I,EAAUD,EAAe3L,OAAS,EAClC6L,EAAYZ,EAAY3I,QAAO,SAACjB,GAAD,OAAOA,EAAE0B,QAAUA,KAExD,MAAO,CACLA,QACA4I,iBACAC,UACAC,kBAGH,CAACf,EAAWG,IAETa,EAAW,oBAAGpJ,EAAK,UAAR,aAAG,EAAS1C,cAAZ,QAAsB,EAEjCwH,EAAS6C,GAvDE,GAxDQ,IAiIzB,OALEK,EARuB,IAArBI,EAAU9K,QAAqD,MAArC8K,EAAU,GAAG9H,qBACzC2H,EAAY,CACVrC,GAAI,IACJC,GACEuC,EAAU,GAAGtH,gBAAkB+D,EAzHf,GAUE,MAmHEgB,GAEb,UAAGuC,EAAUA,EAAU9K,OAAS,UAAhC,aAAG,EAAiCuI,GAI/C,yBAAK9J,UAAU,mBACb,yBAAKA,UAAU,+BAAf,WAEE,6BAFF,mBAIE,6BAJF,mBAOA,yBAAKD,MAAO,CAAEuN,OAAO,OAAD,OA3IF,GA2IE,QAClB,kBAAC1N,EAAA,EAAD,CACEE,QAAS,kBAAM0K,EAAarH,IAC5BpD,MAAO,CAAEwN,WApIO,MAsIfpK,EAJH,KAIYN,IAGd,yBAAK7C,UAAU,kBAAkBD,MAAO,CAAEgJ,WACxC,oCAAgBzF,GAAG,sBACjB,0BAAM4H,OAAQ,KAAMC,UAAW,YAC/B,0BAAMD,OAAQ,MAAOC,UAAW,WAC9B,6BACEqC,cAAc,SACd/M,OAAO,QACPgN,IAAI,KACJC,YAAY,gBAGhB,0BAAMxC,OAAQ,OAAQC,UAAW,aAEnC,oCAAgB7H,GAAG,+BACjB,0BAAM4H,OAAQ,KAAMC,UAAW,YAC/B,0BAAMD,OAAQ,MAAOC,UAAW,WAC9B,6BACEqC,cAAc,SACd/M,OAAO,MACPgN,IAAI,KACJC,YAAY,gBAGhB,0BAAMxC,OAAQ,OAAQC,UAAW,aAEnC,oCAAgB7H,GAAG,8BACjB,0BAAM4H,OAAQ,KAAMC,UAAW,YAC/B,0BAAMD,OAAQ,MAAOC,UAAW,WAC9B,6BACEqC,cAAc,SACd/M,OAAO,MACPgN,IAAI,KACJC,YAAY,gBAGhB,0BAAMxC,OAAQ,OAAQC,UAAW,aAEnC,oCAAgB7H,GAAG,uBACjB,0BAAM4H,OAAQ,KAAMC,UAAW,YAC/B,0BAAMD,OAAQ,MAAOC,UAAW,WAC9B,6BACEqC,cAAc,SACd/M,OAAO,QACPgN,IAAI,KACJC,YAAY,gBAGhB,0BAAMxC,OAAQ,OAAQC,UAAW,aAEnC,oCAAgB7H,GAAG,+BACjB,0BAAM4H,OAAQ,KAAMC,UAAW,YAC/B,0BAAMD,OAAQ,MAAOC,UAAW,WAC9B,6BACEqC,cAAc,SACd/M,OAAO,MACPgN,IAAI,KACJC,YAAY,gBAGhB,0BAAMxC,OAAQ,OAAQC,UAAW,aAEnC,oCAAgB7H,GAAG,gCACjB,0BAAM4H,OAAQ,KAAMC,UAAW,YAC/B,0BAAMD,OAAQ,MAAOC,UAAW,WAC9B,6BACEqC,cAAc,SACd/M,OAAO,MACPgN,IAAI,KACJC,YAAY,gBAGhB,0BAAMxC,OAAQ,OAAQC,UAAW,aAEnC,oCAAgB7H,GAAG,8BACjB,0BAAM4H,OAAQ,KAAMC,UAAW,YAC/B,0BAAMD,OAAQ,MAAOC,UAAW,WAC9B,6BACEqC,cAAc,SACd/M,OAAO,QACPgN,IAAI,KACJC,YAAY,gBAGhB,0BAAMxC,OAAQ,OAAQC,UAAW,aAEnC,oCAAgB7H,GAAG,sCACjB,0BAAM4H,OAAQ,KAAMC,UAAW,YAC/B,0BAAMD,OAAQ,MAAOC,UAAW,WAC9B,6BACEqC,cAAc,SACd/M,OAAO,MACPgN,IAAI,KACJC,YAAY,gBAGhB,0BAAMxC,OAAQ,OAAQC,UAAW,aAEnC,oCAAgB7H,GAAG,uCACjB,0BAAM4H,OAAQ,KAAMC,UAAW,YAC/B,0BAAMD,OAAQ,MAAOC,UAAW,WAC9B,6BACEqC,cAAc,SACd/M,OAAO,MACPgN,IAAI,KACJC,YAAY,gBAGhB,0BAAMxC,OAAQ,OAAQC,UAAW,aAEnC,uBAAGxC,UAAW,oBACXsE,EAAW9K,KAAI,SAACwL,GAAD,OACd,uBACE3F,IAAK2F,EAAMrJ,MACXtE,UAAS,qCACP2N,EAAMR,QAAU,gBAAkB,mBAGpC,0BACEtD,GAAIuC,IACJtC,GAAIhB,EA1QI,GAUE,IAiQVa,GAAIiC,GAAO+B,EAAMrJ,OACjBsF,GAAIgC,GAAO+B,EAAMrJ,OACjBtE,UAAS,uBAEX,0BACEA,UAAW,0BACX8C,EAAG8I,GAAO+B,EAAMrJ,OAAS,EACzBiB,EAAG6G,KAEFuB,EAAMrJ,WAKZ2I,EAAW9K,KAAI,SAACwL,GAAD,OACd,uBAAG3F,IAAK2F,EAAMrJ,OACXqJ,EAAMT,eAAe/K,KAAI,SAACC,GAAD,OACxB,uBAAG4F,IAAK5F,EAAKmC,qBACX,0BACEqJ,GAAI,EACJC,GAAI,EACJtI,EAAGnD,EAAKyH,GACRf,MAAO1G,EAAK0H,GAAK1H,EAAKyH,GACtBd,OA/RA,GAgSAhJ,MAAO,CACLwI,KAAMsD,GAAazJ,IAErBU,EAAG8I,GAAOxJ,EAAKkC,OAASwJ,SAI7BH,EAAMP,UAAUjL,KAAI,SAACC,GAAD,OACnB,uBAAG4F,IAAK5F,EAAKmC,qBACX,0BAAM3B,EAAGR,EAAK0K,SAAUvE,KAAK,OAAOwB,OAAO,YAC3C,uBACEhK,MAAO,CACLmI,gBAAgB,GAAD,OAAK9F,EAAKmD,EAAV,cAAiBnD,EAAKU,EAAtB,MACf6F,UAAU,mBAGZ,0BAAMpD,EAAGnD,EAAKmD,EAAGzC,EAAGV,EAAKU,EAAGsG,WAAW,OACpChH,EAAK2L,iBAKbJ,EAAMT,eACJrJ,QAAO,SAACjB,GAAD,OAAmB,IAAZA,EAAE6B,SAChBtC,KAAI,SAACC,GAAD,OACH,uBAAG4F,IAAK5F,EAAKmC,qBACX,4BACEgE,KAAK,QACLX,GAAIxF,EAAKmK,UACTlE,GAAIuD,GAAOxJ,EAAKkC,OAChB8D,EA7TE,YAmUb8D,GACC,0BACE0B,GAAI,EACJC,GAAI,EACJtI,EAAG2G,EAAUrC,GACbf,MAAOoD,EAAUpC,GAAKoC,EAAUrC,GAChCd,OA1UM,GA2UNhJ,MAAO,CACLwI,KAAM,2BAERzF,EAAG8I,GAAO,GAAKkC,MAKrB,0BACE1E,WAAY6C,EAAcnD,GAAS,IAAO,MAAQ,SAClDvD,EAAG0G,EACHnJ,EAAG,GACH/C,MAAO,CAAEoJ,SAAU,KAElBkE,EANH,cAQA,0BACExD,GAAIoC,EACJnC,GAAImC,EACJtC,GAAI,GACJC,GAAI,GACJG,OAAQ,e,UCjUZI,IHiE2B6B,GGjEG,GHkE3BhI,IAAUR,GAAS,SAACS,GACzB,IAAM+J,EAAc,EAAIhC,GA6BxB,OA3BgB7G,IAAM6G,IAAG7H,QAAO,SAACuB,EAAKtD,EAAMW,GAC1C,IAKIkL,EALE5L,EAAYU,EAAIiL,EAChBzL,GAAWQ,EAAI,GAAKiL,EACtBE,EAAmBC,iBAAOlK,GAAM,SAAC7B,GAAD,OAClC4C,EAAuB5C,EAAMC,EAAWE,MACxC6L,UAUE9F,GAAQ,EASZ,OAbE2F,EAHAC,EAAiB3M,OAAS,GAC1ByD,EAAuBkJ,EAAiB,GAAI7L,EAAWE,GAAW,EAE5D2L,EAAiB,GAEjB,IAIFH,YACJE,EAAIxL,cAAgBJ,GACpB4L,EAAIxL,cAAgBF,IAEpB+F,GAAQ,GAEV5C,EAAI5D,KAAJ,2BAAcmM,GAAd,IAAmB3F,WACZ5C,IACN,QGrED2I,IAvBsBpL,EAASd,KAAI,SAAC2D,GAAD,MAAe,CACtDwI,MAAOxI,EAAS3C,MAChBxB,MAAOmE,EAAS3C,UAEW,WAC3B,IAAMoL,EAActL,EAASkB,QAAO,SAACuB,EAAK0C,GAExC,OADA1C,EAAI0C,EAAEjF,QAAS,EACRuC,IACN,IACIxC,IAAOD,EAAU,UAAUd,KAAI,SAAC2D,GACrC,IAAM1C,EAAS0C,EAAS1C,OACpBoL,EAAcpL,EAIlB,OAHImL,EAAYC,KACdA,GAAe,aAEV,CACLF,MAAOE,EACP7M,MAAO6M,EACPpL,OAAQA,MAde,GAmBNK,kBAAQR,EAAU,WAEnCwL,GAAmB5D,OAAOC,KAAKuD,IAAgBlM,KAAK,SAAAS,GAIxD,OAHc8L,GAAQC,MAAK,SAAAjF,GACzB,OAAOA,EAAE4E,MAAMM,gBAAgBhM,EAAEgM,eAAiBlF,EAAE/H,MAAM,GAAGN,SAAS,QAE3DM,SACZkN,OAEY,SAASC,GAAT,GAAkC,IAAV3L,EAAS,EAATA,MAAS,EACI4L,oBAAS,GADb,mBACvCC,EADuC,KACpBC,EADoB,KAExCC,EAAsBxE,uBAAY,WACtCuE,GAAqB,SAACE,GAAD,OAAQA,OAC5B,IAJ2C,EAKhBJ,mBAAS,UALO,gCAMhBA,mBAAS,KANO,mBAMvCK,EANuC,KAM9BC,EAN8B,OAOdN,mBAAS,IAPK,mBAOvCO,EAPuC,KAO7BC,EAP6B,KAStC7F,EAAMiB,YAAe,CAAC,cAAe,aAArCjB,EAEF8F,EAAWC,IAAWC,UAAUC,QAAQC,KAExCC,EAAmB,CACvB,CACEvB,MAAO5E,EAAE,yBACT/H,MAAO,gBAET,CACE2M,MAAO5E,EAAE,yBACT/H,MAAO,iBAILmO,EAAe,CACnB,CACExB,MAAO5E,EAAE,oBACT/H,MAAO,UAET,CACE2M,MAAO5E,EAAE,oBACT/H,MAAO,WAET,CACE2M,MAAO5E,EAAE,+BACT/H,MAAO,kBAET,CACE2M,MAAO5E,EAAE,qCACT/H,MAAO,eAvCmC,GA4CnC+H,EAAE,mBASYqG,YAAc,CAAEC,aAAa,KArDR,mBAqDvCC,EArDuC,KAqDhCnH,EArDgC,KAqDhCA,MArDgC,EAsDAiH,YAAc,CAC1DC,aAAa,IAvD+B,mBAsDvCE,EAtDuC,KAsDlBhG,EAtDkB,KAsD1BnB,OAtD0B,EA0DZgG,mBAAS,MA1DG,mBA0DvCoB,GA1DuC,KA0D5BC,GA1D4B,QA2DlBrB,mBAAS,IA3DS,qBA2DvCsB,GA3DuC,MA2D/BC,GA3D+B,SA4DVvB,mBAASrM,GA5DC,qBA4DvC6N,GA5DuC,MA4D3BC,GA5D2B,MA6DxCC,GAAenE,mBAAQ,kBAAM+D,GAAOlO,KAAI,SAACuO,GAAD,OAAOA,EAAEpC,WAAQ,CAAC+B,KAE1D/F,GAAUgC,mBAAQ,WACtB,IAAMqE,EAAe,GACfC,EAAeP,GAAOlO,KAAI,SAACuO,GAAD,OAAOA,EAAE/O,SA6CzC,OA5CAkJ,OAAOC,KAAKtH,GAASqN,SAAQ,SAACC,GAC5B,IAAIC,GAAO,EAoBX,GAlBIA,GAAsB,OAAdZ,KAERY,EADgB,iBAAdZ,GACK3M,EAAQsN,GAAQE,MAAK,SAACrD,GAC3B,MAAkB,iBAAdwC,IACwB,SAAnBxC,EAAM9F,YAKVrE,EAAQsN,GAAQG,OAAM,SAACtD,GAC5B,MAAkB,iBAAdwC,IACwB,UAAnBxC,EAAM9F,aAOjBkJ,GAAQH,EAAarP,OAAS,EAAG,CACnC,IAAM2P,EAAa1N,EAAQsN,GAAQ3O,KAAI,SAACY,GAAD,OAAOA,EAAEkF,YAChD8I,EAAOH,EAAaI,MAAK,SAAC/I,GACxB,MAAiB,WAAbA,GAAsC,YAAbA,EACpBiJ,EAAWD,OAAM,SAACE,GAAD,OAAkBA,IAAiBlJ,MAEpB,IAAlCiJ,EAAWE,QAAQnJ,MAI1B8I,IACFA,EAAOvN,EAAQsN,GAAQG,OAAM,SAACrO,GAC5B,OACEA,EAAEC,MAAQ0N,GAAW,GAAGc,eACxBzO,EAAEC,MAAQ0N,GAAW,GAAGc,kBAKzBN,IACHJ,EAAaG,IAAU,MAGpBH,IACN,CAACR,GAAWE,GAAQE,KAEjBnG,GAAWkC,mBAAQ,WACvB,IAAMgF,EAAc,GACdC,EAAiB,GAavB,OAZAnC,EAAQyB,SAAQ,SAACzO,GACVA,EAAKgB,OAGRmO,EAAenP,EAAKgB,SAAU,EAF9BkO,EAAYlP,EAAKT,QAAS,KAK9BsB,EACGY,QAAO,SAACuE,GAAD,OAAOmJ,EAAenJ,EAAEhF,WAC/ByN,SAAQ,SAACzO,GACRkP,EAAYlP,EAAKe,QAAS,KAEvBmO,IACN,CAAClC,IAEEoC,GAAkBlF,mBAAQ,WAC9B,IAAMmF,EAAS,eAAQrH,IACjBsH,EAAc7G,OAAOC,KAAKR,IAC5BoH,EAAYnQ,OAAS,GACRhB,IAAWsK,OAAOC,KAAKtH,GAAUkO,GACzCb,SAAQ,SAAC7I,GACdyJ,EAAUzJ,IAAO,KAGrB,OAAOyJ,IACN,CAACrH,GAAUE,KAERE,GAAeE,uBAAY,SAACvH,GAChCkM,GAAW,SAACD,GACV,IAAMuC,EAAavC,EAAQvL,QAAO,SAACzB,GAAD,OAAUA,EAAKT,QAAUwB,KAC3D,OAAIiM,EAAQ7N,SAAWoQ,EAAWpQ,OACzB6N,EAAQwC,OAAO,CAAEtD,MAAOnL,EAAOxB,MAAOwB,IAExCwO,OAER,IAEGE,GAAsBvF,mBAAQ,WAClC,IAAMwF,EAAgB5O,IACpBkM,EACGvL,QAAO,SAACuE,GAAD,OAAOA,EAAEhF,UAChBe,QACC,SAACuB,EAAK0C,GAAN,OACE1C,EAAIkM,OACFvD,GAAejG,EAAEhF,QAAQjB,KAAI,SAACiG,GAAD,MAAQ,CACnCzG,MAAOyG,EAAEjF,MACTmL,MAAOlG,EAAEjF,aAGf,IAEDyO,OAAOxC,EAAQvL,QAAO,SAACuE,GAAD,OAAQA,EAAEhF,WACnC,SAEF,OAAO+K,IAAO2D,GAAe,SAAC1P,GAAD,yBAAUoB,EAAQpB,EAAKT,cAAvB,iBAAU,EAAsB,UAAhC,aAAU,EAA0BkB,UAChE,CAACuM,IAEE2C,GAAezF,mBAAQ,WAC3B,OAAOrJ,EACJY,QAAO,SAACuE,GAAD,OAAOA,EAAErC,UAAY,IAAMqC,EAAErC,UAAY,OAChDqI,YACF,IAEG4D,GAAgB1F,mBAAQ,WAC5B,OAAOrJ,EAASY,QAAO,SAACuE,GAAD,QAASA,EAAErC,UAAY,IAAMqC,EAAErC,UAAY,UACjE,IAEGkM,GAAkB/H,EAAe8H,GAAczQ,OAC/C2Q,IAAkBhI,EA7ND,IA6NoC6H,GAAaxQ,OAElE4Q,GAAmBF,GAAkB,GAAK,GAAK,GAC/CG,GACJlI,EAhO2B,IAiOvBA,EAAe,GAjOQ,IAmOvBmI,GAAiBD,GAAmB,EAEpC7H,GAAoB+B,mBAAQ,WAChC,IAAMrB,GAAcf,EAAekI,IAAoB,EAEvD,OAAOnP,EAASkB,QAAO,SAACuB,EAAKI,GAC3B,IAEI+D,EAAIC,EAAIH,EAAIC,EAAI0B,EAASC,EAASC,EAASC,EAE/C,GAJe3F,EAASC,UAAY,IAAMD,EAASC,UAAY,IAInD,CACV,IAAM4F,EAAQhI,KAAK2O,IAAI,IAAMxM,EAASC,UAChC3E,EAAQ2Q,GAAaX,QAAQtL,GACnCgE,EAAqC,GAA9BsI,GAAmB,EAAI,KAC9BxI,GACIwI,GAAmB,EACrBhR,EAAQ8Q,GACRA,GAAiB,EACjBjH,EAtPe,GAyPjBtB,GACGhG,KAAK4O,IAAK5O,KAAKyC,GAAK,IAAOuF,IAC3B0G,GAAiB,IACjBvM,EAASC,SAAW,IAAM,GAAK,GAClC8D,GAAMlG,KAAK6O,IAAK7O,KAAKyC,GAAK,IAAOuF,IAAU0G,GAAiB,GAE5D9G,GACG5H,KAAK4O,IAAK5O,KAAKyC,GAAK,IAAOuF,IAC3B0G,GAlQkB,KAmQlBvM,EAASC,SAAW,IAAM,GAAK,GAClCuF,GACG3H,KAAK6O,IAAK7O,KAAKyC,GAAK,IAAOuF,IAC3B0G,GAtQkB,QAuQhB,CACL,IAAMjR,EAAQ4Q,GAAcZ,QAAQtL,GACpCgE,EAAKsI,GAAmB,EAAI,IAAM,EAClCxI,GACIwI,GAAmB,EACrBhR,EAAQ6Q,GACRA,GAAkB,EAClBhH,EAEF,IAAMU,EAAQhI,KAAK2O,IAAIxM,EAASC,UAEhC4D,GACGhG,KAAK4O,IAAK5O,KAAKyC,GAAK,IAAOuF,IAC3B0G,GAAiB,IACjBvM,EAASC,SAAW,GAAK,EAAI,GAChC8D,EAAKlG,KAAK6O,IAAK7O,KAAKyC,GAAK,IAAOuF,IAAU0G,GAAiB,GAE3D9G,GACG5H,KAAK4O,IAAK5O,KAAKyC,GAAK,IAAOuF,IAC3B0G,GA1RkB,KA2RlBvM,EAASC,SAAW,GAAK,EAAI,GAChCuF,EACE3H,KAAK6O,IAAK7O,KAAKyC,GAAK,IAAOuF,IAC1B0G,GA9RkB,IA+SvB,OAdA7G,GAAW3B,EAAKC,GAAM,EACtB2B,EAAU7B,EAEVlE,EAAII,EAAS3C,OAAS,CACpB0G,KACAF,KACAG,KACAF,KACA0B,UACAC,UACAC,UACAC,WAGK/F,IACN,MACF,CACDwE,EACAkI,GACAL,GACAG,GACAG,GACAL,GACAC,KAGF,OACE,6BACE,kBAACQ,EAAA,EAAD,CACEC,KAAM1D,EACN2D,KAAMnD,EACNoD,mBAAoB1D,IAEtB,yBAAKlP,UAAU,uBACb,kBAAC6S,EAAA,EAAD,CAAU7S,UAAU,YAAYD,MAAO,CAAE+S,WAAY,YACrD,kBAACC,EAAA,EAAD,CAAW5P,MAAOA,EAAOpD,MAAO,CAAE+S,WAAY,YA2B9C,kBAACE,EAAA,EAAD,CACEjT,MAAO,CAAE+S,WAAY,WACrBG,cAAe,SAACC,GACd,IAAIC,EAAOD,EAAW/Q,KAAI,SAAAS,GAEtB,OAAOA,EAAEjB,MAAMQ,KAAI,SAAAmB,GAAE,OACnBL,EAAS0L,MAAK,SAAAyE,GAAE,OAAEA,EAAG9P,KAAKA,WAOhC6P,GAFAA,GADAA,EAAOA,EAAKtE,QACAhL,QAAO,SAAAjB,GAAC,OAAEA,MAEVT,KAAI,SAAAS,GAAC,MAAG,CAAC0L,MAAM1L,EAAEO,MAAOxB,MAAMiB,EAAEO,UAC5CkM,EAAW8D,GACX5D,EAAY2D,IAEdG,gBAAiB/D,EACjBgE,aAAcrQ,EAASd,KAAI,SAAAS,GAAC,OAAEA,EAAEU,MAChCmL,iBAAkBA,GAClB8E,iBAAkB,CAAC,QAAQ,YAG7B,kBAACC,EAAA,EAAD,CACEzT,MAAO,CAAE+S,WAAY,UACrB9D,kBAAmBA,EACnByE,UAAWvE,IAEb,kBAACwE,EAAA,EAAD,CACE3T,MAAO,CACL+S,WAAY,aAIlB,yBAAK9S,UAAU,oBACb,yBACEA,UAAU,oEACVD,MAAO,CACL4T,SAAU,aAGZ,yBAAK3T,UAAU,gDACb,yBAAKA,UAAU,kBACb,6BACE,6BAAM0J,EAAE,6BACR,4BACEzJ,QAAS,WAEPoP,EAAW,IACXE,EAAY,IAEZe,GAAU,IACVF,GAAa,QAPjB,WAeH2B,GAAa5P,KAAI,SAAC2D,EAAU/C,GAC3B,OACE,yBACE9C,QAAS,kBAAMuK,GAAa1E,EAAS3C,QACrCnD,UAAS,yBACPoK,GAAStE,EAAS3C,OACd,0BACAmH,GAAQxE,EAAS3C,OACjB,yBACA,IAENpD,MAAO,CACLgJ,OAAO,GAAD,OAAKmJ,GAAL,MACN0B,WAAW,GAAD,OAAK1B,GAAL,OAEZlK,IAAKjF,GAEJ+C,EAAS3C,WAKlB,yBAAKnD,UAAU,2BAA2BiQ,IAAKC,GAC5ChG,GACC,kBAACD,EAAD,CACEC,aAAcA,EACdM,aAAcA,GACdJ,SAAUoH,GACVnH,eAAgBD,GAChBE,QAASA,GACTH,WAAYA,GACZlH,SAAUA,EACVsH,kBAAmBA,GACnBzD,OAAQuL,MAId,yBAAKrS,UAAU,sCACZgS,GAAc7P,KAAI,SAAC2D,EAAU/C,GAC5B,OACE,yBACEhD,MAAO,CACL6T,WAAW,GAAD,OAAK3B,GAAL,MACVlJ,OAAO,GAAD,OAAKkJ,GAAL,MACN9I,SAAS,GAAD,OAAKgJ,GAAL,OAEVlS,QAAS,kBAAMuK,GAAa1E,EAAS3C,QACrCnD,UAAS,yBACPoK,GAAStE,EAAS3C,OACd,0BACAmH,GAAQxE,EAAS3C,OACjB,yBACA,IAEN6E,IAAKjF,GAEJ+C,EAAS3C,YAMpB,yBAAKnD,UAAU,0BACb,kBAAC6T,EAAA,EAAD,CACE1Q,MAAM,YACN2Q,QAASjE,EACTlO,MAAOwO,GACP4D,YAAY,EACZC,SAAU,SAACC,GAEP7D,GADE6D,EACWA,EAAE3F,MAEF,OAGjBvO,MAAO,CACL+S,WAAY,SACZoB,UAAW,YAGf,kBAACL,EAAA,EAAD,CACE1Q,MAAM,SACNgR,UAAQ,EACRL,QAAShE,EACTnO,MAAO8O,GACPsD,YAAY,EACZC,SAAU,SAACtD,GACTJ,GAAUI,IAEZ3Q,MAAO,CACL+S,WAAY,SACZoB,UAAW,YAGf,kBAACE,EAAA,EAAD,CACErU,MAAO,CAAE+S,WAAY,UACrBnQ,OAAQ4N,GACR8D,OAAQ,SAACC,GACP9D,GAAc8D,QAKrBlF,EAAQ7N,OAAS,GAChB,yBAAKvB,UAAU,6BAA6BiQ,IAAKA,GAC/C,4BAAKvG,EAAE,4BACNZ,GACC+I,GAAoB1P,KAAI,SAACC,GAAD,eACtB,kBAAC,GAAD,CACE6B,KAAMF,EAAmB3B,EAAKT,OAC9BkB,KAAI,UAAEkB,EAAmB3B,EAAKT,cAA1B,iBAAE,EAAiC,UAAnC,aAAE,EAAqCkB,KAC3CM,MAAOf,EAAKT,MACZmH,MAAOA,EACPd,IAAK5F,EAAKT,MACV6I,aAAcA,Y,iCCjjB9B,gFAMA,SAAS+J,EAAW3R,GAClB,OAAOA,EAAEmK,OAGX,SAASyH,EAAW5R,GAClB,OAAOA,EAAEoK,OAGX,SAASJ,EAAK6H,GACZ,IAAI1H,EAASwH,EACTvH,EAASwH,EACTjP,EAAImP,IACJ5R,EAAI6R,IACJC,EAAU,KAEd,SAAShI,IACP,IAAIiI,EAAQC,EAAOC,IAAMC,KAAKC,WAAYvE,EAAI3D,EAAOmI,MAAMC,KAAML,GAAOpL,EAAIsD,EAAOkI,MAAMC,KAAML,GAG/F,GAFKF,IAASA,EAAUC,EAASO,eACjCX,EAAMG,GAAUrP,EAAE2P,MAAMC,MAAOL,EAAK,GAAKpE,EAAGoE,KAAShS,EAAEoS,MAAMC,KAAML,IAAQvP,EAAE2P,MAAMC,MAAOL,EAAK,GAAKpL,EAAGoL,KAAShS,EAAEoS,MAAMC,KAAML,IAC1HD,EAAQ,OAAOD,EAAU,KAAMC,EAAS,IAAM,KAuBpD,OApBAjI,EAAKG,OAAS,SAASsI,GACrB,OAAOJ,UAAU1T,QAAUwL,EAASsI,EAAGzI,GAAQG,GAGjDH,EAAKI,OAAS,SAASqI,GACrB,OAAOJ,UAAU1T,QAAUyL,EAASqI,EAAGzI,GAAQI,GAGjDJ,EAAKrH,EAAI,SAAS8P,GAChB,OAAOJ,UAAU1T,QAAUgE,EAAiB,oBAAN8P,EAAmBA,EAAIC,aAAUD,GAAIzI,GAAQrH,GAGrFqH,EAAK9J,EAAI,SAASuS,GAChB,OAAOJ,UAAU1T,QAAUuB,EAAiB,oBAANuS,EAAmBA,EAAIC,aAAUD,GAAIzI,GAAQ9J,GAGrF8J,EAAKgI,QAAU,SAASS,GACtB,OAAOJ,UAAU1T,QAAWqT,EAAe,MAALS,EAAY,KAAOA,EAAIzI,GAAQgI,GAGhEhI,EAQT,SAAS2I,EAAcX,EAASY,EAAIC,EAAI5L,EAAIF,GAC1CiL,EAAQc,OAAOF,EAAIC,GACnBb,EAAQe,cAAcH,EAAIC,GAAMA,EAAK9L,GAAM,EAAGE,EAAI4L,EAAI5L,EAAIF,GAgBrD,SAASkD,IACd,OAAOD,EAAK2I,K,iCC3EC,aAAShQ,EAAGzC,GACzB,MAAO,EAAEA,GAAKA,GAAKa,KAAK6O,IAAIjN,GAAK5B,KAAKyC,GAAK,GAAItD,EAAIa,KAAK4O,IAAIhN,M,oBCD9D,IAAIqQ,EAAkBzV,EAAQ,KAC1B0V,EAAa1V,EAAQ,KACrB2V,EAAe3V,EAAQ,IAwC3BO,EAAOC,QAVP,SAAmBoV,EAAQ7U,GACzB,IAAIM,EAAS,GAMb,OALAN,EAAW4U,EAAa5U,EAAU,GAElC2U,EAAWE,GAAQ,SAASpU,EAAOqG,EAAK+N,GACtCH,EAAgBpU,EAAQwG,EAAK9G,EAASS,EAAOqG,EAAK+N,OAE7CvU","file":"static/js/4.82348480.chunk.js","sourcesContent":["import React from 'react'\nimport './MiniInfoBox.css'\n\nexport default function MiniInfoBox({ children, onClose, style }) {\n  return (\n    <div className=\"MiniInfoBox\" style={style}>\n      <div className=\"MiniInfoBox-start\">{children}</div>\n      <div className=\"MiniInfoBox-end\" onClick={onClose}>\n        &times;\n      </div>\n    </div>\n  )\n}\n","var baseDifference = require('./_baseDifference'),\n    baseFlatten = require('./_baseFlatten'),\n    baseRest = require('./_baseRest'),\n    isArrayLikeObject = require('./isArrayLikeObject');\n\n/**\n * Creates an array of `array` values not included in the other given arrays\n * using [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)\n * for equality comparisons. The order and references of result values are\n * determined by the first array.\n *\n * **Note:** Unlike `_.pullAll`, this method returns a new array.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Array\n * @param {Array} array The array to inspect.\n * @param {...Array} [values] The values to exclude.\n * @returns {Array} Returns the new array of filtered values.\n * @see _.without, _.xor\n * @example\n *\n * _.difference([2, 1], [2, 3]);\n * // => [1]\n */\nvar difference = baseRest(function(array, values) {\n  return isArrayLikeObject(array)\n    ? baseDifference(array, baseFlatten(values, 1, isArrayLikeObject, true))\n    : [];\n});\n\nmodule.exports = difference;\n","var SetCache = require('./_SetCache'),\n    arrayIncludes = require('./_arrayIncludes'),\n    arrayIncludesWith = require('./_arrayIncludesWith'),\n    arrayMap = require('./_arrayMap'),\n    baseUnary = require('./_baseUnary'),\n    cacheHas = require('./_cacheHas');\n\n/** Used as the size to enable large array optimizations. */\nvar LARGE_ARRAY_SIZE = 200;\n\n/**\n * The base implementation of methods like `_.difference` without support\n * for excluding multiple arrays or iteratee shorthands.\n *\n * @private\n * @param {Array} array The array to inspect.\n * @param {Array} values The values to exclude.\n * @param {Function} [iteratee] The iteratee invoked per element.\n * @param {Function} [comparator] The comparator invoked per element.\n * @returns {Array} Returns the new array of filtered values.\n */\nfunction baseDifference(array, values, iteratee, comparator) {\n  var index = -1,\n      includes = arrayIncludes,\n      isCommon = true,\n      length = array.length,\n      result = [],\n      valuesLength = values.length;\n\n  if (!length) {\n    return result;\n  }\n  if (iteratee) {\n    values = arrayMap(values, baseUnary(iteratee));\n  }\n  if (comparator) {\n    includes = arrayIncludesWith;\n    isCommon = false;\n  }\n  else if (values.length >= LARGE_ARRAY_SIZE) {\n    includes = cacheHas;\n    isCommon = false;\n    values = new SetCache(values);\n  }\n  outer:\n  while (++index < length) {\n    var value = array[index],\n        computed = iteratee == null ? value : iteratee(value);\n\n    value = (comparator || value !== 0) ? value : 0;\n    if (isCommon && computed === computed) {\n      var valuesIndex = valuesLength;\n      while (valuesIndex--) {\n        if (values[valuesIndex] === computed) {\n          continue outer;\n        }\n      }\n      result.push(value);\n    }\n    else if (!includes(values, computed, comparator)) {\n      result.push(value);\n    }\n  }\n  return result;\n}\n\nmodule.exports = baseDifference;\n","var isArrayLike = require('./isArrayLike'),\n    isObjectLike = require('./isObjectLike');\n\n/**\n * This method is like `_.isArrayLike` except that it also checks if `value`\n * is an object.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an array-like object,\n *  else `false`.\n * @example\n *\n * _.isArrayLikeObject([1, 2, 3]);\n * // => true\n *\n * _.isArrayLikeObject(document.body.children);\n * // => true\n *\n * _.isArrayLikeObject('abc');\n * // => false\n *\n * _.isArrayLikeObject(_.noop);\n * // => false\n */\nfunction isArrayLikeObject(value) {\n  return isObjectLike(value) && isArrayLike(value);\n}\n\nmodule.exports = isArrayLikeObject;\n","import realismoData from './data/realismo.json'\nimport groupBy from 'lodash/groupBy'\nimport uniqBy from 'lodash/uniqBy'\nimport { scaleOrdinal } from 'd3-scale'\nimport range from 'lodash/range'\nimport find from 'lodash/find'\nimport mapValues from 'lodash/mapValues'\nimport { extent } from 'd3-array'\nimport { sortBy } from 'lodash'\n\nconst realismoDataNormalized = realismoData.map((item) => ({\n  ...item,\n  startNorm: +item.start / item.length,\n  endNorm: +item.end / item.length,\n  locationNorm: +item['occurrence_location'] / +item.length,\n}))\n\nexport const yearsExtent = extent(realismoData, (d) => +d.year).map(\n  (y,i) => new Date(y, 0)\n)\n\nexport const racconti = uniqBy(realismoData, 'title').map((item) => ({\n  title: item.title,\n  length: item.length,\n  year: +item.year,\n  volume: item.volume_primo,\n  id: item.fonte_id\n}))\n\nexport const dataset = groupBy(realismoDataNormalized, 'title')\n\nconst maxLength = Math.max(\n  ...realismoData.map((d) => +d.length).filter(Boolean)\n)\nexport const detailWormsCircles = mapValues(dataset, (data) => {\n  // Fill the pie\n  const dataFilled = data.reduce((filledWithCream, calv0, i) => {\n    if (i === 0) {\n      // We are about to start\n      if (+calv0.start > 0) {\n        // The first piece of our story start from n0000where\n        // filled the start\n        filledWithCream.push({\n          ...calv0,\n          level: 0,\n          occurrence_location: 0,\n          start: 0,\n          end: Number(calv0.start) - 1,\n          ghost: true,\n        })\n      }\n    } else {\n      // Rewind back 2 prev\n      const prevCalvix = data[i - 1]\n      if (calv0.start > Number(prevCalvix.end) + 1) {\n        filledWithCream.push({\n          ...calv0,\n          level: 0,\n          occurrence_location: Number(prevCalvix.end) + 1,\n          start: Number(prevCalvix.end) + 1,\n          end: Number(calv0.start) - 1,\n          ghost: true,\n        })\n      }\n    }\n    // Add item\n    filledWithCream.push(calv0)\n    return filledWithCream\n  }, [])\n  if (dataFilled.length > 0) {\n    const lastData = dataFilled[dataFilled.length - 1]\n    if (lastData.end < lastData.length) {\n      dataFilled.push({\n        ...lastData,\n        level: 0,\n        occurrence_location: lastData.end + 1,\n        start: lastData.end + 1,\n        end: lastData.length,\n        ghost: true,\n      })\n    }\n  }\n\n  return dataFilled.map((item) => ({\n    ...item,\n    startTotalNorm: +item.start / maxLength,\n    endTotalNorm: +item.end / maxLength,\n    locationTotalNorm: +item['occurrence_location'] / maxLength,\n    lengthTotalNorm: +item.length / maxLength,\n  }))\n})\n\nfunction intersectionCircleItem(item, startNorm, endNorm) {\n  if (endNorm < item.startNorm) {\n    return 0\n  }\n  if (startNorm > item.endNorm) {\n    return 0\n  }\n  const diffStart = Math.max(0, item.startNorm - startNorm)\n  const diffEnd = Math.max(0, endNorm - item.endNorm)\n\n  return endNorm - startNorm - diffStart - diffEnd\n}\n\nexport function datasetToCircles(n) {\n  return mapValues(dataset, (data) => {\n    const circleWidth = 1 / n\n\n    const circles = range(n).reduce((acc, item, i) => {\n      const startNorm = i * circleWidth\n      const endNorm = (i + 1) * circleWidth\n      let interectionItems = sortBy(data, (item) =>\n        intersectionCircleItem(item, startNorm, endNorm)\n      ).reverse()\n      let out\n      if (\n        interectionItems.length > 0 &&\n        intersectionCircleItem(interectionItems[0], startNorm, endNorm) > 0\n      ) {\n        out = interectionItems[0]\n      } else {\n        out = {}\n      }\n      let place = false\n      if (\n        out.occurrence &&\n        out.locationNorm >= startNorm &&\n        out.locationNorm <= endNorm\n      ) {\n        place = true\n      }\n      acc.push({ ...out, place })\n      return acc\n    }, [])\n\n    return circles\n  })\n}\n\nexport const colorScale = scaleOrdinal()\n  .range(['#ffc33e', '#00c97c', '#4a4aff'])\n  .domain(['indoor', 'outdoor', 'transportation'])\n  .unknown(['#ccc'])\n\nconst GAP_SIZE = 1\nexport const LEGEND_SIZE = 10\n\nfunction calculateDegs() {\n  const uniqueYears = uniqBy(racconti, (item) => item.year)\n    .map((x) => x.year)\n    .sort()\n\n  const numGaps = uniqueYears.reduce((acc, year, i) => {\n    if (i > 0) {\n      return acc + year - uniqueYears[i - 1]\n    }\n    return acc\n  }, 0)\n  const unitDeg = (360 - LEGEND_SIZE - numGaps * GAP_SIZE) / racconti.length\n\n  let lastRotation = LEGEND_SIZE / 2 + unitDeg / 2\n  const raccontiDegs = racconti.map((racconto, i) => {\n    if (i > 0) {\n      lastRotation =\n        lastRotation +\n        unitDeg +\n        (racconto.year - racconti[i - 1].year) * GAP_SIZE\n    }\n    return {\n      ...racconto,\n      rotation: lastRotation - 90,\n    }\n  })\n\n  const byYear = groupBy(raccontiDegs, 'year')\n  const yearsArcs = uniqueYears.map((year) => {\n    const data = byYear[year]\n    const startAngleDeg = data[0].rotation + 90 - unitDeg / 2\n    const startAngle = (startAngleDeg / 360) * (2 * Math.PI)\n\n    const endAngle =\n      ((data[data.length - 1].rotation + 90 + unitDeg / 2) / 360) *\n      (2 * Math.PI)\n\n    return {\n      startAngle,\n      angleLabel: startAngleDeg + unitDeg - 90 + unitDeg / 2,\n      endAngle,\n      year,\n    }\n  })\n\n  return { raccontiDegs, yearsArcs }\n}\n\nexport const { raccontiDegs, yearsArcs } = calculateDegs()\n","import React, { useCallback } from \"react\"\nimport { colorScale, yearsArcs } from \"./utils\"\nimport { scaleLinear } from \"d3-scale\"\nimport { arc } from \"d3\"\nimport { useTranslation } from \"react-i18next\"\n\nconst LABEL_VISIBLE_SIZE = 0\nconst LABEL_SIZE_PERCENT = 0\nconst WORM_SIZE_PERCENT = 0.55\nconst LABEL_PADDING = 10\nconst INNER_CIRCLE_PADDING = 10\nconst INNER_CIRCLE_STROKE_WIDTH = 5\nconst LEGEND_TEXT_MARGIN = 3\n\nconst arcGenerator = arc()\n\nconst Worm = React.memo(\n  ({\n    racconto,\n    circles,\n    radius,\n    labelSize,\n    wormSize,\n    onClick,\n    isSelected,\n    isOmitted,\n    size,\n    flipText = false,\n  }) => {\n    const wormStart = radius - labelSize - wormSize - LABEL_PADDING\n    const wormEnd = radius - labelSize\n\n    const circleRadius = wormSize / circles.length / 2\n\n    //var for animations delays\n    const animationDelays = circles.reduce((acc, item) => {\n      if (!acc[item.occurrence_location]) {\n        acc[item.occurrence_location] = 1\n      }\n      acc[item.occurrence_location] += 1\n      return acc\n    }, {})\n\n    const animationGroups = {}\n\n    return (\n      <g\n        style={\n          {\n            // opacity: isSelected ? 1 : 0.3,\n          }\n        }\n      >\n        <title>{racconto.title}</title>\n        <g\n          onClick={() => {\n            if (!isOmitted) {\n              onClick(racconto)\n            }\n          }}\n          style={{\n            cursor: isOmitted ? undefined : \"pointer\",\n          }}\n        >\n          {circles.map((circle, i) => {\n            const cx = wormStart + i * circleRadius * 2 + circleRadius\n            const cy = 0\n\n            if (circle.movement === \"TRUE\") {\n              animationGroups[circle.occurrence_location] =\n                animationGroups[circle.occurrence_location] === undefined\n                  ? 0\n                  : animationGroups[circle.occurrence_location] + 1\n            }\n\n            const delay =\n              circle.direction === \"forward\"\n                ? animationGroups[circle.occurrence_location] * 0.2\n                : (animationDelays[circle.occurrence_location] -\n                    animationGroups[circle.occurrence_location]) *\n                  0.2\n\n            return (\n              <g key={i}>\n                <circle\n                  className={`${\n                    circle.movement === \"TRUE\" && !isOmitted ? \"movement\" : \"\"\n                  } fill-realismo-circle-${circle.category ?? \"unknown\"}`}\n                  style={{\n                    // fill: colorScale(circle.category),\n                    transformOrigin: `${cx}px ${cy}px`,\n                    animationDelay: `${delay}s`,\n                  }}\n                  r={isOmitted ? circleRadius * 0.5 : circleRadius * 1.5}\n                  cy={cy}\n                  cx={cx}\n                ></circle>\n                {circle.place && (\n                  <circle\n                    style={{ fill: \"#000\" }}\n                    r={circleRadius / 3}\n                    cy={cy}\n                    cx={cx}\n                  ></circle>\n                )}\n              </g>\n            )\n          })}\n        </g>\n      </g>\n    )\n  }\n)\n\nconst WormLabel = React.memo(\n  ({\n    racconto,\n    circles,\n    radius,\n    labelSize,\n    wormSize,\n    onClick,\n    isSelected,\n    isOmitted,\n    size,\n    flipText = false,\n  }) => {\n    const wormStart = radius - labelSize - wormSize - LABEL_PADDING\n    const wormEnd = radius - labelSize\n\n    const circleRadius = wormSize / circles.length / 2\n    const flipTextStyle = flipText\n      ? {\n          transform: \"rotate(180deg)\",\n          transformOrigin: `${wormEnd}px 0px`,\n        }\n      : undefined\n\n    return (\n      <g\n        className={`worm-label-container${flipText ? \"-flipped\" : \"\"}`}\n        style={{\n          opacity: isSelected ? 1 : 0.3,\n        }}\n      >\n        <g style={flipTextStyle}>\n          <text\n            style={{ alignmentBaseline: \"middle\" }}\n            x={wormEnd - (flipText ? LABEL_VISIBLE_SIZE : 0)}\n          >\n            {racconto.title}\n          </text>\n        </g>\n        <g>\n          {!flipText && (\n            <rect\n              className=\"worm-label-gradient-rect\"\n              x={wormEnd + LABEL_VISIBLE_SIZE}\n              y={-7}\n              width={size / 2 - wormSize}\n              height={14}\n              fill=\"url(#label-gradient)\"\n            />\n          )}\n          {flipText && (\n            <rect\n              className=\"worm-label-gradient-rect\"\n              x={30}\n              y={-7}\n              width={wormEnd}\n              height={14}\n              fill=\"url(#label-gradient-flip)\"\n            />\n          )}\n        </g>\n      </g>\n    )\n  }\n)\n\nconst CicrleYears = React.memo(({ x, y, radius, radiusStrokeSize }) => {\n  return (\n    <g transform={`translate(${x}, ${y})`}>\n      {yearsArcs.map((yearArc) => {\n        const flipText = yearArc.angleLabel >= 90 && yearArc.angleLabel <= 270\n        const textX = radius - radiusStrokeSize\n        return (\n          <g key={yearArc.year}>\n            <g style={{ transform: `rotate(${yearArc.angleLabel}deg)` }}>\n              <g\n                style={{\n                  transformOrigin: `${textX}px -3px`,\n                  transform: flipText ? \"rotate(180deg)\" : undefined,\n                  fontSize: 9,\n                }}\n              >\n                <text textAnchor={flipText ? \"start\" : \"end\"} x={textX} y={0}>\n                  {yearArc.year}\n                </text>\n              </g>\n            </g>\n            <path\n              style={{ fill: \"#ddd\" }}\n              d={arcGenerator({\n                ...yearArc,\n                outerRadius: radius - radiusStrokeSize / 2,\n                innerRadius: radius + radiusStrokeSize / 2,\n              })}\n            />\n          </g>\n        )\n      })}\n    </g>\n  )\n})\n\nconst Legend = React.memo(\n  ({ labelSize, x, wormSize, endLineStart, endLineEnd, t }) => {\n    return (\n      <g>\n        <line\n          y1={0}\n          y2={labelSize}\n          x1={x}\n          x2={x}\n          stroke=\"black\"\n          strokeWidth={2}\n        />\n        {/* <text\n          x={x}\n          y={labelSize - LEGEND_TEXT_MARGIN}\n          className=\"realismo-legend-text\"\n          style={{\n            transformOrigin: `${x}px ${labelSize}px`,\n            transform: 'rotate(270deg)',\n          }}\n        >\n          TITOLO\n        </text> */}\n        <line\n          y1={labelSize + LABEL_PADDING}\n          y2={labelSize + LABEL_PADDING + wormSize}\n          x1={x}\n          x2={x}\n          stroke=\"black\"\n          strokeWidth={2}\n        />\n        <text\n          x={x}\n          y={labelSize + LABEL_PADDING - LEGEND_TEXT_MARGIN}\n          className=\"realismo-legend-text text-uppercase\"\n          textAnchor={\"end\"}\n          style={{\n            transformOrigin: `${x}px ${labelSize + LABEL_PADDING}px`,\n            transform: \"rotate(270deg)\",\n          }}\n        >\n          {t(\"fine\")}\n        </text>\n        <text\n          x={x}\n          y={labelSize + LABEL_PADDING + wormSize - LEGEND_TEXT_MARGIN}\n          className=\"realismo-legend-text\"\n          textAnchor={\"start\"}\n          style={{\n            transformOrigin: `${x}px ${labelSize + LABEL_PADDING + wormSize}px`,\n            transform: \"rotate(270deg)\",\n          }}\n        >\n          {t(\"INIZIO DEL TESTO\")}\n        </text>\n\n        <line\n          y1={endLineStart}\n          y2={endLineEnd}\n          x1={x}\n          x2={x}\n          stroke=\"black\"\n          strokeWidth={2}\n        />\n        <g\n          style={{\n            transform: `translate(${x - 14}px, ${endLineEnd}px) rotate(270deg)`,\n          }}\n        >\n          <text\n            x={0}\n            y={0}\n            className=\"realismo-legend-text\"\n            textAnchor={\"start\"}\n          >\n            {t(\"ANNO DI PRIMA\")}\n          </text>\n          <text\n            x={0}\n            y={10}\n            className=\"realismo-legend-text\"\n            textAnchor={\"start\"}\n          >\n            {t(\"PUBBLICAZIONE\")}\n          </text>\n        </g>\n      </g>\n    )\n  }\n)\n\nexport default function CircleWorms({\n  heightCircle,\n  radius,\n  circlesMap,\n  selected,\n  selectedByHand,\n  omitted,\n  racconti,\n  raccontiJoinLines,\n  toggleSelect,\n}) {\n  const size = radius * 2\n  const handleClick = useCallback(\n    (racconto) => {\n      toggleSelect(racconto.title)\n    },\n    [toggleSelect]\n  )\n\n  const { t } = useTranslation(\"realismo\")\n\n  const selectedKeys = Object.keys(selected)\n  const allSelected = selectedKeys.length === 0\n\n  const labelSize = (size / 2) * LABEL_SIZE_PERCENT\n  const wormSize = (size / 2) * WORM_SIZE_PERCENT\n  const innerRadius =\n    size / 2 - labelSize - wormSize - LABEL_PADDING - INNER_CIRCLE_PADDING\n\n  const endLineStart =\n    labelSize +\n    LABEL_PADDING +\n    wormSize +\n    INNER_CIRCLE_PADDING -\n    INNER_CIRCLE_STROKE_WIDTH / 2\n  const endLineEnd = endLineStart + 90\n\n  const paddingTop = (heightCircle - size) / 2\n\n  // 0 - 90\n  return (\n    <svg width={size + 200} height={heightCircle}>\n      <defs>\n        <linearGradient id=\"label-gradient\">\n          <stop offset=\"0%\" stopColor=\"rgba(255, 255, 255, 0)\"></stop>\n          <stop offset=\"10%\" stopColor=\"var(--bg)\"></stop>\n        </linearGradient>\n        <linearGradient id=\"label-gradient-flip\">\n          <stop offset=\"90%\" stopColor=\"var(--bg)\"></stop>\n          <stop offset=\"100%\" stopColor=\"rgba(255, 255, 255, 0)\"></stop>\n        </linearGradient>\n        <filter id=\"brightness\">\n          <feComponentTransfer>\n            <feFuncR type=\"linear\" slope=\"1.2\" />\n            <feFuncG type=\"linear\" slope=\"1.2\" />\n            <feFuncB type=\"linear\" slope=\"1.2\" />\n          </feComponentTransfer>\n        </filter>\n      </defs>\n\n      <g transform={`translate(${size / 2 + 100}, ${size / 2 + paddingTop})`}>\n        {selectedKeys.map((title) => {\n          const {\n            x1,\n            y1,\n            x2,\n            y2,\n            pointAX,\n            pointAY,\n            pointBX,\n            pointBY,\n          } = raccontiJoinLines[title]\n          return (\n            <g key={title}>\n              {/* <line x1={x1} y1={y1} x2={x2} y2={y2} fill=\"red\" stroke=\"red\" />\n              <circle cx={pointAX} cy={pointAY} r={5} fill={'blue'} />\n              <circle cx={pointBX} cy={pointBY} r={5} fill={'purple'} /> */}\n              <path\n                strokeDasharray=\"2\"\n                className={`realismo-label-join ${\n                  selectedByHand[title] ? \"reliasmo-label-join-explicit\" : \"\"\n                }`}\n                fill=\"none\"\n                d={`M ${x1} ${y1} C ${pointAX} ${pointAY}, ${pointBX} ${pointBY}, ${x2} ${y2}`}\n              />\n            </g>\n          )\n        })}\n\n        {/* {racconti.map((racconto, i) => {\n          const angle = racconto.rotation\n          return (\n            <g\n              key={i}\n              className={`worm-label worm-label-${i}`}\n              style={{ transform: `rotate(${angle}deg)` }}\n            >\n              <WormLabel\n                size={size}\n                flipText={angle >= 90 && angle <= 270}\n                isSelected={allSelected || !!selected[racconto.title]}\n                isOmitted={!!omitted[racconto.title]}\n                onClick={handleClick}\n                radius={size / 2}\n                labelSize={(size / 2) * LABEL_SIZE_PERCENT}\n                wormSize={(size / 2) * WORM_SIZE_PERCENT}\n                racconto={racconto}\n                circles={circlesMap[racconto.title]}\n              ></WormLabel>\n            </g>\n          )\n        })} */}\n        {/* <circle cx={0} cy={0} r={size / 2 - labelSize} fill='transparent' /> */}\n        {racconti.map((racconto, i) => {\n          const angle = racconto.rotation\n          return (\n            <g\n              key={i}\n              className={`worm-${i}`}\n              style={{ transform: `rotate(${angle}deg)` }}\n            >\n              <Worm\n                size={size}\n                flipText={angle >= 90 && angle <= 270}\n                isSelected={allSelected || !!selected[racconto.title]}\n                isOmitted={!!omitted[racconto.title]}\n                onClick={handleClick}\n                radius={size / 2}\n                labelSize={(size / 2) * LABEL_SIZE_PERCENT}\n                wormSize={(size / 2) * WORM_SIZE_PERCENT}\n                racconto={racconto}\n                circles={circlesMap[racconto.title]}\n              ></Worm>\n            </g>\n          )\n        })}\n      </g>\n      <g transform={`translate(100, ${paddingTop})`}>\n        <Legend\n          t={t}\n          x={radius}\n          wormSize={wormSize}\n          labelSize={labelSize}\n          endLineStart={endLineStart}\n          endLineEnd={endLineEnd}\n        />\n\n        <CicrleYears\n          x={radius}\n          y={radius}\n          radius={innerRadius}\n          radiusStrokeSize={INNER_CIRCLE_STROKE_WIDTH}\n        />\n      </g>\n    </svg>\n  )\n}\n","import React, { useMemo } from 'react'\nimport { linkVertical } from 'd3-shape'\nimport { colorScale } from './utils'\nimport range from 'lodash/range'\nimport MiniInfoBox from '../../general/MiniInfoBox'\n\nconst CHART_PADDING_X = 80\nconst LEGEND_TEXT_HEIGHT = 150\n\nconst MINI_RADIUS = 20\nconst LOCATION_RADIUS = 2\n\nconst LEVEL_HEIGHT = 40\n\nconst WORM_MARGIN_TOP = 20\n\nconst CHART_MARGIN_LEFT = 100\n\nfunction yScale(level) {\n  return WORM_MARGIN_TOP + LEVEL_HEIGHT * level\n}\n\nfunction makeItemFill(item) {\n  if (item.ghost) {\n    return 'rgba(95, 102, 100, 0.5)'\n  }\n  if (item.movement === 'FALSE') {\n    return item.color\n  }\n  return `url(${makeItemGradientUrl(item)})`\n}\n\nfunction makeItemGradientUrl(item) {\n  let direction = ''\n  if (item.direction === 'forward') {\n    direction = '-forward'\n  } else if (item.direction === 'backward') {\n    direction = '-backward'\n  }\n  return `#worm-detail-${item.category}${direction}`\n}\n\nfunction WormDetail({ data, width: allWidth, title, year, toggleSelect }) {\n  const width = allWidth - CHART_PADDING_X * 2 - CHART_MARGIN_LEFT\n  const dataWorms = useMemo(() => {\n    return data.map((item) => {\n      const x1 =\n        item.startTotalNorm * width + CHART_PADDING_X + CHART_MARGIN_LEFT\n      const x2 = item.endTotalNorm * width + CHART_PADDING_X + CHART_MARGIN_LEFT\n      const xLocation =\n        item.locationTotalNorm * width + CHART_PADDING_X + CHART_MARGIN_LEFT\n      const color = colorScale(item.category)\n      return {\n        ...item,\n        level: +item.level,\n        color,\n        x1,\n        x2,\n        xLocation,\n      }\n    })\n  }, [data, width])\n\n  const maxLevel = 3\n\n  const labalesData = useMemo(() => {\n    let dataForLabels\n    const dataWormsLabeled = dataWorms.filter((d) => d.ghost !== true)\n    if (dataWormsLabeled.length < 13) {\n      dataForLabels = dataWormsLabeled.map((item, i) => {\n        const x = CHART_PADDING_X + CHART_MARGIN_LEFT + i * 60\n        return {\n          ...item,\n          x,\n          y: yScale(maxLevel),\n        }\n      })\n    } else {\n      const mul = width / (dataWormsLabeled.length - 1)\n      dataForLabels = dataWormsLabeled.map((item, i) => {\n        const x = CHART_PADDING_X + CHART_MARGIN_LEFT + i * mul\n        return {\n          ...item,\n          x,\n          y: yScale(maxLevel),\n        }\n      })\n    }\n    const link = linkVertical()\n    return dataForLabels.map((item) => {\n      const linePath = link({\n        source: [item.xLocation, yScale(item.level)],\n        target: [item.x, item.y - 5],\n      })\n      return {\n        ...item,\n        linePath,\n      }\n    })\n  }, [dataWorms, width])\n\n  const levelsData = useMemo(() => {\n    return range(maxLevel).map((level) => {\n      const dataLevelWorms = dataWorms.filter((d) => d.level === level)\n      const hasData = dataLevelWorms.length > 0\n      const dataLabel = labalesData.filter((d) => d.level === level)\n\n      return {\n        level,\n        dataLevelWorms,\n        hasData,\n        dataLabel,\n      }\n    })\n  }, [dataWorms, labalesData])\n\n  const totalLength = data[0]?.length ?? 0\n  let totalLabelX\n  const height = yScale(maxLevel) + LEGEND_TEXT_HEIGHT\n\n  let ghostWorm\n\n  // GHOST (no ambientazione)\n  if (dataWorms.length === 1 && dataWorms[0].occurrence_location === '0') {\n    ghostWorm = {\n      x1: 0 + CHART_PADDING_X + CHART_MARGIN_LEFT,\n      x2:\n        dataWorms[0].lengthTotalNorm * width +\n        CHART_PADDING_X +\n        CHART_MARGIN_LEFT,\n    }\n    totalLabelX = ghostWorm.x2\n  } else {\n    totalLabelX = dataWorms[dataWorms.length - 1]?.x2\n  }\n\n  return (\n    <div className=\"realismo-detail\">\n      <div className=\"realismo-detail-info-legend\">\n        Livelli:\n        <br />\n        luoghi contenuti\n        <br />\n        in altri luoghi\n      </div>\n      <div style={{ margin: `0px ${CHART_PADDING_X}px` }}>\n        <MiniInfoBox\n          onClose={() => toggleSelect(title)}\n          style={{ marginLeft: CHART_MARGIN_LEFT }}\n        >\n          {title}, {year}\n        </MiniInfoBox>\n      </div>\n      <svg className=\"worm-detail-svg\" style={{ height }}>\n        <linearGradient id=\"worm-detail-indoor\">\n          <stop offset={'0%'} stopColor={'#ffc33e'} />\n          <stop offset={'50%'} stopColor={'#FFF3D7'}>\n            <animate\n              attributeName=\"offset\"\n              values=\"0;1;0\"\n              dur=\"8s\"\n              repeatCount=\"indefinite\"\n            ></animate>\n          </stop>\n          <stop offset={'100%'} stopColor={'#ffc33e'} />\n        </linearGradient>\n        <linearGradient id=\"worm-detail-indoor-backward\">\n          <stop offset={'0%'} stopColor={'#ffc33e'} />\n          <stop offset={'50%'} stopColor={'#FFF3D7'}>\n            <animate\n              attributeName=\"offset\"\n              values=\"1;0\"\n              dur=\"4s\"\n              repeatCount=\"indefinite\"\n            ></animate>\n          </stop>\n          <stop offset={'100%'} stopColor={'#ffc33e'} />\n        </linearGradient>\n        <linearGradient id=\"worm-detail-indoor-forward\">\n          <stop offset={'0%'} stopColor={'#ffc33e'} />\n          <stop offset={'50%'} stopColor={'#FFF3D7'}>\n            <animate\n              attributeName=\"offset\"\n              values=\"0;1\"\n              dur=\"4s\"\n              repeatCount=\"indefinite\"\n            ></animate>\n          </stop>\n          <stop offset={'100%'} stopColor={'#ffc33e'} />\n        </linearGradient>\n        <linearGradient id=\"worm-detail-outdoor\">\n          <stop offset={'0%'} stopColor={'#00c97c'} />\n          <stop offset={'50%'} stopColor={'#63FFC3'}>\n            <animate\n              attributeName=\"offset\"\n              values=\"0;1;0\"\n              dur=\"8s\"\n              repeatCount=\"indefinite\"\n            ></animate>\n          </stop>\n          <stop offset={'100%'} stopColor={'#00c97c'} />\n        </linearGradient>\n        <linearGradient id=\"worm-detail-outdoor-forward\">\n          <stop offset={'0%'} stopColor={'#00c97c'} />\n          <stop offset={'50%'} stopColor={'#63FFC3'}>\n            <animate\n              attributeName=\"offset\"\n              values=\"0;1\"\n              dur=\"4s\"\n              repeatCount=\"indefinite\"\n            ></animate>\n          </stop>\n          <stop offset={'100%'} stopColor={'#00c97c'} />\n        </linearGradient>\n        <linearGradient id=\"worm-detail-outdoor-backward\">\n          <stop offset={'0%'} stopColor={'#00c97c'} />\n          <stop offset={'50%'} stopColor={'#63FFC3'}>\n            <animate\n              attributeName=\"offset\"\n              values=\"1;0\"\n              dur=\"4s\"\n              repeatCount=\"indefinite\"\n            ></animate>\n          </stop>\n          <stop offset={'100%'} stopColor={'#00c97c'} />\n        </linearGradient>\n        <linearGradient id=\"worm-detail-transportation\">\n          <stop offset={'0%'} stopColor={'#4a4aff'} />\n          <stop offset={'50%'} stopColor={'#E3E3FF'}>\n            <animate\n              attributeName=\"offset\"\n              values=\"0;1;0\"\n              dur=\"8s\"\n              repeatCount=\"indefinite\"\n            ></animate>\n          </stop>\n          <stop offset={'100%'} stopColor={'#4a4aff'} />\n        </linearGradient>\n        <linearGradient id=\"worm-detail-transportation-forward\">\n          <stop offset={'0%'} stopColor={'#4a4aff'} />\n          <stop offset={'50%'} stopColor={'#E3E3FF'}>\n            <animate\n              attributeName=\"offset\"\n              values=\"0;1\"\n              dur=\"4s\"\n              repeatCount=\"indefinite\"\n            ></animate>\n          </stop>\n          <stop offset={'100%'} stopColor={'#4a4aff'} />\n        </linearGradient>\n        <linearGradient id=\"worm-detail-transportation-backward\">\n          <stop offset={'0%'} stopColor={'#4a4aff'} />\n          <stop offset={'50%'} stopColor={'#E3E3FF'}>\n            <animate\n              attributeName=\"offset\"\n              values=\"1;0\"\n              dur=\"4s\"\n              repeatCount=\"indefinite\"\n            ></animate>\n          </stop>\n          <stop offset={'100%'} stopColor={'#4a4aff'} />\n        </linearGradient>\n        <g transform={'translate(0, 10)'}>\n          {levelsData.map((datum) => (\n            <g\n              key={datum.level}\n              className={`worm-detail-grid-container ${\n                datum.hasData ? 'level-enabled' : 'level-disabled'\n              }`}\n            >\n              <line\n                x1={CHART_PADDING_X + CHART_MARGIN_LEFT}\n                x2={width + CHART_PADDING_X + CHART_MARGIN_LEFT}\n                y1={yScale(datum.level)}\n                y2={yScale(datum.level)}\n                className={`worm-detail-y-grid`}\n              ></line>\n              <text\n                className={'worm-detail-level-label'}\n                y={yScale(datum.level) + 4}\n                x={CHART_PADDING_X - 10 + CHART_MARGIN_LEFT}\n              >\n                {datum.level}\n              </text>\n            </g>\n          ))}\n\n          {levelsData.map((datum) => (\n            <g key={datum.level}>\n              {datum.dataLevelWorms.map((item) => (\n                <g key={item.occurrence_location}>\n                  <rect\n                    rx={2}\n                    ry={2}\n                    x={item.x1}\n                    width={item.x2 - item.x1}\n                    height={MINI_RADIUS}\n                    style={{\n                      fill: makeItemFill(item),\n                    }}\n                    y={yScale(item.level) - MINI_RADIUS / 2}\n                  />\n                </g>\n              ))}\n              {datum.dataLabel.map((item) => (\n                <g key={item.occurrence_location}>\n                  <path d={item.linePath} fill=\"none\" stroke=\"#858585\" />\n                  <g\n                    style={{\n                      transformOrigin: `${item.x}px ${item.y}px`,\n                      transform: `rotate(-45deg)`,\n                    }}\n                  >\n                    <text x={item.x} y={item.y} textAnchor=\"end\">\n                      {item.occurrence}\n                    </text>\n                  </g>\n                </g>\n              ))}\n              {datum.dataLevelWorms\n                .filter((d) => d.ghost !== true)\n                .map((item) => (\n                  <g key={item.occurrence_location}>\n                    <circle\n                      fill=\"black\"\n                      cx={item.xLocation}\n                      cy={yScale(item.level)}\n                      r={LOCATION_RADIUS}\n                    />\n                  </g>\n                ))}\n            </g>\n          ))}\n          {ghostWorm && (\n            <rect\n              rx={2}\n              ry={2}\n              x={ghostWorm.x1}\n              width={ghostWorm.x2 - ghostWorm.x1}\n              height={MINI_RADIUS}\n              style={{\n                fill: 'rgba(95, 102, 100, 0.5)',\n              }}\n              y={yScale(0) - MINI_RADIUS / 2}\n            />\n          )}\n        </g>\n\n        <text\n          textAnchor={totalLabelX / width >= 0.75 ? 'end' : 'middle'}\n          x={totalLabelX}\n          y={10}\n          style={{ fontSize: 12 }}\n        >\n          {totalLength} caratteri\n        </text>\n        <line\n          x1={totalLabelX}\n          x2={totalLabelX}\n          y1={12}\n          y2={18}\n          stroke={'black'}\n        />\n      </svg>\n    </div>\n  )\n}\n\nexport default React.memo(WormDetail)\n","import React, {\n  useState,\n  useCallback,\n  useRef,\n  useLayoutEffect,\n  useMemo,\n} from \"react\"\nimport HelpSidePanel from \"../../panels/HelpSidePanel/HelpSidePanel\"\nimport MainMenu from \"../../general/MainMenu\"\nimport PageTitle from \"../../general/PageTitle\"\nimport AltOptions from \"../../general/Options/AltOptions\"\nimport SearchDropDown from \"../../general/Search/SearchDropDownControlled\"\nimport TextSearch from \"../../general/TextSearch\"\nimport MoreInfo from \"../../general/MoreInfo\"\nimport CompassButton from \"../../general/CompassButton/CompassButton\"\nimport useDimensions from \"react-use-dimensions\"\nimport GlobalData from \"../../utilities/GlobalData\"\nimport RangeFilterSnap from \"../../general/RangeFilterSnap\"\nimport { useTranslation, Trans } from \"react-i18next\"\nimport sortBy from \"lodash/sortBy\"\nimport difference from \"lodash/difference\"\nimport uniqBy from \"lodash/uniqBy\"\n\nimport {\n  datasetToCircles,\n  dataset,\n  raccontiDegs as racconti,\n  yearsExtent,\n  detailWormsCircles,\n} from \"./utils\"\nimport CircleWorms from \"./CircleWorms\"\nimport WormDetail from \"./WormDetail\"\nimport { groupBy } from \"lodash\"\n\nimport _titles from \"../../general/TextSearch/titles.json\"\n\nconst LABEL_BEZIER_DELTA_A = 30\nconst RESET_BOX_HEIGHT = 70\nconst REALISMO_DIAMETER_BASE = 760\n\nconst circlesMap = datasetToCircles(40)\n\nconst searchOptionsTitolo = racconti.map((racconto) => ({\n  label: racconto.title,\n  value: racconto.title,\n}))\nconst searchOptionsVolume = (() => {\n  const keyByTitolo = racconti.reduce((acc, r) => {\n    acc[r.title] = true\n    return acc\n  }, {})\n  return uniqBy(racconti, \"volume\").map((racconto) => {\n    const volume = racconto.volume\n    let volumeLabel = volume\n    if (keyByTitolo[volumeLabel]) {\n      volumeLabel += \" (volume)\"\n    }\n    return {\n      label: volumeLabel,\n      value: volumeLabel,\n      volume: volume,\n    }\n  })\n})()\n\nconst titoliByVolume = groupBy(racconti, \"volume\")\n// the following is for the textual search\nconst availableVolumes = Object.keys(titoliByVolume).map( d=>{\n  const title = _titles.find(t=>{\n    return t.label.toLowerCase()===d.toLowerCase() && t.value[0].includes(\"V\")\n  })\n  return title.value\n}).flat()\n\nexport default function RealismoMain({ title }) {\n  const [helpSidePanelOpen, setHelpSidePanelOpen] = useState(true)\n  const toggleHelpSidePanel = useCallback(() => {\n    setHelpSidePanelOpen((a) => !a)\n  }, [])\n  const [findFor, setFindFor] = useState(\"Titolo\")\n  const [ricerca, setRicerca] = useState([])\n  const [ricerca2, setRicerca2] = useState([])\n\n  const { t } = useTranslation([\"translation\", \"realismo\"])\n\n  const helpPage = GlobalData.helpPages.realism.main\n\n  const optionsMovimento = [\n    {\n      label: t(\"realismo:SI MOVIMENTO\"),\n      value: \"SI MOVIMENTO\",\n    },\n    {\n      label: t(\"realismo:NO MOVIMENTO\"),\n      value: \"NO MOVIMENTO\",\n    },\n  ]\n\n  const optionsSpace = [\n    {\n      label: t(\"realismo:INTERNO\"),\n      value: \"indoor\",\n    },\n    {\n      label: t(\"realismo:ESTERNO\"),\n      value: \"outdoor\",\n    },\n    {\n      label: t(\"realismo:MEZZO DI TRASPORTO\"),\n      value: \"transportation\",\n    },\n    {\n      label: t(\"realismo:ASSENZA DI AMBIENTAZIONE\"),\n      value: \"no_setting\",\n    },\n  ]\n\n  const cercaOptions = [\n    { label: t(\"realismo:Titolo\"), value: \"titolo\" },\n  ]\n\n  // const containerRef = useRef()\n  // const [measures, setMeasures] = useState(null)\n  // useLayoutEffect(() => {\n  //   const m = containerRef.current.getBoundingClientRect()\n  //   setMeasures(m)\n  // }, [])\n  const [ref, { width }] = useDimensions({ liveMeasure: false })\n  const [refCirlce, { height: heightCircle }] = useDimensions({\n    liveMeasure: false,\n  })\n\n  const [movimento, setMovimento] = useState(null)\n  const [spazio, setSpazio] = useState([])\n  const [timeFilter, setTimeFilter] = useState(yearsExtent)\n  const spazioLabels = useMemo(() => spazio.map((s) => s.label), [spazio])\n\n  const omitted = useMemo(() => {\n    const omittedStuff = {}\n    const spazioValues = spazio.map((s) => s.value)\n    Object.keys(dataset).forEach((titolo) => {\n      let keep = true\n\n      if (keep && movimento !== null) {\n        if (movimento === \"SI MOVIMENTO\") {\n          keep = dataset[titolo].some((datum) => {\n            if (movimento === \"SI MOVIMENTO\") {\n              return datum.movement === \"TRUE\"\n            }\n            return false\n          })\n        } else {\n          keep = dataset[titolo].every((datum) => {\n            if (movimento === \"NO MOVIMENTO\") {\n              return datum.movement === \"FALSE\"\n            }\n            return false\n          })\n        }\n      }\n\n      if (keep && spazioValues.length > 0) {\n        const categories = dataset[titolo].map((i) => i.category)\n        keep = spazioValues.some((category) => {\n          if (category === \"indoor\" || category === \"outdoor\") {\n            return categories.every((wormCateogry) => wormCateogry === category)\n          }\n          return categories.indexOf(category) !== -1\n        })\n      }\n\n      if (keep) {\n        keep = dataset[titolo].every((d) => {\n          return (\n            d.year >= timeFilter[0].getFullYear() &&\n            d.year <= timeFilter[1].getFullYear()\n          )\n        })\n      }\n\n      if (!keep) {\n        omittedStuff[titolo] = true\n      }\n    })\n    return omittedStuff\n  }, [movimento, spazio, timeFilter])\n\n  const selected = useMemo(() => {\n    const mapSelected = {}\n    const volumeSelected = {}\n    ricerca.forEach((item) => {\n      if (!item.volume) {\n        mapSelected[item.value] = true\n      } else {\n        volumeSelected[item.volume] = true\n      }\n    })\n    racconti\n      .filter((r) => volumeSelected[r.volume])\n      .forEach((item) => {\n        mapSelected[item.title] = true\n      })\n    return mapSelected\n  }, [ricerca])\n\n  const selectedOnWorms = useMemo(() => {\n    const selected2 = { ...selected }\n    const omittedKeys = Object.keys(omitted)\n    if (omittedKeys.length > 0) {\n      const keeped = difference(Object.keys(dataset), omittedKeys)\n      keeped.forEach((key) => {\n        selected2[key] = true\n      })\n    }\n    return selected2\n  }, [selected, omitted])\n\n  const toggleSelect = useCallback((title) => {\n    setRicerca((ricerca) => {\n      const newRicerca = ricerca.filter((item) => item.value !== title)\n      if (ricerca.length === newRicerca.length) {\n        return ricerca.concat({ label: title, value: title })\n      }\n      return newRicerca\n    })\n  }, [])\n\n  const selctedTitoliSorted = useMemo(() => {\n    const ricercaTitoli = uniqBy(\n      ricerca\n        .filter((r) => r.volume)\n        .reduce(\n          (acc, r) =>\n            acc.concat(\n              titoliByVolume[r.volume].map((r) => ({\n                value: r.title,\n                label: r.title,\n              }))\n            ),\n          []\n        )\n        .concat(ricerca.filter((r) => !r.volume)),\n      \"value\"\n    )\n    return sortBy(ricercaTitoli, (item) => dataset[item.value]?.[0]?.year)\n  }, [ricerca])\n\n  const leftRacconti = useMemo(() => {\n    return racconti\n      .filter((r) => r.rotation >= 90 && r.rotation <= 270)\n      .reverse()\n  }, [])\n\n  const rightRacconti = useMemo(() => {\n    return racconti.filter((r) => !(r.rotation >= 90 && r.rotation <= 270))\n  }, [])\n\n  const lineHeightRight = heightCircle / rightRacconti.length\n  const lineHeightLeft = (heightCircle - RESET_BOX_HEIGHT) / leftRacconti.length\n\n  const raccontiFontSize = lineHeightRight < 11 ? 11 : 12\n  const realismoDiameter =\n    heightCircle < REALISMO_DIAMETER_BASE\n      ? heightCircle - 10\n      : REALISMO_DIAMETER_BASE\n  const realismoRadius = realismoDiameter / 2\n\n  const raccontiJoinLines = useMemo(() => {\n    const paddingTop = (heightCircle - realismoDiameter) / 2\n\n    return racconti.reduce((acc, racconto) => {\n      const isLeft = racconto.rotation >= 90 && racconto.rotation <= 270\n\n      let x1, x2, y1, y2, pointAX, pointAY, pointBX, pointBY\n\n      if (isLeft) {\n        const angle = Math.abs(180 - racconto.rotation)\n        const index = leftRacconti.indexOf(racconto)\n        x2 = -(realismoDiameter / 2 + 100) + 5\n        y2 =\n          -(realismoDiameter / 2) +\n          index * lineHeightLeft +\n          lineHeightLeft / 2 -\n          paddingTop +\n          RESET_BOX_HEIGHT\n\n        y1 =\n          -Math.sin((Math.PI / 180) * angle) *\n          (realismoRadius - 5) *\n          (racconto.rotation > 180 ? 1 : -1)\n        x1 = -Math.cos((Math.PI / 180) * angle) * (realismoRadius - 5)\n\n        pointAY =\n          -Math.sin((Math.PI / 180) * angle) *\n          (realismoRadius + LABEL_BEZIER_DELTA_A) *\n          (racconto.rotation > 180 ? 1 : -1)\n        pointAX =\n          -Math.cos((Math.PI / 180) * angle) *\n          (realismoRadius + LABEL_BEZIER_DELTA_A)\n      } else {\n        const index = rightRacconti.indexOf(racconto)\n        x2 = realismoDiameter / 2 + 100 - 5\n        y2 =\n          -(realismoDiameter / 2) +\n          index * lineHeightRight +\n          lineHeightRight / 2 -\n          paddingTop\n\n        const angle = Math.abs(racconto.rotation)\n\n        y1 =\n          -Math.sin((Math.PI / 180) * angle) *\n          (realismoRadius - 5) *\n          (racconto.rotation > 0 ? -1 : 1)\n        x1 = Math.cos((Math.PI / 180) * angle) * (realismoRadius - 5)\n\n        pointAY =\n          -Math.sin((Math.PI / 180) * angle) *\n          (realismoRadius + LABEL_BEZIER_DELTA_A) *\n          (racconto.rotation > 0 ? -1 : 1)\n        pointAX =\n          Math.cos((Math.PI / 180) * angle) *\n          (realismoRadius + LABEL_BEZIER_DELTA_A)\n      }\n\n      pointBX = (x1 + x2) / 2\n      pointBY = y2\n\n      acc[racconto.title] = {\n        x1,\n        y1,\n        x2,\n        y2,\n        pointAX,\n        pointAY,\n        pointBX,\n        pointBY,\n      }\n\n      return acc\n    }, {})\n  }, [\n    heightCircle,\n    realismoDiameter,\n    leftRacconti,\n    lineHeightLeft,\n    realismoRadius,\n    rightRacconti,\n    lineHeightRight,\n  ])\n\n  return (\n    <div>\n      <HelpSidePanel\n        open={helpSidePanelOpen}\n        page={helpPage}\n        closeButtonClicked={toggleHelpSidePanel}\n      />\n      <div className=\"top-nav navigations\">\n        <MainMenu className=\"main-menu\" style={{ gridColumn: \"span 1\" }} />\n        <PageTitle title={title} style={{ gridColumn: \"span 9\" }} />\n        {/* <AltOptions\n          multiple={false}\n          title={t(\"cerca_per\")}\n          disabled\n          options={cercaOptions}\n          value={findFor}\n          onChange={(x) => setFindFor(x.label)}\n          style={{\n            gridColumn: \"span 3\",\n          }}\n        />\n        <SearchDropDown\n          style={{\n            gridColumn: \"span 6\",\n          }}\n          data={{\n            options:\n              findFor === \"Titolo\" ? searchOptionsTitolo : searchOptionsVolume,\n          }}\n          changeOptions={(newOptions) => {\n            console.log(newOptions)\n            setRicerca(newOptions)\n          }}\n          selectedOptions={ricerca}\n        /> */}\n\n        <TextSearch\n          style={{ gridColumn: \"span 12\" }}\n          changeOptions={(newOptions)=>{\n            let temp = newOptions.map(d=>\n              {\n                return d.value.map(id=>\n                  racconti.find(dd=>dd.id===id)\n                )\n              }\n            )\n            temp = temp.flat()\n            temp = temp.filter(d=>d)\n            // destination : {label:\"title\", value:\"title\"}\n            temp = temp.map(d=>({label:d.title, value:d.title}))\n            setRicerca(temp)\n            setRicerca2(newOptions)\n          }}\n          selectedOptions={ricerca2}\n          availableIds={racconti.map(d=>d.id)}\n          availableVolumes={availableVolumes}\n          availableOptions={[\"title\",\"volume\"]}\n        />\n\n        <MoreInfo\n          style={{ gridColumn: \"span 1\" }}\n          helpSidePanelOpen={helpSidePanelOpen}\n          onClicked={toggleHelpSidePanel}\n        />\n        <CompassButton\n          style={{\n            gridColumn: \"span 1\",\n          }}\n        />\n      </div>\n      <div className=\"realismo-content\">\n        <div\n          className=\"h-100 w-100 d-flex justify-content-center realismo-circle-wrapper\"\n          style={{\n            position: \"relative\",\n          }}\n        >\n          <div className=\"realismo-labels-container on-left text-right\">\n            <div className=\"realismo-reset\">\n              <div>\n                <div>{t(\"realismo:seleziona_testo\")}</div>\n                <button\n                  onClick={() => {\n                    // Reset Selection\n                    setRicerca([])\n                    setRicerca2([])\n                    // Reset Filters\n                    setSpazio([])\n                    setMovimento(null)\n                    // setTimeFilter(yearsExtent)\n                  }}\n                >\n                  Reset\n                </button>\n              </div>\n            </div>\n            {leftRacconti.map((racconto, i) => {\n              return (\n                <div\n                  onClick={() => toggleSelect(racconto.title)}\n                  className={`realismo-label ${\n                    selected[racconto.title]\n                      ? \"realismo-label-selected\"\n                      : omitted[racconto.title]\n                      ? \"realismo-label-omitted\"\n                      : \"\"\n                  }`}\n                  style={{\n                    height: `${lineHeightLeft}px`,\n                    lineHeight: `${lineHeightLeft}px`,\n                  }}\n                  key={i}\n                >\n                  {racconto.title}\n                </div>\n              )\n            })}\n          </div>\n          <div className=\"circle-worms-the-wrapper\" ref={refCirlce}>\n            {heightCircle && (\n              <CircleWorms\n                heightCircle={heightCircle}\n                toggleSelect={toggleSelect}\n                selected={selectedOnWorms}\n                selectedByHand={selected}\n                omitted={omitted}\n                circlesMap={circlesMap}\n                racconti={racconti}\n                raccontiJoinLines={raccontiJoinLines}\n                radius={realismoRadius}\n              ></CircleWorms>\n            )}\n          </div>\n          <div className=\"realismo-labels-container on-right\">\n            {rightRacconti.map((racconto, i) => {\n              return (\n                <div\n                  style={{\n                    lineHeight: `${lineHeightRight}px`,\n                    height: `${lineHeightRight}px`,\n                    fontSize: `${raccontiFontSize}px`,\n                  }}\n                  onClick={() => toggleSelect(racconto.title)}\n                  className={`realismo-label ${\n                    selected[racconto.title]\n                      ? \"realismo-label-selected\"\n                      : omitted[racconto.title]\n                      ? \"realismo-label-omitted\"\n                      : \"\"\n                  }`}\n                  key={i}\n                >\n                  {racconto.title}\n                </div>\n              )\n            })}\n          </div>\n        </div>\n        <div className=\"bottom-nav navigations\">\n          <AltOptions\n            title=\"Movimento\"\n            options={optionsMovimento}\n            value={movimento}\n            allowEmpty={true}\n            onChange={(m) => {\n              if (m) {\n                setMovimento(m.label)\n              } else {\n                setMovimento(null)\n              }\n            }}\n            style={{\n              gridColumn: \"span 8\",\n              textAlign: \"center\",\n            }}\n          />\n          <AltOptions\n            title=\"Spazio\"\n            multiple\n            options={optionsSpace}\n            value={spazioLabels}\n            allowEmpty={true}\n            onChange={(s) => {\n              setSpazio(s)\n            }}\n            style={{\n              gridColumn: \"span 8\",\n              textAlign: \"center\",\n            }}\n          />\n          <RangeFilterSnap\n            style={{ gridColumn: \"span 8\" }}\n            extent={timeFilter}\n            update={(timeSpan) => {\n              setTimeFilter(timeSpan)\n            }}\n          />\n        </div>\n      </div>\n      {ricerca.length > 0 && (\n        <div className=\"realismo-details-container\" ref={ref}>\n          <h4>{t(\"realismo:vedi_dettaglio\")}</h4>\n          {width &&\n            selctedTitoliSorted.map((item) => (\n              <WormDetail\n                data={detailWormsCircles[item.value]}\n                year={detailWormsCircles[item.value]?.[0]?.year}\n                title={item.value}\n                width={width}\n                key={item.value}\n                toggleSelect={toggleSelect}\n              />\n            ))}\n        </div>\n      )}\n    </div>\n  )\n}\n","import {path} from \"d3-path\";\nimport {slice} from \"../array.js\";\nimport constant from \"../constant.js\";\nimport {x as pointX, y as pointY} from \"../point.js\";\nimport pointRadial from \"../pointRadial.js\";\n\nfunction linkSource(d) {\n  return d.source;\n}\n\nfunction linkTarget(d) {\n  return d.target;\n}\n\nfunction link(curve) {\n  var source = linkSource,\n      target = linkTarget,\n      x = pointX,\n      y = pointY,\n      context = null;\n\n  function link() {\n    var buffer, argv = slice.call(arguments), s = source.apply(this, argv), t = target.apply(this, argv);\n    if (!context) context = buffer = path();\n    curve(context, +x.apply(this, (argv[0] = s, argv)), +y.apply(this, argv), +x.apply(this, (argv[0] = t, argv)), +y.apply(this, argv));\n    if (buffer) return context = null, buffer + \"\" || null;\n  }\n\n  link.source = function(_) {\n    return arguments.length ? (source = _, link) : source;\n  };\n\n  link.target = function(_) {\n    return arguments.length ? (target = _, link) : target;\n  };\n\n  link.x = function(_) {\n    return arguments.length ? (x = typeof _ === \"function\" ? _ : constant(+_), link) : x;\n  };\n\n  link.y = function(_) {\n    return arguments.length ? (y = typeof _ === \"function\" ? _ : constant(+_), link) : y;\n  };\n\n  link.context = function(_) {\n    return arguments.length ? ((context = _ == null ? null : _), link) : context;\n  };\n\n  return link;\n}\n\nfunction curveHorizontal(context, x0, y0, x1, y1) {\n  context.moveTo(x0, y0);\n  context.bezierCurveTo(x0 = (x0 + x1) / 2, y0, x0, y1, x1, y1);\n}\n\nfunction curveVertical(context, x0, y0, x1, y1) {\n  context.moveTo(x0, y0);\n  context.bezierCurveTo(x0, y0 = (y0 + y1) / 2, x1, y0, x1, y1);\n}\n\nfunction curveRadial(context, x0, y0, x1, y1) {\n  var p0 = pointRadial(x0, y0),\n      p1 = pointRadial(x0, y0 = (y0 + y1) / 2),\n      p2 = pointRadial(x1, y0),\n      p3 = pointRadial(x1, y1);\n  context.moveTo(p0[0], p0[1]);\n  context.bezierCurveTo(p1[0], p1[1], p2[0], p2[1], p3[0], p3[1]);\n}\n\nexport function linkHorizontal() {\n  return link(curveHorizontal);\n}\n\nexport function linkVertical() {\n  return link(curveVertical);\n}\n\nexport function linkRadial() {\n  var l = link(curveRadial);\n  l.angle = l.x, delete l.x;\n  l.radius = l.y, delete l.y;\n  return l;\n}\n","export default function(x, y) {\n  return [(y = +y) * Math.cos(x -= Math.PI / 2), y * Math.sin(x)];\n}\n","var baseAssignValue = require('./_baseAssignValue'),\n    baseForOwn = require('./_baseForOwn'),\n    baseIteratee = require('./_baseIteratee');\n\n/**\n * Creates an object with the same keys as `object` and values generated\n * by running each own enumerable string keyed property of `object` thru\n * `iteratee`. The iteratee is invoked with three arguments:\n * (value, key, object).\n *\n * @static\n * @memberOf _\n * @since 2.4.0\n * @category Object\n * @param {Object} object The object to iterate over.\n * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n * @returns {Object} Returns the new mapped object.\n * @see _.mapKeys\n * @example\n *\n * var users = {\n *   'fred':    { 'user': 'fred',    'age': 40 },\n *   'pebbles': { 'user': 'pebbles', 'age': 1 }\n * };\n *\n * _.mapValues(users, function(o) { return o.age; });\n * // => { 'fred': 40, 'pebbles': 1 } (iteration order is not guaranteed)\n *\n * // The `_.property` iteratee shorthand.\n * _.mapValues(users, 'age');\n * // => { 'fred': 40, 'pebbles': 1 } (iteration order is not guaranteed)\n */\nfunction mapValues(object, iteratee) {\n  var result = {};\n  iteratee = baseIteratee(iteratee, 3);\n\n  baseForOwn(object, function(value, key, object) {\n    baseAssignValue(result, key, iteratee(value, key, object));\n  });\n  return result;\n}\n\nmodule.exports = mapValues;\n"],"sourceRoot":""}