{"version":3,"sources":["../node_modules/lodash/mapValues.js","general/MiniInfoBox/MiniInfoBox.js","general/MiniInfoBox/index.js","helpPages/transform/RealismHelp/RealismHelp.js","visualizations/Realismo/utils.js","visualizations/Realismo/CircleWorms.js","visualizations/Realismo/WormDetail.js","visualizations/Realismo/RealismoMain.js"],"names":["baseAssignValue","require","baseForOwn","baseIteratee","module","exports","object","iteratee","result","value","key","MiniInfoBox","children","onClose","className","onClick","RealismHelp","to","Component","realismoDataNormalized","realismoData","map","item","startNorm","start","length","endNorm","end","locationNorm","yearsExtent","extent","d","year","y","Date","racconti","uniqBy","title","dataset","groupBy","colorScale","scaleOrdinal","range","domain","unknown","LEGEND_DEG","LABEL_SIZE_PERCENT","WORM_SIZE_PERCENT","LABEL_PADDING","INNER_CIRCLE_PADDING","INNER_CIRCLE_STROKE_WIDTH","LEGEND_TEXT_MARGIN","Worm","React","memo","racconto","circles","radius","labelSize","wormSize","isSelected","isOmitted","flipText","wormStart","wormEnd","circleRadius","flipTextStyle","transform","transformOrigin","undefined","yScale","scaleLinear","style","opacity","cursor","circle","i","fill","category","r","cy","level","cx","place","x","textAnchor","CircleWorms","width","height","circlesMap","selected","omitted","toggleSelect","deltaAngle","size","Math","min","handleClick","useCallback","allSelected","Object","keys","innerRadius","endLineStart","endLineEnd","y1","y2","x1","x2","stroke","strokeWidth","angle","margins","occurrence","n","mapValues","data","circleWidth","reduce","acc","out","find","push","searchOptions","label","optionsMovimento","optionsSpace","cercaOptions","RealismoMain","useState","helpSidePanelOpen","setHelpSidePanelOpen","toggleHelpSidePanel","a","ricerca","setRicerca","containerRef","GlobalData","helpPages","plot","main","useRef","measures","setMeasures","useLayoutEffect","m","current","getBoundingClientRect","movimento","setMovimento","spazio","setSpazio","timeFilter","setTimeFilter","spazioLabels","useMemo","s","omittedStuff","spazioValues","forEach","titolo","keep","some","datum","movement","categories","indexOf","every","getFullYear","selcted","mapSelected","newRicerca","filter","concat","selctedTitoliSorted","sortBy","useDimensions","ref","HelpSidePanel","open","closeButtonClicked","MainMenu","gridColumn","PageTitle","AltOptions","options","disabled","onChange","changeOptions","newOptions","selectedOptions","MoreInfo","onClicked","CompassButton","color","backgroundColor","position","allowEmpty","textAlign","multiple","RangeFilter","timeSpan"],"mappings":"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","file":"static/js/4.3bf56277.chunk.js","sourcesContent":["var baseAssignValue = require('./_baseAssignValue'),\n    baseForOwn = require('./_baseForOwn'),\n    baseIteratee = require('./_baseIteratee');\n\n/**\n * Creates an object with the same keys as `object` and values generated\n * by running each own enumerable string keyed property of `object` thru\n * `iteratee`. The iteratee is invoked with three arguments:\n * (value, key, object).\n *\n * @static\n * @memberOf _\n * @since 2.4.0\n * @category Object\n * @param {Object} object The object to iterate over.\n * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n * @returns {Object} Returns the new mapped object.\n * @see _.mapKeys\n * @example\n *\n * var users = {\n *   'fred':    { 'user': 'fred',    'age': 40 },\n *   'pebbles': { 'user': 'pebbles', 'age': 1 }\n * };\n *\n * _.mapValues(users, function(o) { return o.age; });\n * // => { 'fred': 40, 'pebbles': 1 } (iteration order is not guaranteed)\n *\n * // The `_.property` iteratee shorthand.\n * _.mapValues(users, 'age');\n * // => { 'fred': 40, 'pebbles': 1 } (iteration order is not guaranteed)\n */\nfunction mapValues(object, iteratee) {\n  var result = {};\n  iteratee = baseIteratee(iteratee, 3);\n\n  baseForOwn(object, function(value, key, object) {\n    baseAssignValue(result, key, iteratee(value, key, object));\n  });\n  return result;\n}\n\nmodule.exports = mapValues;\n","import React from 'react'\nimport './MiniInfoBox.css'\n\nexport default function MiniInfoBox({ children, onClose }) {\n  return (\n    <div className=\"MiniInfoBox\">\n      <div className=\"MiniInfoBox-start\">{children}</div>\n      <div className=\"MiniInfoBox-end\" onClick={onClose}>\n        &times;\n      </div>\n    </div>\n  )\n}\n","export { default } from './MiniInfoBox'","import React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\n\nclass RealismHelp extends Component {\n  render() {\n    return <>\n      <div>RealismHelp</div>\n      <Link to=\"/realism-sheet\">Scheda</Link>\n    </>;\n  }\n}\n\nexport default RealismHelp;\n","import realismoData from './data/realismo.json'\nimport groupBy from 'lodash/groupBy'\nimport uniqBy from 'lodash/uniqBy'\nimport { scaleOrdinal } from 'd3-scale'\nimport range from 'lodash/range'\nimport find from 'lodash/find'\nimport mapValues from 'lodash/mapValues'\nimport { extent } from 'd3-array'\n\nconst realismoDataNormalized = realismoData.map((item) => ({\n  ...item,\n  startNorm: +item.start / item.length,\n  endNorm: +item.end / item.length,\n  locationNorm: +item['occurrence_location'] / +item.length,\n}))\n\nexport const yearsExtent = extent(realismoData, d => +d.year)\n  .map(y => new Date(y, 0))\n\nexport const racconti = uniqBy(realismoData, 'title').map((item) => ({\n  title: item.title,\n  length: item.length,\n}))\n\nexport const dataset = groupBy(realismoDataNormalized, 'title')\n\nexport function datasetToCircles(n) {\n  return mapValues(dataset, (data) => {\n    const circleWidth = 1 / n\n\n    const circles = range(n).reduce((acc, item, i) => {\n      const startNorm = i * circleWidth\n      const endNorm = (i + 1) * circleWidth\n      const out =\n        find(\n          data,\n          (item) => item.startNorm <= startNorm && item.endNorm >= endNorm\n        ) || {}\n      let place = false\n      if (\n        out.occurrence &&\n        out.locationNorm >= startNorm &&\n        out.locationNorm <= endNorm\n      ) {\n        place = true\n      }\n      acc.push({ ...out, place })\n      return acc\n    }, [])\n\n    return circles\n  })\n}\n\nexport const colorScale = scaleOrdinal()\n  .range(['#ffc33e', '#00c97c', '#4a4aff'])\n  .domain(['indoor', 'outdoor', 'transportation'])\n  .unknown(['#ccc'])\n","import React, { useCallback } from 'react'\nimport { colorScale } from './utils'\nimport { scaleLinear } from 'd3-scale'\nimport { transform } from 'lodash'\n\nconst LEGEND_DEG = 10\nconst LABEL_SIZE_PERCENT = 0.2\nconst WORM_SIZE_PERCENT = 0.45\nconst LABEL_PADDING = 10\nconst INNER_CIRCLE_PADDING = 10\nconst INNER_CIRCLE_STROKE_WIDTH = 5\nconst LEGEND_TEXT_MARGIN = 3\n\nconst Worm = React.memo(\n  ({\n    racconto,\n    circles,\n    radius,\n    labelSize,\n    wormSize,\n    onClick,\n    isSelected,\n    isOmitted,\n    flipText = false,\n  }) => {\n    const wormStart = radius - labelSize - wormSize - LABEL_PADDING\n    const wormEnd = radius - labelSize\n\n    const circleRadius = wormSize / circles.length / 2\n    const flipTextStyle = flipText\n      ? {\n          transform: 'rotate(180deg)',\n          transformOrigin: `${wormEnd}px 0px`,\n        }\n      : undefined\n\n    const yScale = scaleLinear()\n      .domain([0, 2])\n      .range([0, circleRadius * 2])\n\n    return (\n      <g\n        style={{\n          opacity: isSelected ? 1 : 0.3,\n        }}\n      >\n        <g\n          onClick={() => {\n            if (!isOmitted) {\n              onClick(racconto)\n            }\n          }}\n          style={{\n            cursor: isOmitted ? undefined : 'pointer',\n          }}\n        >\n          {circles.map((circle, i) => {\n            return (\n              <g key={i}>\n                <circle\n                  className=\"movement\"\n                  style={{ fill: colorScale(circle.category) }}\n                  r={isOmitted ? circleRadius * 0.5 : circleRadius * 1.5}\n                  cy={yScale(circle.level)}\n                  cx={wormStart + i * circleRadius * 2 + circleRadius}\n                ></circle>\n                {circle.place && (\n                  <circle\n                    style={{ fill: '#fff' }}\n                    r={circleRadius / 3}\n                    cy={yScale(circle.level)}\n                    cx={wormStart + i * circleRadius * 2 + circleRadius}\n                  ></circle>\n                )}\n              </g>\n            )\n          })}\n        </g>\n        <g style={flipTextStyle}>\n          <text x={wormEnd} textAnchor={flipText ? 'end' : undefined}>\n            {racconto.title}\n          </text>\n        </g>\n      </g>\n    )\n  }\n)\n\nexport default function CircleWorms({\n  width,\n  height,\n  circlesMap,\n  selected,\n  omitted,\n  racconti,\n  toggleSelect,\n}) {\n  const deltaAngle = (360 - LEGEND_DEG) / racconti.length\n  const size = Math.min(width, height)\n\n  const handleClick = useCallback(\n    (racconto) => {\n      toggleSelect(racconto.title)\n    },\n    [toggleSelect]\n  )\n\n  const allSelected = Object.keys(selected).length === 0\n\n  const labelSize = (size / 2) * LABEL_SIZE_PERCENT\n  const wormSize = (size / 2) * WORM_SIZE_PERCENT\n  const innerRadius =\n    size / 2 - labelSize - wormSize - LABEL_PADDING - INNER_CIRCLE_PADDING\n\n  const endLineStart =\n    labelSize +\n    LABEL_PADDING +\n    wormSize +\n    INNER_CIRCLE_PADDING -\n    INNER_CIRCLE_STROKE_WIDTH / 2\n  const endLineEnd = endLineStart + 90\n\n  // 0 - 90\n  return (\n    <svg width={width} height={size}>\n      <line\n        y1={0}\n        y2={labelSize}\n        x1={width / 2}\n        x2={width / 2}\n        stroke=\"black\"\n        strokeWidth={2}\n      />\n      <text\n        x={width / 2}\n        y={labelSize - LEGEND_TEXT_MARGIN}\n        className=\"realismo-legend-text\"\n        style={{\n          transformOrigin: `${width / 2}px ${labelSize}px`,\n          transform: 'rotate(270deg)',\n        }}\n      >\n        TITOLO\n      </text>\n      <line\n        y1={labelSize + LABEL_PADDING}\n        y2={labelSize + LABEL_PADDING + wormSize}\n        x1={width / 2}\n        x2={width / 2}\n        stroke=\"black\"\n        strokeWidth={2}\n      />\n      <text\n        x={width / 2}\n        y={labelSize + LABEL_PADDING - LEGEND_TEXT_MARGIN}\n        className=\"realismo-legend-text\"\n        textAnchor={'end'}\n        style={{\n          transformOrigin: `${width / 2}px ${labelSize + LABEL_PADDING}px`,\n          transform: 'rotate(270deg)',\n        }}\n      >\n        FINE\n      </text>\n      <text\n        x={width / 2}\n        y={labelSize + LABEL_PADDING + wormSize - LEGEND_TEXT_MARGIN}\n        className=\"realismo-legend-text\"\n        textAnchor={'start'}\n        style={{\n          transformOrigin: `${width / 2}px ${\n            labelSize + LABEL_PADDING + wormSize\n          }px`,\n          transform: 'rotate(270deg)',\n        }}\n      >\n        INIZIO DEL TESTO\n      </text>\n      <circle\n        cx={width / 2}\n        cy={size / 2}\n        fill={'transparent'}\n        stroke={'#ddd'}\n        strokeWidth={INNER_CIRCLE_STROKE_WIDTH}\n        r={innerRadius}\n      />\n      <line\n        y1={endLineStart}\n        y2={endLineEnd}\n        x1={width / 2}\n        x2={width / 2}\n        stroke=\"black\"\n        strokeWidth={2}\n      />\n      <g\n        className=\"babu\"\n        style={{\n          transform: `translate(${\n            width / 2 - 14\n          }px, ${endLineEnd}px) rotate(270deg)`,\n        }}\n      >\n        <text x={0} y={0} className=\"realismo-legend-text\" textAnchor={'start'}>\n          ANNO PRIMA\n        </text>\n        <text\n          x={0}\n          y={10}\n          className=\"realismo-legend-text\"\n          textAnchor={'start'}\n        >\n          PUBBLICAZIONE\n        </text>\n      </g>\n\n      <g transform={`translate(${width / 2} , ${size / 2})`}>\n        {racconti.map((racconto, i) => {\n          let angle = i * deltaAngle + deltaAngle / 2 + 270 + LEGEND_DEG / 2\n          if (angle > 360) {\n            angle -= 360\n          }\n          return (\n            <g\n              key={i}\n              className={`worm-${i}`}\n              style={{ transform: `rotate(${angle}deg)` }}\n            >\n              <Worm\n                flipText={angle >= 90 && angle <= 270}\n                isSelected={allSelected || !!selected[racconto.title]}\n                isOmitted={!!omitted[racconto.title]}\n                onClick={handleClick}\n                radius={size / 2}\n                labelSize={(size / 2) * LABEL_SIZE_PERCENT}\n                wormSize={(size / 2) * WORM_SIZE_PERCENT}\n                racconto={racconto}\n                circles={circlesMap[racconto.title]}\n              ></Worm>\n            </g>\n          )\n        })}\n      </g>\n    </svg>\n  )\n}\n","import React from 'react'\nimport { scaleLinear } from 'd3-scale'\nimport { colorScale } from './utils'\nimport MiniInfoBox from '../../general/MiniInfoBox'\n\nfunction WormDetail({ title, year, circles, width, toggleSelect }) {\n  const margins = {\n    h: 50,\n    v: 50,\n  }\n  const circleRadius = width / circles.length / 2\n\n  const yScale = scaleLinear()\n    .domain([0, 2])\n    .range([\n      margins.v + circleRadius * 2,\n      circleRadius * 4 + margins.v * 2 - circleRadius,\n    ])\n\n  return (\n    <div className=\"realismo-detail border-dark\">\n      <MiniInfoBox onClose={() => toggleSelect(title)}>\n        {title}, {year}\n      </MiniInfoBox>\n      <svg className=\"worm-detail-svg\">\n        <line\n          x1={0}\n          x2={width}\n          y1={yScale(0)}\n          y2={yScale(0)}\n          className=\"worm-detail-y-grid\"\n        ></line>\n        <line\n          x1={0}\n          x2={width}\n          y1={yScale(1)}\n          y2={yScale(1)}\n          className=\"worm-detail-y-grid\"\n        ></line>\n        <line\n          x1={0}\n          x2={width}\n          y1={yScale(2)}\n          y2={yScale(2)}\n          className=\"worm-detail-y-grid\"\n        ></line>\n\n        {circles.map((circle, i) => {\n          return (\n            <g key={i}>\n              {circle.place && (\n                <g>\n                  <line\n                    className=\"worm-detail-x-place\"\n                    x1={i * circleRadius * 2 + circleRadius}\n                    x2={i * circleRadius * 2 + circleRadius}\n                    y1={yScale(circle.level || 0)}\n                    y2={250 - margins.v}\n                  ></line>\n                  <text\n                    // style={{transformOrigin:`${i * circleRadius * 2 + circleRadius}px, ${200}px`}}\n                    className=\"worm-detail-place-label\"\n                    x={i * circleRadius * 2 + circleRadius}\n                    y={200}\n                  >\n                    {circle.occurrence}\n                  </text>\n                </g>\n              )}\n\n              <circle\n                className=\"movement\"\n                style={{ fill: colorScale(circle.category) }}\n                r={circleRadius}\n                cy={yScale(circle.level || 0)}\n                cx={i * circleRadius * 2 + circleRadius}\n              ></circle>\n              {circle.place && (\n                <circle\n                  style={{ fill: '#fff' }}\n                  r={circleRadius / 3}\n                  cy={yScale(circle.level)}\n                  cx={i * circleRadius * 2 + circleRadius}\n                ></circle>\n              )}\n            </g>\n          )\n        })}\n      </svg>\n    </div>\n  )\n}\n\nexport default React.memo(WormDetail)\n","import React, {\n  useState,\n  useCallback,\n  useRef,\n  useLayoutEffect,\n  useMemo,\n} from 'react'\nimport HelpSidePanel from '../../panels/HelpSidePanel/HelpSidePanel'\nimport RealismHelp from '../../helpPages/transform/RealismHelp';\n\nimport MainMenu from '../../general/MainMenu'\nimport PageTitle from '../../general/PageTitle'\nimport AltOptions from '../../general/Options/AltOptions'\nimport SearchDropDown from '../../general/Search/SearchDropDownControlled'\nimport MoreInfo from '../../general/MoreInfo'\nimport CompassButton from '../../general/CompassButton/CompassButton'\nimport useDimensions from 'react-use-dimensions'\nimport GlobalData from '../../utilities/GlobalData'\nimport RangeFilter from '../../general/RangeFilter'\n\nimport sortBy from 'lodash/sortBy'\n\nimport { datasetToCircles, dataset, racconti, yearsExtent } from './utils'\nimport CircleWorms from './CircleWorms'\nimport WormDetail from './WormDetail'\n\nconst circlesMap = datasetToCircles(40)\n\nconst searchOptions = racconti.map((racconto) => ({\n  label: racconto.title,\n  value: racconto.title,\n}))\n\nconst optionsMovimento = [\n  {\n    label: 'SI MOVIMENTO',\n  },\n  {\n    label: 'NO MOVIMENTO',\n  },\n]\n\nconst optionsSpace = [\n  {\n    label: 'INTERNO',\n    value: 'indoor',\n  },\n  {\n    label: 'ESTERNO',\n    value: 'outdoor',\n  },\n  {\n    label: 'MEZZO DI TRANSPORTO',\n    value: 'transportation',\n  },\n  {\n    label: 'ASSENZA DI AMBIENTAZIONE',\n    value: 'no_setting',\n  },\n]\n\n// console.log('dataset', dataset)\n// console.log('circlesMap', circlesMap)\n\nconst cercaOptions = [{ label: 'Volume' }]\n\nexport default function RealismoMain({ title }) {\n  const [helpSidePanelOpen, setHelpSidePanelOpen] = useState(false)\n  const toggleHelpSidePanel = useCallback(() => {\n    setHelpSidePanelOpen((a) => !a)\n  }, [])\n  const [ricerca, setRicerca] = useState([])\n\n  const helpPage = GlobalData.helpPages.plot.main\n\n  const containerRef = useRef()\n  const [measures, setMeasures] = useState(null)\n  useLayoutEffect(() => {\n    const m = containerRef.current.getBoundingClientRect()\n    setMeasures(m)\n  }, [])\n\n  const [movimento, setMovimento] = useState(null)\n  const [spazio, setSpazio] = useState([])\n  const [timeFilter, setTimeFilter] = useState(yearsExtent)\n  const spazioLabels = useMemo(() => spazio.map((s) => s.label), [spazio])\n\n  const omitted = useMemo(() => {\n    const omittedStuff = {}\n    const spazioValues = spazio.map((s) => s.value)\n    Object.keys(dataset).forEach((titolo) => {\n      let keep = true\n\n      if (keep && movimento !== null) {\n        keep = dataset[titolo].some((datum) => {\n          if (movimento === 'SI MOVIMENTO') {\n            return datum.movement === 'TRUE'\n          }\n          if (movimento === 'NO MOVIMENTO') {\n            return datum.movement === 'FALSE'\n          }\n          return false\n        })\n      }\n\n      if (keep && spazioValues.length > 0) {\n        const categories = dataset[titolo].map((i) => i.category)\n        keep = spazioValues.some((category) => {\n          return categories.indexOf(category) !== -1\n        })\n      }\n\n      if (keep) {\n        keep = dataset[titolo].every((d) => {\n          return (\n            d.year >= timeFilter[0].getFullYear() &&\n            d.year <= timeFilter[1].getFullYear()\n          )\n        })\n      }\n\n      if (!keep) {\n        omittedStuff[titolo] = true\n      }\n    })\n    return omittedStuff\n  }, [movimento, spazio, timeFilter])\n\n  const selcted = useMemo(() => {\n    const mapSelected = {}\n    ricerca.forEach((item) => {\n      mapSelected[item.value] = true\n    })\n    return mapSelected\n  }, [ricerca])\n\n  const toggleSelect = useCallback((title) => {\n    setRicerca((ricerca) => {\n      const newRicerca = ricerca.filter((item) => item.value !== title)\n      if (ricerca.length === newRicerca.length) {\n        return ricerca.concat({ label: title, value: title })\n      }\n      return newRicerca\n    })\n  }, [])\n\n  const selctedTitoliSorted = useMemo(() => {\n    return sortBy(ricerca, (item) => dataset[item.value]?.[0]?.year)\n  }, [ricerca])\n\n  const [ref, { x, y, width, height }] = useDimensions()\n\n  return (\n    <div>\n      {/* <HelpSidePanel\n        open={helpSidePanelOpen}\n        page={helpPage}\n        closeButtonClicked={toggleHelpSidePanel}\n      /> */}\n      <HelpSidePanel\n        open={helpSidePanelOpen}\n        closeButtonClicked={toggleHelpSidePanel} >\n          <RealismHelp />\n      </HelpSidePanel>\n      <div className=\"top-nav navigations\">\n        <MainMenu className=\"main-menu\" style={{ gridColumn: 'span 1' }} />\n        <PageTitle title={title} style={{ gridColumn: 'span 10' }} />\n        <AltOptions\n          title=\"Cerca per\"\n          options={cercaOptions}\n          disabled={true}\n          value={'Volume'}\n          onChange={(x) => {}}\n          style={{\n            gridColumn: 'span 3',\n          }}\n        />\n        <SearchDropDown\n          style={{\n            gridColumn: 'span 8',\n          }}\n          data={{ options: searchOptions }}\n          changeOptions={(newOptions) => {\n            setRicerca(newOptions)\n          }}\n          selectedOptions={ricerca}\n        />\n        <MoreInfo\n          style={{ gridColumn: 'span 1' }}\n          onClicked={toggleHelpSidePanel}\n        />\n        <CompassButton\n          style={{\n            gridColumn: 'span 1',\n            color: 'white',\n            backgroundColor: 'black',\n          }}\n        />\n      </div>\n      <div className=\"realismo-content \" ref={containerRef}>\n        <div\n          className=\"h-100 w-100 d-flex justify-content-center align-items-center\"\n          style={{\n            position: 'relative',\n          }}\n        >\n          <div className=\"realismo-reset\">\n            <div>Seleziona i test e poi scorri in basso</div>\n            <button onClick={() => {\n              // Reset Selection\n              setRicerca([])\n              // Reset Filters\n              // setSpazio([])\n              // setMovimento(null)\n              // setTimeFilter(yearsExtent)\n            }}>reset</button>\n          </div>\n          {measures && (\n            <CircleWorms\n              toggleSelect={toggleSelect}\n              selected={selcted}\n              omitted={omitted}\n              circlesMap={circlesMap}\n              racconti={racconti}\n              width={measures.width}\n              height={measures.height}\n            ></CircleWorms>\n          )}\n        </div>\n        <div className=\"bottom-nav navigations\">\n          <AltOptions\n            title=\"Movimento\"\n            options={optionsMovimento}\n            value={movimento}\n            allowEmpty={true}\n            onChange={(m) => {\n              if (m) {\n                setMovimento(m.label)\n              } else {\n                setMovimento(null)\n              }\n            }}\n            style={{\n              gridColumn: 'span 8',\n              textAlign: 'center',\n            }}\n          />\n          <AltOptions\n            title=\"Spazio\"\n            multiple\n            options={optionsSpace}\n            value={spazioLabels}\n            allowEmpty={true}\n            onChange={(s) => {\n              setSpazio(s)\n            }}\n            style={{\n              gridColumn: 'span 8',\n              textAlign: 'center',\n            }}\n          />\n          <RangeFilter\n            style={{ gridColumn: 'span 8' }}\n            data={timeFilter}\n            changeOptions={(timeSpan) => {\n              setTimeFilter(timeSpan)\n            }}\n          />\n        </div>\n      </div>\n      {ricerca.length > 0 && (\n        <div className=\"realismo-details-container\" ref={ref}>\n          {width &&\n            selctedTitoliSorted.map((item) => (\n              <WormDetail\n                width={width}\n                key={item.value}\n                title={item.value}\n                year={dataset[item.value]?.[0]?.year}\n                circles={circlesMap[item.value]}\n                toggleSelect={toggleSelect}\n              />\n            ))}\n        </div>\n      )}\n    </div>\n  )\n}\n"],"sourceRoot":""}