{"version":3,"sources":["general/MiniInfoBox/MiniInfoBox.js","visualizations/Trama2/utils.js","visualizations/Trama2/GradientsDefinitions.js","visualizations/Trama2/icons/icon-close.svg","visualizations/Trama2/RaccontoInfoBoxSvg.js","visualizations/Trama2/icons/chevron-left.svg","visualizations/Trama2/icons/chevron-right.svg","visualizations/Trama2/Brush.js","visualizations/Trama2/LineeTrama.js","visualizations/Trama2/Star.js","visualizations/Trama2/BoxPlotGradientsDefinitions.js","visualizations/Trama2/BoxPlot.js","visualizations/Trama2/TramaDetail.js","visualizations/Trama2/SideBar.js","visualizations/Trama2/Trama2Content.js","visualizations/Trama2/Trama2Main.js"],"names":["MiniInfoBox","children","onClose","style","className","onClick","motivoExtent","extent","ordineColore","item","makeScalaMotivoY","lineHeight","scaleLinear","domain","range","splitPath","d","pieces","split","reduce","acc","i","path","push","reverse","a","b","React","memo","prefix","gradientsType","byTipologia","map","gradientType","tipoFromName","tipoToName","tipoFrom","tipoTo","x1","x2","y1","y2","key","id","offset","stopColor","colore","colori","_extends","Object","assign","target","arguments","length","source","prototype","hasOwnProperty","call","apply","this","_objectWithoutProperties","excluded","sourceKeys","keys","indexOf","_objectWithoutPropertiesLoose","getOwnPropertySymbols","sourceSymbolKeys","propertyIsEnumerable","createElement","fillRule","_ref","svgRef","title","props","width","height","viewBox","fill","ref","ForwardRef","forwardRef","RaccontoInfoBoxSvg","titolo","x","y","containerRef","useRef","useState","measures","setMeasures","view","useContext","CurretTramaViewContext","useLayoutEffect","m","current","getBoundingClientRect","transform","cursor","textAnchor","userSelect","Brush","onNextClick","onPrevClick","controlledX","onXChange","BRUSH_HANDLE_WIDTH","uncontrolledX","setX","undefined","rawNextX","nextX","axis","position","bounds","left","right","onDrag","e","lineGenerator","line","curve","curveMonotoneX","SubPathsWithColors","subPaths","data","itemSelected","subPath","strokeSelected","motivo_type","stroke","TramaPoints","transformOrigin","cx","cy","r","LineaTrama","racconto","selectedPoint","xScale","index","setFindFor","ricerca","toggleItem","onRaccontoClick","showInfoUI","useMemo","handleClickRacconto","useCallback","element","data-subracconto","anno","originalX","ReactDOM","createPortal","document","getElementsByClassName","SelectedContainers","n","LineeTramaList","dataRacconti","currentXHoverRacconti","racconti","scalaColore","scalaMotivoY","selected","toggleSelect","datum","imperativeTranslate","currentScaleY","selectAll","attr","LineeTramaWithMeasuresReffed","colors","tipologieByTipologia","tipologie","setYears","lastZoomedScaleYRef","useEffect","svg","scaleY","selection","select","zoom","scaleExtent","translateExtent","on","newScaleY","currentEvent","rescaleY","lowIndex","Math","max","floor","hiIndex","min","prevYears","newYears","dataByRaccontiFinal","gradientsSet","Set","out","filter","add","Array","from","dataByRacconti","raccontoData","raccontoDatum","find","toFixed","handleNexPoint","nextPoints","forEach","handlePrevPoint","xKey","setShowInfoUI","useImperativeHandle","rotateView","cb","raccontoDataIndex","findIndex","value","flyToX","scaleXBoxPlot","querySelectorAll","p","display","paths","start","animate","timestamp","k","dataFly","prevDatum","cachedResetStrokes","setAttribute","window","requestAnimationFrame","setTimeout","lastZoomScaleY","resetDPath","resettedDSubPaths","opacity","cleanUpAnimation","t","useTranslation","GradientsDefinitions","childRef","overflow","rad2","sqrt","points","Star","size","svgStyle","strokeWidth","join","scalaMotivo","colorsItems","values","sort","ordineMotivo","delta","motivi","uniqueItems","gradientUnits","tipologia","BoxPlotElement","zoomFactor","gradient","yScale","showBoxInOpacity","onGlyphoClick","bottom","top","h","widthBar","fontSize","fillOpacity","first","last","xAxisContainer","translations","setZoomFactor","actualScaleX","currentScaleX","formatAxisTick","scaleX","axisBottom","tickFormat","newScaleX","rescaleX","round","unstable_batchedUpdates","finalDataByRacconti","dataForRacconto","head","_last","uniqBy","minBy","maxBy","setShowBoxInOpacity","toggleBoxInOpacity","animationId","transition","cancelAnimationFrame","timeoutId","clearTimeout","BoxPlotGradientsDefinitions","calculateLabelScore","score","j","lenX","abs","lenY","len","parseInt","TramaDetail","onBack","detailHeight","newData","fullData","raccontiIncastonati","inkMap","groupBy","minX","maxX","inkY","startY","endY","labelsData","dataWithScore","labelData","byTypeWithScore","orderBy","concat","keepByType","mapValues","keep","splice","finalLabels","keepLabel","hoverMotivo","setHoverMotivo","onMouseEnter","onMouseLeave","SideBarItem","addBound","disabled","fromDarkItem","itemHeight","disableEvents","Number","paddingLeft","background","tramaDetail","setBounds","boundsByKey","keyBy","leftAsMyNavGridIs","outerWidth","setWidth","setCurrentWidth","addEventListener","removeEventListener","useWindowWidth","lookupMap","looks","minDatum","maxDatum","lookup","tipologieGrouped","Infinity","motiviDetail","uniq","Trans","i18nKey","ns","createContext","Trama2Content","byRacconto","setSelected","currentView","setCurrentView","sidePanelOpen","setSidePanelOpen","toggleSidePanel","orderedBounds","sortBy","bound","indexes","indenx","sel","some","fromBounds","listRef","currentTramaDetail","setCurrentTramaDetail","years","icon","faAngleDoubleRight","borderBottom","MOTIVO_LINE_HEIGHT","Provider","ordineByCluster","coloriPosizioni","get","ordine","clusterByMotivo","mappaMotivoTipologia","ordineMotivoByMotivo","datasetTmpByRacconto","datasetLines","holes","motivo","end_motivo","start_motivo","totHolesSize","hole","holesSize","datasetLinesNormalized","flatten","tot","cluster","coloreCluster","ordineCluster","startMotivoNorm","endMotivoNorm","mese","volume","fixScale","raccontiByRacconto","v","makeVizData","searchOptions","label","searchOptonsVolume","Boolean","cercaOptions","Trama2Main","helpSidePanelOpen","setHelpSidePanelOpen","setRicercaTop","setRicerca","toggleHelpSidePanel","helpPage","GlobalData","helpPages","plot","main","newRicerca","clearedBounds","findFor","console","log","HelpSidePanel","open","page","isFullPage","closeButtonClicked","MainMenu","gridColumn","PageTitle","AltOptions","options","onChange","changeOptions","newOptions","o","volumi","raccontiInVolumi","flatMap","finalRicerca","selectedOptions","MoreInfo","onClicked","CompassButton"],"mappings":"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","file":"static/js/5.9826eb89.chunk.js","sourcesContent":["import React from 'react'\nimport './MiniInfoBox.css'\n\nexport default function MiniInfoBox({ children, onClose, style }) {\n  return (\n    <div className=\"MiniInfoBox\" style={style}>\n      <div className=\"MiniInfoBox-start\">{children}</div>\n      <div className=\"MiniInfoBox-end\" onClick={onClose}>\n        &times;\n      </div>\n    </div>\n  )\n}\n","//visual helpers\nimport { scaleLinear } from \"d3-scale\";\nimport { extent } from \"d3-array\";\n\n//data management\nimport groupBy from \"lodash/groupBy\";\nimport keyBy from \"lodash/keyBy\";\nimport sortBy from \"lodash/sortBy\";\nimport uniqBy from \"lodash/uniqBy\";\nimport minBy from \"lodash/minBy\";\nimport maxBy from \"lodash/maxBy\";\nimport mapValues from \"lodash/mapValues\";\nimport get from \"lodash/get\";\nimport take from \"lodash/take\";\nimport sum from \"lodash/sum\";\nimport flatten from \"lodash/flatten\";\n\nimport datasetLines from \"./dati/dataset_lines.json\";\nimport mappaMotivoTipologia from \"./dati/mappa_motivo_tipologia.json\";\nimport coloriPosizioni from \"./dati/colori_posizioni.json\";\nimport ordineColore from \"./dati/ordine_colore_y.json\";\n\nexport const MOTIVO_LINE_HEIGHT = 50;\n\nexport const motivoExtent = extent(\n  ordineColore,\n  (item) => +item[\"ordine tipologia\"]\n);\n\nexport function makeScalaMotivoY(lineHeight) {\n  return scaleLinear().domain(motivoExtent).range([lineHeight, 0]);\n}\n\nexport function makeVizData(scaleY) {\n  const ordineByCluster = keyBy(coloriPosizioni, \"valore\");\n  const tipologie = ordineColore.map((item) => ({\n    ...item,\n    colore: get(ordineByCluster, item[\"cluster tipologia\"]),\n  }));\n  const colors = sortBy(tipologie, (item) => item.colore.ordine).map(\n    (x) => x.colore.colori\n  );\n  const tipologieByTipologia = keyBy(tipologie, (item) => item.tipologia);\n\n  const clusterByMotivo = mapValues(\n    keyBy(mappaMotivoTipologia, \"motivo_type\"),\n    (item) => item[\"cluster tipologie\"]\n  );\n  const ordineMotivoByMotivo = mapValues(\n    keyBy(ordineColore, \"tipologia\"),\n    (item) => +item[\"ordine tipologia\"]\n  );\n\n  const fixHoles = (data) => {\n    const holes = data\n      .map((item, i) => {\n        const motivo = item[\"motivo_type\"];\n        const ordineMotivo = !!get(ordineMotivoByMotivo, motivo);\n        if (ordineMotivo) {\n          return null;\n        } else {\n          return {\n            index: i,\n            len: +item.end_motivo - item.start_motivo + 1,\n          };\n        }\n      })\n      .filter((x) => !!x);\n\n    const totHolesSize = holes.reduce((acc, hole) => acc + hole.len, 0);\n\n    let out = [];\n    data.forEach((datum, i) => {\n      const motivo = datum[\"motivo_type\"];\n      const ordineMotivo = get(ordineMotivoByMotivo, motivo);\n      if (ordineMotivo !== undefined) {\n        const holesForDatum = holes.filter((item) => item.index < i);\n        const holesSize = holesForDatum.reduce(\n          (acc, hole) => acc + hole.len,\n          0\n        );\n        out.push({\n          ...datum,\n          start_motivo: +datum.start_motivo - holesSize,\n          end_motivo: +datum.end_motivo - holesSize,\n          \"tot caratteri\": +datum[\"tot caratteri\"] - totHolesSize,\n        });\n      }\n    });\n    return out;\n  };\n\n  let datasetTmpByRacconto = groupBy(datasetLines, \"titolo racconto\");\n  datasetTmpByRacconto = mapValues(datasetTmpByRacconto, fixHoles);\n  const datasetLinesFinal = flatten(Object.values(datasetTmpByRacconto));\n\n  const datasetLinesNormalized = datasetLinesFinal.map((item) => {\n    const tot = +item[\"tot caratteri\"];\n    const motivo = item[\"motivo_type\"];\n    const cluster = get(clusterByMotivo, motivo);\n    const coloreCluster = get(ordineByCluster, `[${cluster}].colori`);\n    const ordineCluster = get(ordineByCluster, `[${cluster}].ordine`);\n    const ordineMotivo = get(ordineMotivoByMotivo, motivo);\n\n    const startMotivoNorm = +item.start_motivo / tot;\n    const endMotivoNorm = +item.end_motivo / tot;\n    const y = ordineMotivo !== undefined ? scaleY(ordineMotivo) : undefined;\n    const x = (startMotivoNorm + endMotivoNorm) / 2;\n\n    return {\n      ...item,\n      startMotivoNorm,\n      endMotivoNorm,\n      cluster,\n      coloreCluster,\n      ordineCluster: ordineCluster ? +ordineCluster : undefined,\n      ordineMotivo,\n      y,\n      x,\n    };\n  });\n\n  const byRacconto = groupBy(datasetLinesNormalized, \"titolo racconto\");\n\n  let racconti = sortBy(\n    uniqBy(datasetLines, (item) => item[\"titolo racconto\"]).map((item) => ({\n      titolo: item[\"titolo racconto\"],\n      anno: item[\"anno\"],\n      mese: item[\"mese\"],\n      volume: item['titolo volume'],\n    })),\n    (item) => {\n      const anno = +item.anno;\n      const mese = +item.mese;\n\n      return `${anno.toFixed(4)}${mese.toFixed(2)}`;\n    }\n  );\n  // //#TODO: remove this (limiting for debug)\n  // racconti = take(racconti, 5)\n  //pre-computing filters\n  racconti = racconti.map((racconto) => {\n    const minDatum = minBy(\n      byRacconto[racconto.titolo],\n      (item) => item.ordineMotivo\n    );\n    const maxDatum = maxBy(\n      byRacconto[racconto.titolo],\n      (item) => item.ordineMotivo\n    );\n    const minX = byRacconto[racconto.titolo][0].x\n    const maxX = byRacconto[racconto.titolo][byRacconto[racconto.titolo].length - 1].x\n    const fixScale = scaleLinear().domain([minX, maxX]).range([0, 1])\n    // console.log(123, racconto.titolo, minDatum, maxDatum)\n    return { ...racconto, minDatum, maxDatum, minX, maxX, fixScale };\n  });\n\n\n  const raccontiByRacconto = keyBy(racconti, 'titolo')\n  const byRaccontoRemapped = mapValues(byRacconto, (values, k) => values.map(v => ({\n    ...v,\n    x: raccontiByRacconto[k].fixScale(v.x)\n\n  })))\n\n  // console.log(\"V\", byRacconto, byRaccontoRemapped)\n\n  return {\n    tipologie,\n    tipologieByTipologia,\n    colors,\n    racconti,\n    // byRacconto,\n    byRacconto: byRaccontoRemapped,\n  };\n}\n\nexport const splitPath = (d) => {\n  const pieces = d.split(\"C\");\n  const paths = pieces.reduce((acc, item, i) => {\n    if (i === 0) {\n      return acc;\n    }\n    if (i === 1) {\n      const path = pieces[0] + \"C\" + pieces[i];\n      acc.push(path);\n    } else {\n      const [a, b] = pieces[i - 1].split(\",\").reverse();\n      const path = `M${b},${a}C${pieces[i]}`;\n      acc.push(path);\n    }\n\n    return acc;\n  }, []);\n\n  return paths;\n};\n","import React from 'react'\n\nfunction GrandientsDefinitions({ prefix = '', gradientsType, byTipologia }) {\n  return (\n    <defs>\n      {gradientsType.map((gradientType) => {\n        const [tipoFromName, tipoToName] = gradientType.split('-')\n        const tipoFrom = byTipologia[tipoFromName]\n        const tipoTo = byTipologia[tipoToName]\n        return (\n          <linearGradient\n            x1=\"0\"\n            x2=\"0\"\n            y1=\"0\"\n            y2=\"1\"\n            key={gradientType}\n            id={prefix + gradientType}\n          >\n            {+tipoFrom['ordine tipologia'] > +tipoTo['ordine tipologia'] && (\n              <>\n                <stop offset=\"0%\" stopColor={tipoFrom.colore.colori}></stop>\n                <stop offset=\"100%\" stopColor={tipoTo.colore.colori}></stop>\n              </>\n            )}\n            {+tipoFrom['ordine tipologia'] < +tipoTo['ordine tipologia'] && (\n              <>\n                <stop offset=\"0%\" stopColor={tipoTo.colore.colori}></stop>\n                <stop offset=\"100%\" stopColor={tipoFrom.colore.colori}></stop>\n              </>\n            )}\n          </linearGradient>\n        )\n      })}\n    </defs>\n  )\n}\n\nexport default React.memo(GrandientsDefinitions)\n","function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport React from \"react\";\n\nvar _ref2 = /*#__PURE__*/React.createElement(\"path\", {\n  fillRule: \"evenodd\",\n  d: \"M4.646 4.646a.5.5 0 0 1 .708 0L8 7.293l2.646-2.647a.5.5 0 0 1 .708.708L8.707 8l2.647 2.646a.5.5 0 0 1-.708.708L8 8.707l-2.646 2.647a.5.5 0 0 1-.708-.708L7.293 8 4.646 5.354a.5.5 0 0 1 0-.708z\"\n});\n\nvar SvgIconClose = function SvgIconClose(_ref) {\n  var svgRef = _ref.svgRef,\n      title = _ref.title,\n      props = _objectWithoutProperties(_ref, [\"svgRef\", \"title\"]);\n\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    width: \"1em\",\n    height: \"1em\",\n    viewBox: \"0 0 16 16\",\n    className: \"bi bi-x\",\n    fill: \"currentColor\",\n    ref: svgRef\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", null, title) : null, _ref2);\n};\n\nvar ForwardRef = /*#__PURE__*/React.forwardRef(function (props, ref) {\n  return /*#__PURE__*/React.createElement(SvgIconClose, _extends({\n    svgRef: ref\n  }, props));\n});\nexport default __webpack_public_path__ + \"static/media/icon-close.4867e9f0.svg\";\nexport { ForwardRef as ReactComponent };","import React, { useRef, useState, useLayoutEffect, useContext } from 'react'\nimport { CurretTramaViewContext } from './Trama2Content'\nimport { ReactComponent as IconClose } from './icons/icon-close.svg'\n\nconst RaccontoInfoBoxSvg = ({ titolo, x, y = 0, onClick }) => {\n  const containerRef = useRef(null)\n  const [measures, setMeasures] = useState(null)\n  const view = useContext(CurretTramaViewContext)\n\n  useLayoutEffect(() => {\n    const m = containerRef.current.getBoundingClientRect()\n    setMeasures(m)\n  }, [titolo, view])\n\n  return (\n    <g\n      onClick={onClick}\n      transform={`translate(${x}, ${y})`}\n      style={{ cursor: 'pointer' }}\n    >\n      {measures && (\n        <g transform={`translate(${-measures.width - 40}, -15)`}>\n          <rect\n            height={22}\n            width={measures.width + 35}\n            className=\"trama2-info-box\"\n          />\n          <line\n            x1={measures.width + 18}\n            x2={measures.width + 18}\n            y1={0}\n            y2={22}\n            className=\"trama2-info-box\"\n          />\n          <IconClose x={measures.width+20} y={5} />\n        </g>\n      )}\n      <text\n        ref={containerRef}\n        x={-30}\n        y={0}\n        style={{ textAnchor: 'end', userSelect: 'none' }}\n      >\n        {titolo}\n      </text>\n    </g>\n  )\n}\n\nexport default RaccontoInfoBoxSvg\n","function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport React from \"react\";\n\nvar _ref2 = /*#__PURE__*/React.createElement(\"path\", {\n  fillRule: \"evenodd\",\n  d: \"M11.354 1.646a.5.5 0 0 1 0 .708L5.707 8l5.647 5.646a.5.5 0 0 1-.708.708l-6-6a.5.5 0 0 1 0-.708l6-6a.5.5 0 0 1 .708 0z\"\n});\n\nvar SvgChevronLeft = function SvgChevronLeft(_ref) {\n  var svgRef = _ref.svgRef,\n      title = _ref.title,\n      props = _objectWithoutProperties(_ref, [\"svgRef\", \"title\"]);\n\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    width: \"1em\",\n    height: \"1em\",\n    viewBox: \"0 0 16 16\",\n    className: \"bi bi-chevron-left\",\n    fill: \"currentColor\",\n    ref: svgRef\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", null, title) : null, _ref2);\n};\n\nvar ForwardRef = /*#__PURE__*/React.forwardRef(function (props, ref) {\n  return /*#__PURE__*/React.createElement(SvgChevronLeft, _extends({\n    svgRef: ref\n  }, props));\n});\nexport default __webpack_public_path__ + \"static/media/chevron-left.83785ce4.svg\";\nexport { ForwardRef as ReactComponent };","function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport React from \"react\";\n\nvar _ref2 = /*#__PURE__*/React.createElement(\"path\", {\n  fillRule: \"evenodd\",\n  d: \"M4.646 1.646a.5.5 0 0 1 .708 0l6 6a.5.5 0 0 1 0 .708l-6 6a.5.5 0 0 1-.708-.708L10.293 8 4.646 2.354a.5.5 0 0 1 0-.708z\"\n});\n\nvar SvgChevronRight = function SvgChevronRight(_ref) {\n  var svgRef = _ref.svgRef,\n      title = _ref.title,\n      props = _objectWithoutProperties(_ref, [\"svgRef\", \"title\"]);\n\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    width: \"1em\",\n    height: \"1em\",\n    viewBox: \"0 0 16 16\",\n    className: \"bi bi-chevron-right\",\n    fill: \"currentColor\",\n    ref: svgRef\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", null, title) : null, _ref2);\n};\n\nvar ForwardRef = /*#__PURE__*/React.forwardRef(function (props, ref) {\n  return /*#__PURE__*/React.createElement(SvgChevronRight, _extends({\n    svgRef: ref\n  }, props));\n});\nexport default __webpack_public_path__ + \"static/media/chevron-right.14560c10.svg\";\nexport { ForwardRef as ReactComponent };","import React, { useState } from 'react'\nimport Draggable from 'react-draggable'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faArrowLeft, faArrowRight } from '@fortawesome/free-solid-svg-icons'\nimport { ReactComponent as FaLeft } from './icons/chevron-left.svg'\nimport { ReactComponent as FaRight } from './icons/chevron-right.svg'\n\nexport const BRUSH_HANDLE_WIDTH = 12\nconst Brush = React.memo(({\n  width,\n  onNextClick,\n  onPrevClick,\n  x: controlledX,\n  onXChange,\n  className = 'trama2-brush-container',\n}) => {\n  const [uncontrolledX, setX] = useState(width - BRUSH_HANDLE_WIDTH / 2)\n  const x = controlledX === undefined ? uncontrolledX : controlledX\n\n  return (\n    <>\n      <div\n        style={{\n          transform: `translateX(${x + BRUSH_HANDLE_WIDTH / 2}px)`,\n        }}\n        className=\"trama2-index-line\"\n      />\n      <div className={`${className} trama2-brush-container-flex`}>\n        <button\n          className=\"trama2-brush-button trama2-prev-brush-button\"\n          onClick={() => {\n            if (controlledX !== undefined) {\n              onPrevClick()\n              return\n            }\n            onPrevClick(x + BRUSH_HANDLE_WIDTH / 2, (rawNextX) => {\n              const nextX = rawNextX - BRUSH_HANDLE_WIDTH / 2\n              if (nextX >= 0 && x <= width - BRUSH_HANDLE_WIDTH / 2) {\n                setX(nextX)\n              }\n            })\n          }}\n        >\n          <FaLeft height='19' width='19' />\n        </button>\n        <div className=\"trama2-list-brush\">\n          <Draggable\n            axis=\"x\"\n            position={{ x, y: 0 }}\n            bounds={{\n              left: 0,\n              right: width - BRUSH_HANDLE_WIDTH / 2,\n            }}\n            onDrag={(e, position) => {\n              if (controlledX === undefined) {\n                setX(position.x)\n              } else {\n                onXChange(position.x)\n              }\n            }}\n          >\n            <div className=\"trama2-drag-handle\" />\n          </Draggable>\n        </div>\n        <button\n          className=\"trama2-brush-button trama2-next-brush-button\"\n          onClick={() => {\n            if (controlledX !== undefined) {\n              onNextClick()\n              return\n            }\n            onNextClick(x + BRUSH_HANDLE_WIDTH / 2, (rawNextX) => {\n              const nextX = rawNextX - BRUSH_HANDLE_WIDTH / 2\n              if (nextX >= 0 && x <= width - BRUSH_HANDLE_WIDTH / 2) {\n                setX(nextX)\n              }\n            })\n          }}\n        >\n          <FaRight height='19' width='19' />\n        </button>\n      </div>\n    </>\n  )\n})\nexport default Brush","import ReactDOM from \"react-dom\"\nimport { useTranslation } from \"react-i18next\"\nimport React, {\n  useRef,\n  useState,\n  useMemo,\n  useCallback,\n  useEffect,\n  useLayoutEffect,\n  useImperativeHandle,\n  forwardRef,\n} from \"react\"\nimport { line, curveMonotoneX, curveStep } from \"d3-shape\"\nimport { scaleLinear } from \"d3-scale\"\nimport { zoom } from \"d3-zoom\"\nimport { select, selectAll, event as currentEvent } from \"d3-selection\"\n\nimport range from \"lodash/range\"\nimport find from \"lodash/find\"\nimport findIndex from \"lodash/findIndex\"\n\nimport { splitPath, makeScalaMotivoY } from \"./utils\"\nimport GradientsDefinitions from \"./GradientsDefinitions\"\nimport RaccontoInfoBoxSvg from \"./RaccontoInfoBoxSvg\"\nimport Brush, { BRUSH_HANDLE_WIDTH } from \"./Brush\"\n\nconst lineGenerator = line()\n  .x((d) => d.x)\n  .y((d) => d.y)\n  .curve(curveMonotoneX)\n\nconst SubPathsWithColors = React.memo(({ subPaths, data, itemSelected }) => {\n  return (\n    <g>\n      {subPaths.map((subPath, i) => {\n        const isFill = data[i + 1].motivo_type === data[i].motivo_type\n        const strokeSelected = isFill\n          ? data[i].colori\n          : `url('#${data[i + 1].motivo_type}-${data[i].motivo_type}')`\n        return (\n          <path\n            key={i}\n            d={subPath}\n            className=\"trama2-line\"\n            style={{\n              stroke: itemSelected ? strokeSelected : \"#ddd\",\n              fill: \"none\",\n            }}\n          ></path>\n        )\n      })}\n    </g>\n  )\n})\n\nconst TramaPoints = React.memo(({ data }) => {\n  return (\n    <g className=\"trama2-pointz\">\n      {data.map((d, i) => {\n        if (i === 0) {\n          return (\n            <rect key={i} x={d.x} y={d.y} className=\"trama2-start-symbol\">\n              <title>{d.motivo_type}</title>\n            </rect>\n          )\n        }\n        if (i === data.length - 1) {\n          return (\n            <rect\n              key={i}\n              x={d.x}\n              y={d.y}\n              style={{\n                transformOrigin: `${d.x}px ${d.y}px`,\n              }}\n              className=\"trama2-end-symbol\"\n            >\n              <title>{d.motivo_type}</title>\n            </rect>\n          )\n        }\n        return (\n          <circle className=\"trama2-circle\" key={i} cx={d.x} cy={d.y} r={2}>\n            <title>{d.motivo_type}</title>\n          </circle>\n        )\n      })}\n    </g>\n  )\n})\n\nconst LineaTrama = React.memo(\n  ({\n    racconto,\n    data,\n    xScale,\n    selectedPoint,\n    width,\n    height,\n    index,\n    setFindFor,\n    ricerca,\n    itemSelected,\n    toggleItem,\n    onRaccontoClick,\n    showInfoUI = true,\n  }) => {\n    const [d, subPaths] = useMemo(() => {\n      const d = lineGenerator(data)\n      const subPaths = splitPath(d)\n      return [d, subPaths]\n    }, [data])\n\n    const handleClickRacconto = useCallback(\n      (e) => {\n        onRaccontoClick(data, e)\n      },\n      [onRaccontoClick, data]\n    )\n\n    const element = (\n      <g data-subracconto={data.racconto.titolo}>\n        <SubPathsWithColors\n          subPaths={subPaths}\n          data={data}\n          itemSelected={itemSelected}\n        />\n        <path\n          d={d}\n          onClick={() => {\n            setFindFor(\"titolo\")\n            toggleItem(racconto.titolo)\n          }}\n          className={`trama2-pointer ${itemSelected ? \"selected\" : \"\"}`}\n        ></path>\n\n        {itemSelected && (\n          <g>\n            <TramaPoints data={data} />\n            {showInfoUI && (\n              <RaccontoInfoBoxSvg\n                onClick={handleClickRacconto}\n                y={-10}\n                x={width}\n                titolo={`${data.racconto.titolo}, ${data.racconto.anno}`}\n              />\n            )}\n          </g>\n        )}\n        {selectedPoint && showInfoUI && (\n          <g>\n            <text\n              style={{\n                transformOrigin: `${selectedPoint.x}px ${selectedPoint.y}px`,\n                transform:\n                  selectedPoint.originalX < 0.2\n                    ? \"rotate(30deg) translate(5px, 5px)\"\n                    : `rotate(-30deg) translateX(-10px)`,\n              }}\n              x={selectedPoint.x}\n              y={selectedPoint.y}\n              textAnchor={selectedPoint.originalX < 0.2 ? \"start\" : \"end\"}\n            >\n              {selectedPoint.motivo_type}\n            </text>\n          </g>\n        )}\n      </g>\n    )\n    if (itemSelected) {\n      return ReactDOM.createPortal(\n        element,\n        document.getElementsByClassName(\"linea-container-selected\")[index]\n      )\n    }\n    return element\n  }\n)\n\nconst SelectedContainers = React.memo(({ n }) => {\n  return (\n    <g>\n      {range(n).map((i) => (\n        <g key={i} className=\"linea-container-selected\" />\n      ))}\n    </g>\n  )\n})\n\nconst LineeTramaList = React.memo(\n  ({\n    measures,\n    dataRacconti,\n    currentXHoverRacconti,\n    racconti,\n    onRaccontoClick,\n    height,\n    scalaColore,\n    setFindFor,\n    ricerca,\n    scalaMotivoY,\n    selected,\n    toggleSelect,\n    xScale,\n    showInfoUI = true,\n  }) => {\n    return (\n      <g>\n        {dataRacconti.map((datum, i) => {\n          return (\n            <g key={i} className=\"linea-container\">\n              <LineaTrama\n                selectedPoint={\n                  currentXHoverRacconti &&\n                  currentXHoverRacconti[racconti[i].titolo]\n                    ? currentXHoverRacconti[racconti[i].titolo]\n                    : null\n                }\n                onRaccontoClick={onRaccontoClick}\n                scalaColore={scalaColore}\n                setFindFor={setFindFor}\n                ricerca={ricerca}\n                scalaMotivoY={scalaMotivoY}\n                index={i}\n                width={measures.width}\n                height={height}\n                itemSelected={selected[racconti[i].titolo]}\n                toggleItem={toggleSelect}\n                xScale={xScale}\n                racconto={racconti[i]}\n                data={datum}\n                showInfoUI={showInfoUI}\n              ></LineaTrama>\n            </g>\n          )\n        })}\n      </g>\n    )\n  }\n)\n\nconst HORIZ_PADDING = 20\n\nfunction imperativeTranslate(currentScaleY) {\n  selectAll(\".linea-container\").attr(\n    \"transform\",\n    (d, i) => \"translate(0, \" + currentScaleY(i) + \")\"\n  )\n  selectAll(\".linea-container-selected\").attr(\n    \"transform\",\n    (d, i) => \"translate(0, \" + currentScaleY(i) + \")\"\n  )\n}\n\nfunction LineeTramaWithMeasures(\n  {\n    racconti = [],\n    data = {},\n    height,\n    scalaColore,\n    scalaMotivoY,\n    colors,\n    setFindFor,\n    ricerca,\n    selected,\n    toggleSelect,\n    onRaccontoClick,\n    tipologie,\n    tipologieByTipologia,\n    setYears,\n    measures,\n  },\n  ref\n) {\n  const svgRef = useRef(null)\n  const lastZoomedScaleYRef = useRef(null)\n\n  useEffect(() => {\n    if (measures) {\n      const svg = svgRef.current\n      const scaleY = scaleLinear()\n        .domain([0, racconti.length])\n        .range([0 + height, measures.height - height])\n\n      imperativeTranslate(scaleY)\n\n      function handleZoom() {\n        const newScaleY = currentEvent.transform.rescaleY(scaleY)\n        lastZoomedScaleYRef.current = newScaleY\n        imperativeTranslate(newScaleY)\n\n        const domain = newScaleY.domain()\n        const lowIndex = Math.max(0, Math.floor(domain[0]))\n        const hiIndex = Math.min(racconti.length - 1, Math.floor(domain[1]))\n\n        setYears((prevYears) => {\n          const newYears = [racconti[lowIndex].anno, racconti[hiIndex].anno]\n          if (newYears[0] !== prevYears[0] || newYears[1] !== prevYears[1]) {\n            return newYears\n          }\n          return prevYears\n        })\n      }\n\n      const selection = select(svg)\n      selection.call(\n        zoom()\n          .scaleExtent([1, 10])\n          .translateExtent([\n            [0, 0],\n            [measures.width, measures.height],\n          ])\n          .on(\"zoom\", handleZoom)\n      )\n      return () => {\n        selection.on(\".zoom\", null)\n      }\n    }\n  }, [height, measures, racconti, setYears])\n\n  const xScale = useMemo(() => {\n    if (!measures) {\n      return null\n    }\n    return scaleLinear()\n      .domain([0, 1])\n      .range([HORIZ_PADDING, measures.width - HORIZ_PADDING])\n  }, [measures])\n\n  const [dataRacconti, dataByRacconti, gradientsType] = useMemo(() => {\n    if (!xScale) {\n      return [[], []]\n    }\n    const dataByRaccontiFinal = {}\n    const gradientsSet = new Set()\n    const finalDataRacconti = racconti.map((racconto) => {\n      let out = data[racconto.titolo].filter((d) => d.y !== undefined)\n      out = out.map((d, i) => {\n        if (i > 0) {\n          gradientsSet.add(d.motivo_type + \"-\" + out[i - 1].motivo_type)\n        }\n        return {\n          ...d,\n          colori: tipologieByTipologia[d.motivo_type].colore.colori,\n          originalX: d.x,\n          x: xScale(d.x),\n          y: d.y,\n        }\n      })\n      out.racconto = racconto\n      dataByRaccontiFinal[racconto.titolo] = out\n      return out\n    })\n    return [finalDataRacconti, dataByRaccontiFinal, Array.from(gradientsSet)]\n  }, [data, racconti, xScale, tipologieByTipologia])\n\n  const [x, setX] = useState(measures.width - BRUSH_HANDLE_WIDTH / 2)\n\n  useEffect(() => {\n    const initialTitle = \"Il cavaliere inesistente\"\n    const raccontoData = dataByRacconti[initialTitle]\n    const raccontoDatum = find(raccontoData, (datum) => {\n      if (\n        datum.originalX.toFixed(2) === \"0.77\" &&\n        datum.motivo_type === \"viaggio\"\n      ) {\n        return true\n      }\n      return false\n    })\n    if (raccontoDatum) {\n      setX(+raccontoDatum.x - BRUSH_HANDLE_WIDTH / 2)\n    }\n    toggleSelect(initialTitle)\n  }, [toggleSelect, dataByRacconti])\n\n  const handleNexPoint = useCallback(() => {\n    const nextPoints = Object.keys(selected).reduce((acc, titolo) => {\n      const dataTrama = dataByRacconti[titolo]\n      dataTrama.forEach((datum) => {\n        if (datum.x > x + BRUSH_HANDLE_WIDTH / 2) {\n          acc.push(datum.x)\n        }\n      })\n      return acc\n    }, [])\n    if (nextPoints.length) {\n      const nextX = Math.min(...nextPoints) - BRUSH_HANDLE_WIDTH / 2\n      if (nextX >= 0 && x <= measures.width - BRUSH_HANDLE_WIDTH / 2) {\n        setX(nextX)\n      }\n    }\n  }, [dataByRacconti, measures, selected, x])\n\n  const handlePrevPoint = useCallback(() => {\n    const nextPoints = Object.keys(selected).reduce((acc, titolo) => {\n      const dataTrama = dataByRacconti[titolo]\n      dataTrama.forEach((datum) => {\n        if (datum.x < x + BRUSH_HANDLE_WIDTH / 2) {\n          acc.push(datum.x)\n        }\n      })\n      return acc\n    }, [])\n    if (nextPoints.length) {\n      const nextX = Math.max(...nextPoints) - BRUSH_HANDLE_WIDTH / 2\n      if (nextX >= 0 && x <= measures.width - BRUSH_HANDLE_WIDTH / 2) {\n        setX(nextX)\n      }\n    }\n  }, [dataByRacconti, selected, measures, x])\n\n  const trameByPoints = useMemo(() => {\n    return Object.keys(selected).reduce((acc, titolo) => {\n      const racconto = dataByRacconti[titolo]\n      racconto.forEach((datum) => {\n        const xKey = datum.x.toFixed(0)\n        acc[xKey] = acc[xKey] || {}\n        acc[xKey][titolo] = {\n          motivo_type: datum.motivo_type,\n          originalX: datum.originalX,\n          x: datum.x,\n          y: datum.y,\n        }\n      })\n      return acc\n    }, {})\n  }, [selected, dataByRacconti])\n\n  const xPoint = +x.toFixed(0) + BRUSH_HANDLE_WIDTH / 2\n  const currentXHoverRacconti = trameByPoints[xPoint]\n\n  const [showInfoUI, setShowInfoUI] = useState(true)\n  useImperativeHandle(ref, () => ({\n    rotateView: (cb) => {\n      // TURN OFF UGLY UI INFO 4 ANIMATION\n      setShowInfoUI(false)\n\n      const scaleYOriginal = scaleLinear()\n        .domain([0, racconti.length])\n        .range([0 + height, measures.height - height])\n      imperativeTranslate(scaleYOriginal)\n\n      if (ricerca) {\n        ricerca.forEach((element) => {\n          const raccontoDataIndex = findIndex(\n            dataRacconti,\n            (r) => r.racconto.titolo === element.value\n          )\n\n          const raccontoData = dataRacconti[raccontoDataIndex]\n\n          const scaleXBoxPlot = scaleLinear()\n            .domain([0, racconti.length])\n            .range([10, measures.width - 10])\n\n          const flyToX = scaleXBoxPlot(raccontoDataIndex)\n\n          document\n            .querySelectorAll(\n              '[data-subracconto=\"' + element.value + '\"] .trama2-pointz'\n            )\n            .forEach((p) => (p.style.display = \"none\"))\n          const paths = document.querySelectorAll(\n            '[data-subracconto=\"' + element.value + '\"] path.trama2-line'\n          )\n          let scaleMotivo = makeScalaMotivoY(600)\n          scaleMotivo.range([-200, 400])\n\n          let start = null\n          function animate(timestamp) {\n            if (start === null) {\n              start = timestamp\n            }\n            const k = (timestamp - start) / 1500\n\n            const dataFly = []\n            for (let i = 1; i < raccontoData.length; i++) {\n              const prevDatum = raccontoData[i - 1]\n              const datum = raccontoData[i]\n\n              // const y1 = prevDatum.y * (1 - k) + k * 25\n              // const y2 = datum.y * (1 - k) + k * 25\n              const y1 = prevDatum.y\n              const y2 = datum.y\n\n              const x1 = prevDatum.x * (1 - k) + k * flyToX\n              const x2 = datum.x * (1 - k) + k * flyToX\n\n              dataFly.push(`M ${x1} ${y1} L ${x2} ${y2}`)\n            }\n            paths.forEach((path, i) => {\n              cachedResetStrokes[i] = path.style.stroke\n              path.setAttribute(\"d\", dataFly[i])\n            })\n\n            if (k < 1) {\n              window.requestAnimationFrame(animate)\n            } else {\n              start = null\n              setTimeout(() => {\n                cb()\n                cleanUpAnimation(element.value)\n              }, 50)\n              // window.requestAnimationFrame(animate2)\n            }\n          }\n\n          const cachedResetStrokes = []\n\n          function cleanUpAnimation(racconto) {\n            // CLEAN UP ANIMATION\n\n            // SHOW INFO UI\n            setShowInfoUI(true)\n\n            // RESET ZOOM STATE\n            const lastZoomScaleY = lastZoomedScaleYRef.current\n            if (lastZoomScaleY) {\n              imperativeTranslate(lastZoomScaleY)\n            }\n            // RESET SELECTED LINE\n            const resetDPath = lineGenerator(raccontoData)\n            const resettedDSubPaths = splitPath(resetDPath)\n            paths.forEach((path, i) => {\n              path.setAttribute(\"d\", resettedDSubPaths[i])\n              path.style.stroke = cachedResetStrokes[i]\n            })\n            // Reset opacity\n            document\n              .querySelectorAll(\n                '[data-subracconto]:not([data-subracconto=\"' +\n                  racconto +\n                  '\"]) path.trama2-line'\n              )\n              .forEach((p) => (p.style.opacity = \"1\"))\n            // Show Points\n            document\n              .querySelectorAll(\n                '[data-subracconto=\"' + racconto + '\"] .trama2-pointz'\n              )\n              .forEach((p) => (p.style.display = \"initial\"))\n          }\n\n          document\n            .querySelectorAll(\n              '[data-subracconto]:not([data-subracconto=\"'+element.value+'\"]) path.trama2-line'\n            )\n            .forEach((p) => (p.style.opacity = \"0.1\"))\n\n          setTimeout(() => {\n            window.requestAnimationFrame(animate)\n          }, 800)\n        })\n      }\n\n      // Hide Points\n\n      // Opacity lines\n    },\n  }))\n\n  const { t } = useTranslation(\"trama\")\n\n  return (\n    <>\n      <div className=\"trama2-top-legend-list\">{t(\"scrolla_per_zoomare\")}</div>\n      <svg\n        style={{\n          height: measures.height,\n          width: measures.width,\n        }}\n        ref={svgRef}\n      >\n        <GradientsDefinitions\n          byTipologia={tipologieByTipologia}\n          gradientsType={gradientsType}\n        />\n        <g className=\"wrapper\">\n          <LineeTramaList\n            measures={measures}\n            dataRacconti={dataRacconti}\n            currentXHoverRacconti={currentXHoverRacconti}\n            racconti={racconti}\n            onRaccontoClick={onRaccontoClick}\n            height={height}\n            scalaColore={scalaColore}\n            setFindFor={setFindFor}\n            ricerca={ricerca}\n            scalaMotivoY={scalaMotivoY}\n            selected={selected}\n            toggleSelect={toggleSelect}\n            xScale={xScale}\n            showInfoUI={showInfoUI}\n          />\n          <SelectedContainers n={dataRacconti.length} />\n        </g>\n      </svg>\n      {showInfoUI && (\n        <Brush\n          x={x}\n          onXChange={setX}\n          onPrevClick={handlePrevPoint}\n          onNextClick={handleNexPoint}\n          width={measures.width}\n          className=\"trama2-brush-for-list\"\n        />\n      )}\n      <div className=\"trama2-brush-legend-list\">\n        <div>{t(\"inizio_del_testo\")}</div>\n        <div>{t(\"lunghezza_del_testo\")}</div>\n        <div>{t(\"fine_del_testo\")}</div>\n      </div>\n    </>\n  )\n}\n\nlet LineeTramaWithMeasuresReffed = forwardRef(LineeTramaWithMeasures)\n\nfunction LineeTrama(props, ref) {\n  const containerRef = useRef(null)\n  const [measures, setMeasures] = useState(null)\n\n  useLayoutEffect(() => {\n    const m = containerRef.current.getBoundingClientRect()\n    setMeasures(m)\n  }, [])\n\n  const childRef = useRef(null)\n\n  useImperativeHandle(ref, () => ({\n    rotateView: (cb) => {\n      childRef.current.rotateView(cb)\n      // const scaleY = scaleLinear()\n      //   .domain([0, racconti.length])\n      //   .range([0 + height, measures.height - height])\n\n      // const mainTransition = selectAll('.linea-container')\n      //   .transition()\n      //   .duration(1000)\n      //   .attr('transform', (d, i) => 'translate(0, ' + scaleY(i) + ')')\n      //   .end()\n\n      // const selectedTransition = selectAll('.linea-container-selected')\n      //   .transition()\n      //   .duration(1000)\n      //   .attr('transform', (d, i) => 'translate(0, ' + scaleY(i) + ')')\n      //   .end()\n\n      // Promise.all([mainTransition, selectedTransition]).then(cb)\n    },\n  }))\n\n  return (\n    <div\n      ref={containerRef}\n      className=\"w-100 h-100\"\n      style={{ overflow: \"hidden\" }}\n    >\n      {measures && (\n        <LineeTramaWithMeasuresReffed\n          ref={childRef}\n          {...props}\n          setFindFor={props.setFindFor}\n          ricerca={props.ricerca}\n          measures={measures}\n        />\n      )}\n    </div>\n  )\n}\n\nexport default React.memo(forwardRef(LineeTrama))\n","import React from 'react'\n\nconst rad2 = Math.sqrt(2)\nconst points = [\n  [0, 50 * rad2],\n  [50 * (rad2 - 1), 50],\n  [50, 50],\n  [50, 50 * (rad2 - 1)],\n\n  [50 * rad2, 0],\n  [50, 50 * (1 - rad2)],\n  [50, -50],\n  [50 * (rad2 - 1), -50],\n  [0, -50 * rad2],\n\n  [50 * (1 - rad2), -50],\n  [-50, -50],\n  [-50, 50 * (1 - rad2)],\n  [-50 * rad2, 0],\n\n  [-50, 50 * (rad2 - 1)],\n  [-50, 50],\n  [50 * (1 - rad2), 50],\n  [0, 50 * rad2],\n]\n\nexport default function Star({ size, style, className, svgStyle, ...props }) {\n  const strokeWidth = (100 * rad2) / size\n\n  const move = `M ${points[0][0]} ${points[0][1]} L`\n  const lines = points.map(([x, y]) => `${x} ${y}`).join(' L ')\n  const d = move + lines\n  return (\n    <svg\n      style={svgStyle}\n      viewBox={`${-50 * rad2} ${-50 * rad2} ${100 * rad2} ${100 * rad2}`}\n      width={size}\n      height={size}\n      {...props}\n    >\n      <path\n        strokeWidth={strokeWidth}\n        stroke=\"#000\"\n        className={className}\n        style={style}\n        d={d}\n      />\n    </svg>\n  )\n}\n","import React from 'react'\n\nfunction BoxPlotGrandientsDefinitions({ prefix = '', gradientsType, byTipologia, scalaMotivo, height }) {\n\n  const colorsItems = Object.values(byTipologia).sort(item => +item.ordineMotivo)\n  const delta = 100 / (colorsItems.length - 1)\n\n  return (\n    <defs>\n      {gradientsType.map(({racconto, uniqueItems}) => {\n\n\n\n\n        const motivi = uniqueItems.map(item => item.motivo_type)\n\n\n        return (\n          <linearGradient\n            x1=\"0\"\n            x2=\"0\"\n            y1=\"0\"\n            y2={height}\n            key={racconto.titolo}\n            id={prefix + racconto.titolo}\n            gradientUnits={'userSpaceOnUse'}\n          >\n            {colorsItems.map((item, i) => {\n              if(motivi.indexOf(item.tipologia) === -1){\n                return null\n              }\n              return <stop key={i} offset={`${delta*i}%`} stopColor={item.colore.colori}>\n\n\n              </stop>\n            })}\n            {/* <stop offset=\"0%\" stopColor=\"#000\"></stop>\n            <stop offset=\"100%\" stopColor=\"#fff\"></stop> */}\n            {/* {+tipoFrom['ordine tipologia'] > +tipoTo['ordine tipologia'] && (\n              <>\n                <stop offset=\"0%\" stopColor={tipoFrom.colore.colori}></stop>\n                <stop offset=\"100%\" stopColor={tipoTo.colore.colori}></stop>\n              </>\n            )}\n            {+tipoFrom['ordine tipologia'] < +tipoTo['ordine tipologia'] && (\n              <>\n                <stop offset=\"0%\" stopColor={tipoTo.colore.colori}></stop>\n                <stop offset=\"100%\" stopColor={tipoFrom.colore.colori}></stop>\n              </>\n            )} */}\n          </linearGradient>\n        )\n      })}\n    </defs>\n  )\n}\n\nexport default React.memo(BoxPlotGrandientsDefinitions)\n","import ReactDOM from 'react-dom'\nimport React, {\n  useRef,\n  useState,\n  useMemo,\n  useCallback,\n  useEffect,\n  useLayoutEffect,\n  forwardRef,\n} from 'react'\nimport { scaleLinear, scaleTime } from 'd3-scale'\nimport { zoom } from 'd3-zoom'\nimport { select, selectAll, event as currentEvent } from 'd3-selection'\nimport { axisBottom } from 'd3-axis'\nimport Star from './Star'\n\nimport head from 'lodash/head'\nimport _last from 'lodash/last'\nimport uniqBy from 'lodash/uniqBy'\nimport minBy from 'lodash/minBy'\nimport maxBy from 'lodash/maxBy'\n\nimport { motivoExtent } from './utils'\nimport BoxPlotGradientsDefinitions from './BoxPlotGradientsDefinitions'\nimport Brush from './Brush'\n\nconst BASE_WIDTH_BAR = 5\n\nconst BoxPlotElement = React.memo(\n  ({\n    zoomFactor,\n    racconto,\n    data,\n    xScale,\n    width,\n    height,\n    index,\n    gradient,\n    itemSelected,\n    toggleItem,\n    yScale,\n    onRaccontoClick,\n    showBoxInOpacity,\n    onGlyphoClick,\n  }) => {\n    const handleClickRacconto = useCallback(\n      (e) => {\n        onRaccontoClick(data, e)\n      },\n      [onRaccontoClick, data]\n    )\n\n    const bottom = yScale(data.min.ordineMotivo)\n    const top = yScale(data.max.ordineMotivo)\n    const h = bottom - top\n\n    const fill = itemSelected ? `url(\"#${data.racconto.titolo}\")` : '#ddd'\n    const widthBar = BASE_WIDTH_BAR * zoomFactor\n\n    return (\n      <g>\n        {itemSelected && (\n          <text\n            style={{ transform: 'rotate(-30deg)', fontSize: 12 }}\n            x={0}\n            y={0}\n          >\n            {data.racconto.titolo}\n          </text>\n        )}\n        <rect\n          width={widthBar}\n          height={h}\n          y={top}\n          style={{ fill }}\n          onClick={() => toggleItem(data.racconto.titolo)}\n          stroke=\"#ccc\"\n          fillOpacity={0.6}\n        >\n          <title>{data.racconto.titolo}</title>\n        </rect>\n\n        {itemSelected && showBoxInOpacity && (\n          <g>\n            <rect\n              width={widthBar}\n              className=\"trama2-box-plot-partial-hide-bar\"\n              y={top}\n              height={\n                Math.min(\n                  yScale(data.first.ordineMotivo),\n                  yScale(data.last.ordineMotivo)\n                ) - top\n              }\n            />\n            <rect\n              width={widthBar}\n              className=\"trama2-box-plot-partial-hide-bar\"\n              y={Math.max(\n                yScale(data.first.ordineMotivo),\n                yScale(data.last.ordineMotivo)\n              )}\n              height={\n                bottom -\n                Math.max(\n                  yScale(data.first.ordineMotivo),\n                  yScale(data.last.ordineMotivo)\n                )\n              }\n            />\n          </g>\n        )}\n\n        {data.first.ordineMotivo === data.last.ordineMotivo ? (\n          <g\n            transform={`translate(${(widthBar * (1 - Math.sqrt(2))) / 2}, ${\n              yScale(data.first.ordineMotivo) - widthBar / 2\n            })`}\n          >\n            <Star\n              svgStyle={{ cursor: 'pointer' }}\n              onClick={() => {\n                toggleItem(data.racconto.titolo)\n                onGlyphoClick()\n              }}\n              size={widthBar * Math.sqrt(2)}\n              className=\"trama2-box-plot-same-start-end-symbol\"\n            />\n          </g>\n        ) : (\n          <g>\n            <rect\n              style={{\n                cursor: 'pointer',\n              }}\n              onClick={() => {\n                toggleItem(data.racconto.titolo)\n                onGlyphoClick()\n              }}\n              width={widthBar}\n              height={widthBar}\n              className=\"trama2-box-plot-start-symbol\"\n              y={yScale(data.first.ordineMotivo) - widthBar / 2}\n            ></rect>\n            <rect\n              onClick={onGlyphoClick}\n              width={widthBar}\n              height={widthBar}\n              className=\"trama2-box-plot-end-symbol\"\n              y={yScale(data.last.ordineMotivo) - widthBar / 2}\n              style={{\n                cursor: 'pointer',\n                transformOrigin: `0px ${\n                  yScale(data.last.ordineMotivo) + widthBar / 4\n                }px`,\n              }}\n            ></rect>\n          </g>\n        )}\n      </g>\n    )\n  }\n)\n\nfunction BoxPlot(\n  {\n    racconti = [],\n    data = {},\n    height,\n    scalaColore,\n    colors,\n    selected,\n    toggleSelect,\n    onRaccontoClick,\n    tipologie,\n    tipologieByTipologia,\n  },\n  ref\n) {\n  const containerRef = useRef(null)\n  const svgRef = useRef(null)\n  const xAxisContainer = useRef()\n  const [measures, setMeasures] = useState(null)\n  const [translations, setTranslations] = useState([])\n  const [zoomFactor, setZoomFactor] = useState(1)\n\n  const actualScaleX = useRef(null)\n\n  useLayoutEffect(() => {\n    const m = containerRef.current.getBoundingClientRect()\n    setMeasures(m)\n  }, [])\n\n  useEffect(() => {\n    function declarativeTranslate(currentScaleX) {\n      const newTranslates = racconti.map((r, i) => {\n        return 'translate(' + currentScaleX(i) + ', 0)'\n      })\n      setTranslations(newTranslates)\n    }\n\n    function imperativeTranslate(currentScaleX) {\n      selectAll('.box-racconto-container').attr(\n        'transform',\n        (d, i) => 'translate(' + currentScaleX(i) + ', 0)'\n      )\n    }\n\n    function formatAxisTick(i) {\n      return racconti[i].anno\n    }\n\n    // const maTicks = uniqBy(\n    //   racconti.map((r, i) => ({ ...r, index: i })),\n    //   'anno'\n    // ).map((r) => r.index)\n\n    if (measures) {\n      const svg = svgRef.current\n      const scaleX = scaleLinear()\n        .domain([0, racconti.length])\n        .range([10, measures.width - 10])\n\n      actualScaleX.current = scaleX\n      imperativeTranslate(scaleX)\n      // declarativeTranslate(scaleY)\n\n      function handleZoom() {\n        const newScaleX = currentEvent.transform.rescaleX(scaleX)\n        imperativeTranslate(newScaleX)\n        const zoomFactor = Math.round(currentEvent.transform.k / 2)\n\n        // const domain = newScaleX.domain()\n        // const lowIndex = Math.max(0, Math.floor(domain[0]))\n        // const hiIndex = Math.min(racconti.length - 1, Math.floor(domain[1]))\n        const batchUpdates = ReactDOM.unstable_batchedUpdates || ((cb) => cb())\n        batchUpdates(() => {\n          setZoomFactor(zoomFactor)\n          // setYears((prevYears) => {\n          //   const newYears = [racconti[lowIndex].anno, racconti[hiIndex].anno]\n          //   if (newYears[0] !== prevYears[0] || newYears[1] !== prevYears[1]) {\n          //     return newYears\n          //   }\n          //   return prevYears\n          // })\n        })\n        actualScaleX.current = newScaleX\n        // declarativeTranslate(newScaleX)\n\n        // AXIS Rescale...\n        const axis = axisBottom(newScaleX)\n        axis.tickFormat(formatAxisTick)\n        // axis.tickValues(maTicks)\n        select(xAxisContainer.current).call(axis)\n      }\n\n      const axis = axisBottom(scaleX)\n\n      axis.tickFormat(formatAxisTick)\n      // axis.tickValues(maTicks)\n      select(xAxisContainer.current).call(axis)\n\n      const selection = select(svg)\n      selection.call(\n        zoom()\n          .scaleExtent([1, 5])\n          .translateExtent([\n            [0, 0],\n            [measures.width, measures.height],\n          ])\n          .on('zoom', handleZoom)\n      )\n      return () => {\n        selection.on('.zoom', null)\n      }\n    }\n  }, [height, measures, racconti])\n\n  const yScale = useMemo(() => {\n    return scaleLinear()\n      .domain(motivoExtent)\n      .range([height - 140, 0])\n  }, [height])\n\n  const scalaMotivo = useMemo(() => {\n    return scaleLinear().domain(motivoExtent).range([0, 1])\n  }, [])\n\n  const [dataRacconti, dataByRacconti, gradientsType] = useMemo(() => {\n    if (!yScale) {\n      return [[], []]\n    }\n    const finalDataByRacconti = {}\n    const gradientsSet = new Set()\n    const finalDataRacconti = racconti.map((racconto, i) => {\n      let dataForRacconto = data[racconto.titolo]\n        .filter((d) => d.y !== undefined)\n        .map((d) => ({\n          ...d,\n          colori: tipologieByTipologia[d.motivo_type].colore.colori,\n        }))\n      let first = head(dataForRacconto)\n      let last = _last(dataForRacconto)\n      let uniqueItems = uniqBy(\n        dataForRacconto,\n        (item) => item.motivo_type\n      ).sort((item) => item.ordineMotivo)\n      let min = minBy(dataForRacconto, (item) => item.ordineMotivo)\n      let max = maxBy(dataForRacconto, (item) => item.ordineMotivo)\n\n      let out = {\n        racconto,\n        first,\n        last,\n        min,\n        max,\n        uniqueItems,\n        index: i,\n      }\n      finalDataByRacconti[racconto.titolo] = out\n      gradientsSet.add(out)\n\n      out.racconto = racconto\n\n      return out\n    })\n    return [finalDataRacconti, finalDataByRacconti, Array.from(gradientsSet)]\n  }, [data, racconti, tipologieByTipologia, yScale])\n\n  // const handleNexPoint = useCallback(\n  //   (x, setX) => {\n  //     const widthBar = 5 * zoomFactor\n  //     const scaleX = actualScaleX.current\n  //     const nextPoints = Object.keys(selected).reduce((acc, titolo) => {\n  //       const dataTrama = dataByRacconti[titolo]\n  //       const realX = scaleX(dataTrama.index)\n  //       if (realX > x - widthBar / 2) {\n  //         acc.push(realX)\n  //       }\n  //       return acc\n  //     }, [])\n  //     if (nextPoints.length) {\n  //       setX(Math.min(...nextPoints) + widthBar / 2)\n  //     }\n  //   },\n  //   [dataByRacconti, selected, zoomFactor]\n  // )\n\n  // const handlePrevPoint = useCallback(\n  //   (x, setX) => {\n  //     const widthBar = 10 * zoomFactor\n  //     const scaleX = actualScaleX.current\n  //     const nextPoints = Object.keys(selected).reduce((acc, titolo) => {\n  //       const dataTrama = dataByRacconti[titolo]\n  //       const realX = scaleX(dataTrama.index)\n  //       if (realX < x - widthBar / 2) {\n  //         acc.push(realX)\n  //       }\n  //       return acc\n  //     }, [])\n  //     if (nextPoints.length) {\n  //       console.log('PREV', nextPoints, x)\n  //       setX(Math.max(...nextPoints) + widthBar / 2)\n  //     }\n  //   },\n  //   [dataByRacconti, selected, zoomFactor]\n  // )\n\n  // const [years, setYears] = useState([\n  //   racconti[0].anno,\n  //   racconti[racconti.length - 1].anno,\n  // ])\n\n  const [showBoxInOpacity, setShowBoxInOpacity] = useState(false)\n  const toggleBoxInOpacity = useCallback(\n    () => setShowBoxInOpacity((a) => !a),\n    []\n  )\n\n  // const [enterInOpacity, setEnterInOpacity] = useState(true)\n  const enterInOpacity = true\n\n  useEffect(() => {\n    // setEnterInOpacity(true)\n    containerRef.current.style.transform = 'scaleY(0.1)'\n    containerRef.current.style.overflow = 'hidden'\n    const animationId = window.requestAnimationFrame(() => {\n      containerRef.current.style.transition = 'transform 1.5s linear'\n      containerRef.current.style.transform = 'scaleY(1)'\n    })\n    return () => {\n      window.cancelAnimationFrame(animationId)\n    }\n  }, [])\n\n  useEffect(() => {\n    if (measures) {\n      xAxisContainer.current.style.display = 'none'\n      const timeoutId = setTimeout(() => {\n        xAxisContainer.current.style.display = 'initial'\n      }, 1500)\n      return () => {\n        window.clearTimeout(timeoutId)\n      }\n    }\n  }, [measures])\n\n  return (\n    <div\n      className={`trama2-boxplot-content ${\n        enterInOpacity ? 'trama2-box-plot-enter-in-opacity' : ''\n      }`}\n    >\n      <div\n        ref={containerRef}\n        className=\"w-100 h-100\"\n        // style={{ overflow: 'hidden' }}\n      >\n        {measures && (\n          <svg\n            style={{\n              height: height,\n              width: measures.width,\n            }}\n            ref={svgRef}\n          >\n            <BoxPlotGradientsDefinitions\n              byTipologia={tipologieByTipologia}\n              gradientsType={gradientsType}\n              scalaMotivo={scalaMotivo}\n              height={height - 140}\n            />\n            <g className=\"wrapper\" style={{ transform: 'translate(0, 80px)' }}>\n              {measures &&\n                dataRacconti.map((datum, i) => {\n                  return (\n                    <g\n                      key={i}\n                      className=\"box-racconto-container\"\n                      style={{\n                        transform: translations[i],\n                      }}\n                    >\n                      <BoxPlotElement\n                        showBoxInOpacity={showBoxInOpacity}\n                        zoomFactor={zoomFactor}\n                        onRaccontoClick={onRaccontoClick}\n                        scalaColore={scalaColore}\n                        index={i}\n                        width={measures.width}\n                        height={measures.height}\n                        itemSelected={selected[racconti[i].titolo]}\n                        toggleItem={toggleSelect}\n                        racconto={racconti[i]}\n                        yScale={yScale}\n                        data={datum}\n                        onGlyphoClick={toggleBoxInOpacity}\n                      ></BoxPlotElement>\n                    </g>\n                  )\n                })}\n            </g>\n            <g\n              ref={xAxisContainer}\n              style={{\n                transform: `translateY(${height - 40}px)`,\n              }}\n            ></g>\n          </svg>\n        )}\n      </div>\n      {/* {measures && (\n        <Brush\n          className='trama2-brush-for-detail'\n          width={measures.width}\n          onNextClick={handleNexPoint}\n          onPrevClick={handlePrevPoint}\n        />\n      )} */}\n      {/* <div className=\"trama2-box-plot-year\">\n        <div>{years[0]}</div>\n        <div>Testi per ordine cronologico</div>\n        <div>{years[1]}</div>\n      </div> */}\n    </div>\n  )\n}\n\nexport default forwardRef(BoxPlot)\n","import React, { useMemo, useRef, useLayoutEffect, useState } from 'react'\nimport { line, curveMonotoneX } from 'd3-shape'\nimport { scaleLinear } from 'd3-scale'\nimport { makeScalaMotivoY, splitPath } from './utils'\nimport GradientsDefinitions from './GradientsDefinitions'\nimport MiniInfoBox from '../../general/MiniInfoBox'\nimport { groupBy, countBy, sortBy, orderBy, mapValues } from 'lodash'\n\nconst TRESHOLD_LABEL = 100\nfunction calculateLabelScore(data, i) {\n  let score = null\n  const datum = data[i]\n  for (let j = i + 1; j < data.length; j++) {\n    const lenX = Math.abs(data[j].x - datum.x)\n    const lenY = Math.abs(data[j].y - datum.y)\n    const len = Math.sqrt(lenX * lenX + lenY * lenY)\n\n    if (len < TRESHOLD_LABEL) {\n      if (score === null) {\n        score = parseInt(len)\n      } else {\n        score = Math.min(score, parseInt(TRESHOLD_LABEL - len))\n      }\n    }\n    if (lenX > TRESHOLD_LABEL) {\n      break\n    }\n  }\n  for (let j = i - 1; j >= 0; j--) {\n    const lenX = Math.abs(data[j].x - datum.x)\n    const lenY = Math.abs(data[j].y - datum.y)\n    const len = Math.sqrt(lenX * lenX + lenY * lenY)\n\n    if (len < TRESHOLD_LABEL) {\n      if (score === null) {\n        score = parseInt(len)\n      } else {\n        score = Math.min(score, parseInt(TRESHOLD_LABEL - len))\n      }\n    }\n    if (lenX > TRESHOLD_LABEL) {\n      break\n    }\n  }\n  return score\n}\n\nconst CHART_X_PADDING = 50\n\nconst lineGenerator = line()\n  .x((d) => d.x)\n  .y((d) => d.y)\n  .curve(curveMonotoneX)\n\nexport default function TramaDetail({\n  data,\n  tipologieByTipologia,\n  onBack,\n  detailHeight,\n}) {\n  const [measures, setMeasures] = useState(null)\n\n  useLayoutEffect(() => {\n    const m = containerRef.current.getBoundingClientRect()\n    setMeasures(m)\n  }, [])\n\n  const scalaMotivoY = useMemo(() => {\n    return makeScalaMotivoY(detailHeight)\n  }, [detailHeight])\n\n  const xScale = useMemo(() => {\n    if (!measures) {\n      return null\n    }\n    return scaleLinear()\n      .domain([0, 1])\n      .range([CHART_X_PADDING, measures.width - CHART_X_PADDING])\n  }, [measures])\n\n  // Re-Scale X, Y for fullscreen\n  const [fullData, subPaths, gradientsType] = useMemo(() => {\n    if (!xScale) {\n      return [null, null, null]\n    }\n    const gradientsSet = new Set()\n    const newData = data.reduce((acc, item, i) => {\n      if (i > 0) {\n        gradientsSet.add(item.motivo_type + '-' + acc[i - 1].motivo_type)\n      }\n      acc.push({\n        ...item,\n        x: xScale(item.originalX),\n        y: scalaMotivoY(item.ordineMotivo),\n      })\n      return acc\n    }, [])\n    const d = lineGenerator(newData)\n    const subPaths = splitPath(d)\n    return [newData, subPaths, Array.from(gradientsSet)]\n  }, [data, scalaMotivoY, xScale])\n  const containerRef = useRef(null)\n\n  const raccontiIncastonati = useMemo(() => {\n    if (!fullData) {\n      return null\n    }\n\n    const inkMap = groupBy(\n      fullData.filter((x) => x['racconto incastonato']),\n      'racconto incastonato'\n    )\n    return Object.keys(inkMap).map((key) => {\n      const racconti = inkMap[key]\n      const minX = Math.min(...racconti.map((d) => d.x))\n      const maxX = Math.max(...racconti.map((d) => d.x))\n      const inkY = scalaMotivoY(\n        +tipologieByTipologia['racconto incastonato']['ordine tipologia']\n      )\n      return {\n        key,\n        startY: racconti[0].y,\n        endY: racconti[racconti.length - 1].y,\n        x1: minX,\n        x2: maxX,\n        y: inkY,\n      }\n    })\n  }, [fullData, scalaMotivoY, tipologieByTipologia])\n\n  const labelsData = useMemo(() => {\n    if (fullData === null) {\n      return null\n    }\n    // const countData = countBy(fullData, (x) => x.motivo_type)\n    // const maxCount = Math.max(...Object.values(countData))\n\n    const dataWithScore = fullData.map((labelData, i) => ({\n      ...labelData,\n      // score: parseInt(\n      //   (calculateLabelScore(fullData, i) * countData[labelData.motivo_type]) /\n      //     maxCount\n      // ),\n      score: calculateLabelScore(fullData, i),\n    }))\n\n    const byTypeWithScore = dataWithScore.reduce(\n      (acc, datum, i) => ({\n        ...acc,\n        [datum.motivo_type]: orderBy(\n          [{ datum, score: datum.score, i }].concat(\n            acc[datum.motivo_type] ?? []\n          ),\n          'score',\n          'desc'\n        ),\n      }),\n      []\n    )\n\n    const keepByType = mapValues(byTypeWithScore, (dataWithScore) => {\n      const keep = [...dataWithScore]\n      dataWithScore.forEach((datum, i) => {\n        if (datum.score !== null && datum.score < 50 && keep.length > 1) {\n          keep.splice(keep.indexOf(datum), 1)\n        }\n      })\n      return keep\n    })\n\n    const finalLabels = [...dataWithScore]\n    Object.keys(keepByType).forEach((key) => {\n      const keep = keepByType[key]\n      keep.forEach((datum) => {\n        finalLabels[datum.i] = {\n          ...finalLabels[datum.i],\n          keepLabel: true,\n        }\n      })\n    })\n\n    return finalLabels\n  }, [fullData])\n\n  const [hoverMotivo, setHoverMotivo] = useState(null)\n\n  return (\n    <div className=\"trama2-detail-content\">\n      <div className=\"trama2-detail-header d-flex justify-content-center align-items-center\">\n        <MiniInfoBox onClose={onBack}>\n          {data.racconto.titolo}, {data.racconto.anno}\n        </MiniInfoBox>\n      </div>\n\n      <div\n        ref={containerRef}\n        className=\"w-100 h-100\"\n        style={{ overflow: 'hidden' }}\n      >\n        {measures && (\n          <svg\n            style={{\n              height: detailHeight + 100,\n              width: measures.width,\n            }}\n          >\n            <GradientsDefinitions\n              prefix=\"detail__\"\n              byTipologia={tipologieByTipologia}\n              gradientsType={gradientsType}\n            />\n            <g transform={`translate(0, 80)`}>\n              {/* <defs>\n                <linearGradient\n                  id=\"racconto-incastonato-gradient\"\n                  x1=\"0%\"\n                  y1=\"0%\"\n                  x2=\"0%\"\n                  y2=\"100%\"\n                >\n                  <stop offset=\"0%\" stop-color=\"#F3F3F3\" />\n                  <stop offset=\"50%\" stop-color=\"#dadada\" />\n                  <stop offset=\"100%\" stop-color=\"#F3F3F3\" />\n                </linearGradient>\n              </defs> */}\n              {raccontiIncastonati &&\n                raccontiIncastonati.map((racconto) => (\n                  <g key={racconto.key}>\n                    <rect\n                      y={0}\n                      height={racconto.y}\n                      className=\"trama2-racconto-incastonato-rect\"\n                      x={racconto.x1}\n                      width={racconto.x2 - racconto.x1}\n                    />\n                    {/* <line\n                      className=\"trama2-racconto-incastonato-line\"\n                      x1={racconto.x1}\n                      x2={racconto.x2}\n                      y1={racconto.y}\n                      y2={racconto.y}\n                    />\n                    <line\n                      className=\"trama2-racconto-incastonato-step-line\"\n                      x1={racconto.x1}\n                      x2={racconto.x1}\n                      y1={racconto.startY}\n                      y2={racconto.y}\n                    />\n                    <line\n                      className=\"trama2-racconto-incastonato-step-line\"\n                      x1={racconto.x2}\n                      x2={racconto.x2}\n                      y1={racconto.endY}\n                      y2={racconto.y}\n                    /> */}\n                  </g>\n                ))}\n              {subPaths.map((subPath, i) => {\n                const isFill = data[i + 1].motivo_type === data[i].motivo_type\n                const stroke = isFill\n                  ? data[i].colori\n                  : `url('#detail__${data[i + 1].motivo_type}-${\n                      data[i].motivo_type\n                    }')`\n                return (\n                  <path\n                    key={i}\n                    d={subPath}\n                    className=\"trama2-line\"\n                    stroke={stroke}\n                    fill=\"transparent\"\n\n                    // style={{\n                    //   // stroke: stroke,\n                    //   // fill: 'none',\n                    // }}\n                  ></path>\n                )\n              })}\n              <g>\n                {labelsData.map((d, i) => {\n                  let element\n                  if (i === 0) {\n                    element = (\n                      <rect x={0} y={0} className=\"trama2-start-symbol\" />\n                    )\n                  } else if (i === data.length - 1) {\n                    element = <rect x={0} y={1} className=\"trama2-end-symbol\" />\n                  } else {\n                    element = <circle className=\"trama2-circle\" r={2} />\n                  }\n                  return (\n                    <g\n                      className={`trama2-label-container ${\n                        hoverMotivo === d.motivo_type\n                          ? 'trama2-label-hover'\n                          : hoverMotivo === null\n                          ? ''\n                          : 'trama2-label-not-hover'\n                      }`}\n                      onMouseEnter={() => setHoverMotivo(d.motivo_type)}\n                      onMouseLeave={() => setHoverMotivo(null)}\n                      key={i}\n                      transform={`translate(${d.x}, ${d.y})`}\n                    >\n                      {element}\n                      {d.keepLabel === true && (\n                        <text\n                          x={5}\n                          y={-5}\n                          style={{ transform: 'rotate(-30deg)' }}\n                        >\n                          {d.motivo_type}\n                        </text>\n                      )}\n                    </g>\n                  )\n                })}\n              </g>\n            </g>\n          </svg>\n        )}\n      </div>\n    </div>\n  )\n}\n","import React, { useMemo, useState, useEffect } from \"react\"\nimport { useTranslation, Trans } from \"react-i18next\"\nimport keyBy from \"lodash/keyBy\"\nimport groupBy from \"lodash/groupBy\"\nimport find from \"lodash/find\"\nimport orderBy from \"lodash/orderBy\"\nimport uniq from \"lodash/uniq\"\n\nconst SideBarItem = React.memo(\n  ({\n    tipologia,\n    addBound,\n    disabled,\n    t,\n    selected,\n    fromDarkItem,\n    itemHeight,\n    disableEvents = false,\n    left,\n  }) => (\n    <div\n      key={tipologia.tipologia}\n      onClick={() => addBound(tipologia.tipologia)}\n      className={`trama2-sidebar-item\n        ${disabled ? \"disabled\" : \"\"}\n        ${\n          fromDarkItem >= Number(tipologia[\"ordine tipologia\"])\n            ? \"item-dark\"\n            : \"item-light\"\n        }\n        ${disableEvents ? \"no-pointer-events\" : \"\"}\n        ${selected ? \"selected\" : \"\"}`}\n      style={{\n        paddingLeft: left,\n        height: itemHeight,\n        background: selected ? tipologia.colore.colori : undefined,\n      }}\n    >\n      {t('tipologia.'+tipologia.tipologia)}\n    </div>\n  )\n)\n\nfunction useWindowWidth() {\n  const [width, setWidth] = useState(window.outerWidth)\n\n  useEffect(() => {\n    function setCurrentWidth() {\n      setWidth(window.outerWidth)\n    }\n    window.addEventListener(\"resize\", setCurrentWidth)\n    return () => {\n      window.removeEventListener(\"resize\", setCurrentWidth)\n    }\n  }, [])\n\n  return width\n}\n\nfunction SideBar({\n  tipologie,\n  racconti,\n  height,\n  bounds,\n  addBound,\n  setBounds,\n  tramaDetail,\n}) {\n  const boundsByKey = keyBy(bounds)\n\n  const itemHeight = height / tipologie.length\n\n  const windowWidth = useWindowWidth()\n  const leftAsMyNavGridIs = windowWidth / 24\n\n  const lookupMap = useMemo(() => {\n    return racconti.reduce(\n      (looks, racconto) => {\n        const min = racconto.minDatum.motivo_type\n        const max = racconto.maxDatum.motivo_type\n        looks[min] = looks[min] || {}\n        looks[max] = looks[max] || {}\n        looks[min][max] = true\n        looks[max][min] = true\n        return looks\n      },\n      [{}]\n    )\n  }, [racconti])\n  let lookup = null\n  if (bounds.length === 1) {\n    lookup = lookupMap[bounds[0]]\n  }\n\n  const tipologieGrouped = useMemo(() => {\n    return groupBy(tipologie, \"cluster tipologia\")\n  }, [tipologie])\n\n  const fromDarkItem = useMemo(() => {\n    return (\n      find(tipologie, { tipologia: \"visione\" })?.[\"ordine tipologia\"] ??\n      -Infinity\n    )\n  }, [tipologie])\n\n  const motiviDetail = useMemo(() => {\n    if (tramaDetail) {\n      return uniq(\n        orderBy(tramaDetail, \"ordineMotivo\", \"desc\").map((x) => x.motivo_type)\n      )\n    }\n    return null\n  }, [tramaDetail])\n\n  const { t } = useTranslation(\"trama\")\n\n  return (\n    <div className=\"trama2-sidebar\">\n      <Trans i18nKey={\"ordine_di_turbamento\"} t={t} ns=\"trama\">\n        <div\n          className=\"trama2-sidebar-header\"\n          style={{\n            paddingLeft: leftAsMyNavGridIs,\n          }}\n        >\n          Lista delle sequenze\n        </div>\n      </Trans>\n      {Object.keys(tipologieGrouped).map((k) => {\n        const tipologie = tipologieGrouped[k]\n        return (\n          <div className=\"trama2-sidebar-content\" key={k}>\n            {tipologie.map((tipologia) => {\n              let disabled\n              let selected\n              if (motiviDetail) {\n                disabled = motiviDetail.indexOf(tipologia.tipologia) === -1\n                selected =\n                  motiviDetail[0] === tipologia.tipologia ||\n                  motiviDetail[motiviDetail.length - 1] === tipologia.tipologia\n              } else {\n                disabled =\n                  lookup !== null &&\n                  tipologia.tipologia !== bounds[0] &&\n                  (!lookup || !lookup[tipologia.tipologia])\n                selected = !!boundsByKey[tipologia.tipologia]\n              }\n              return (\n                <SideBarItem\n                  key={tipologia.tipologia}\n                  disableEvents={!!motiviDetail}\n                  tipologia={tipologia}\n                  addBound={addBound}\n                  disabled={disabled}\n                  t={t}\n                  selected={selected}\n                  itemHeight={itemHeight}\n                  fromDarkItem={fromDarkItem}\n                  left={leftAsMyNavGridIs}\n                />\n              )\n            })}\n          </div>\n        )\n      })}\n      <div\n        className=\"trama2-sidebar-footer\"\n        style={{\n          paddingLeft: leftAsMyNavGridIs,\n        }}\n      >\n        Clicca per scegliere il <br />\n        punto più alto e più basso\n        <br />\n        delle curve\n      </div>\n      {/* <div>\n        {bounds.length > 0 && (\n          <span\n            onClick={() => {\n              setBounds([])\n            }}\n          >\n            Clear\n          </span>\n        )}\n      </div> */}\n    </div>\n  )\n}\n\nexport default React.memo(SideBar)\n","import React, {\n  useLayoutEffect,\n  useState,\n  useCallback,\n  useEffect,\n  useRef,\n  createContext,\n} from 'react'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faAngleDoubleRight } from '@fortawesome/free-solid-svg-icons'\n\n//data management\nimport keyBy from 'lodash/keyBy'\nimport sortBy from 'lodash/sortBy'\n\n//data helpers\nimport { MOTIVO_LINE_HEIGHT } from './utils'\n\n//local components\nimport LineeTrama from './LineeTrama'\nimport BoxPlot from './BoxPlot'\nimport TramaDetail from './TramaDetail'\nimport SideBar from './SideBar'\n\nexport const CurretTramaViewContext = createContext('list')\n\n// main component\nexport default function Trama2Content({\n  scalaMotivoY,\n  tipologie,\n  tipologieByTipologia,\n  colors,\n  racconti,\n  ricerca,\n  setFindFor,\n  byRacconto,\n  selected,\n  toggleSelect,\n  setSelected,\n  currentView,\n  setCurrentView,\n}) {\n  const [sidePanelOpen, setSidePanelOpen] = useState(false)\n  const toggleSidePanel = useCallback(() => {\n    setSidePanelOpen(!sidePanelOpen)\n  }, [sidePanelOpen])\n\n  const containerRef = useRef()\n  const [measures, setMeasures] = useState(null)\n  useLayoutEffect(() => {\n    const m = containerRef.current.getBoundingClientRect()\n    setMeasures(m)\n  }, [])\n\n  //bounds selection\n  const [bounds, setBounds] = useState([])\n  const addBound = useCallback(\n    (item) => {\n      if (bounds.length === 1 && bounds[0] === item) {\n        setBounds([])\n        return\n      }\n      if (bounds.length < 2) {\n        setBounds(bounds.concat([item]))\n      } else {\n        setBounds([item])\n      }\n    },\n    [bounds]\n  )\n\n  useEffect(() => {\n    if (bounds.length === 2) {\n      const orderedBounds = sortBy(\n        bounds,\n        (bound) => +tipologieByTipologia[bound]['ordine tipologia']\n      )\n      const indexes = racconti.reduce((acc, racconto, indenx) => {\n        if (\n          racconto.minDatum.motivo_type === orderedBounds[0] &&\n          racconto.maxDatum.motivo_type === orderedBounds[1]\n        ) {\n          acc.push(racconto.titolo)\n        }\n        return acc\n      }, [])\n\n      const sel = keyBy(indexes)\n      setSelected(sel, true)\n    }\n  }, [bounds, racconti, setSelected, tipologieByTipologia])\n\n  useEffect(() => {\n    if (\n      Object.keys(selected).some((key) => selected[key].fromBounds === false)\n    ) {\n      setBounds([])\n    }\n  }, [selected])\n\n  const listRef = useRef()\n  const [currentTramaDetail, setCurrentTramaDetail] = useState(null)\n\n  const handleClickRacconto = useCallback((data) => {\n    setCurrentTramaDetail(data)\n    setCurrentView('detail')\n  }, [setCurrentView])\n\n  const [years, setYears] = useState([\n    racconti[0].anno,\n    racconti[racconti.length - 1].anno,\n  ])\n\n  return (\n    <div className=\"trama2-container\" ref={containerRef}>\n      <div className={`trama2-side-panel ${sidePanelOpen ? 'open' : 'closed'}`}>\n        <div className=\"trama2-side-panel-content\">\n          {measures && (\n            <SideBar\n              tramaDetail={currentTramaDetail}\n              racconti={racconti}\n              height={measures.height - 140}\n              tipologie={tipologie}\n              bounds={bounds}\n              addBound={addBound}\n              setBounds={setBounds}\n            ></SideBar>\n          )}\n        </div>\n\n        <div\n          className={`trama2-side-panel-toggle ${\n            sidePanelOpen ? 'open-panel' : ''\n          }`}\n          onClick={toggleSidePanel}\n        >\n          <FontAwesomeIcon icon={faAngleDoubleRight} />\n        </div>\n\n        {currentView !== 'detail' && (\n          <div\n            className=\"trama2-side-panel-rotate\"\n            onClick={() => {\n              if (currentView === 'list') {\n                listRef.current.rotateView(() => {\n                  setCurrentView('boxplot')\n                })\n              } else {\n                setCurrentView('list')\n              }\n            }}\n          >\n            Routa la vista\n          </div>\n        )}\n      </div>\n      <div className=\"trama2-content-wrapper\">\n        {currentView === 'list' && (\n          <>\n            <div\n              style={{\n                position: 'absolute',\n                top: 80 + MOTIVO_LINE_HEIGHT,\n                borderBottom: 'solid #bbb 1px',\n              }}\n            >\n              {years[0]}\n            </div>\n            <div\n              style={{\n                position: 'absolute',\n                bottom: MOTIVO_LINE_HEIGHT + 30,\n                borderBottom: 'solid #bbb 1px',\n              }}\n            >\n              {years[1]}\n            </div>\n          </>\n        )}\n\n        <CurretTramaViewContext.Provider value={currentView}>\n          <div\n            className=\"trama2-content\"\n            style={{ display: currentView !== 'list' ? 'none' : undefined }}\n          >\n            <LineeTrama\n              onRaccontoClick={handleClickRacconto}\n              ref={listRef}\n              selected={selected}\n              toggleSelect={toggleSelect}\n              racconti={racconti}\n              ricerca={ricerca}\n              setFindFor={setFindFor}\n              tipologie={tipologie}\n              tipologieByTipologia={tipologieByTipologia}\n              data={byRacconto}\n              height={MOTIVO_LINE_HEIGHT}\n              scalaMotivoY={scalaMotivoY}\n              colors={colors}\n              setYears={setYears}\n            ></LineeTrama>\n          </div>\n\n          {currentView === 'boxplot' && measures && (\n            <BoxPlot\n              onRaccontoClick={handleClickRacconto}\n              ref={listRef}\n              selected={selected}\n              toggleSelect={toggleSelect}\n              racconti={racconti}\n              tipologie={tipologie}\n              tipologieByTipologia={tipologieByTipologia}\n              data={byRacconto}\n              height={measures.height}\n              scalaMotivoY={scalaMotivoY}\n              colors={colors}\n            ></BoxPlot>\n          )}\n          {currentView === 'detail' && measures && (\n            <TramaDetail\n              tipologieByTipologia={tipologieByTipologia}\n              detailHeight={measures.height - 140}\n              data={currentTramaDetail}\n              onBack={() => {\n                setCurrentTramaDetail(null)\n                setCurrentView('list')\n              }}\n            />\n          )}\n        </CurretTramaViewContext.Provider>\n      </div>\n    </div>\n  )\n}\n","import React, { useCallback, useState, useMemo } from 'react'\nimport MainMenu from '../../general/MainMenu'\nimport PageTitle from '../../general/PageTitle'\nimport MoreInfo from '../../general/MoreInfo'\nimport CompassButton from '../../general/CompassButton/CompassButton'\nimport SearchDropDown from '../../general/Search/SearchDropDownControlled'\nimport HelpSidePanel from '../../panels/HelpSidePanel/HelpSidePanel'\n\nimport AltOptions from '../../general/Options/AltOptions'\nimport GlobalData from '../../utilities/GlobalData'\nimport Trama2Content from './Trama2Content'\nimport { makeScalaMotivoY, makeVizData, MOTIVO_LINE_HEIGHT } from './utils'\nimport keyBy from 'lodash/keyBy'\nimport flatMap from 'lodash/flatMap'\nimport uniq from 'lodash/uniq'\nimport uniqBy from 'lodash/uniqBy'\nimport './Trama2.css'\nimport { useTranslation } from 'react-i18next'\n\n// SCALES\nconst scalaMotivoY = makeScalaMotivoY(MOTIVO_LINE_HEIGHT)\n\n// GLOBAL DATA\nconst {\n  tipologie,\n  tipologieByTipologia,\n  colors,\n  racconti,\n  byRacconto,\n} = makeVizData(scalaMotivoY)\n\n// we leverage react lazy+suspense to load core component at first render (it will load all json by importing it)\n\nconst searchOptions = racconti.map((racconto) => ({\n  label: racconto.titolo,\n  value: racconto.titolo,\n  volume: racconto.volume,\n}))\n\nconst searchOptonsVolume = uniq(\n  racconti.map((r) => r.volume).filter(Boolean)\n).map((v) => ({\n  label: v,\n  value: v,\n  volume: true,\n}))\n\nconst cercaOptions = [\n  { label: 'Titolo', value: 'titolo' },\n  { label: 'Volume', value: 'volume' },\n]\n\nfunction Trama2Main({ title }) {\n  const [helpSidePanelOpen, setHelpSidePanelOpen] = useState(true)\n  const [ricercaTop, setRicercaTop] = useState([])\n  const [ricerca, setRicerca] = useState([])\n\n  const [currentView, setCurrentView] = useState('list')\n\n  const toggleHelpSidePanel = useCallback(() => {\n    setHelpSidePanelOpen((a) => !a)\n  }, [])\n\n  const helpPage = GlobalData.helpPages.plot.main\n\n  const setSelected = useCallback((selection, fromBounds = false) => {\n    const newRicerca = Object.keys(selection).map((titolo) => ({\n      label: titolo,\n      value: titolo,\n      fromBounds,\n    }))\n    setRicerca(newRicerca)\n  }, [])\n\n  const toggleSelect = useCallback((titolo) => {\n    setRicerca((ricerca) => {\n      let clearedBounds = false\n      const newRicerca = ricerca.filter((item) => {\n        // Remove from bounds items\n        if (item.fromBounds === true) {\n          clearedBounds = true\n          return false\n        }\n        return item.label !== titolo\n      })\n      if (newRicerca.length < ricerca.length && !clearedBounds) {\n        return newRicerca\n      } else {\n        return newRicerca.concat({ label: titolo, value: titolo })\n      }\n    })\n  }, [])\n  const selected = useMemo(() => {\n    return keyBy(\n      ricerca.map((item) => ({\n        value: item.value,\n        fromBounds: item.fromBounds === undefined ? false : item.fromBounds,\n      })),\n      'value'\n    )\n  }, [ricerca])\n\n  const { t } = useTranslation('translation')\n  const [findFor, setFindFor] = useState('titolo')\n\n  console.log(ricerca)\n\n  return (\n    <div className=\"trasformare main\">\n      <HelpSidePanel\n        open={helpSidePanelOpen}\n        page={helpPage}\n        isFullPage={true}\n        helpPages={currentView}\n        closeButtonClicked={toggleHelpSidePanel}\n      />\n\n      <div className=\"top-nav navigations\">\n        <MainMenu className=\"main-menu\" style={{ gridColumn: 'span 1' }} />\n        <PageTitle title={title} style={{ gridColumn: 'span 10' }} />\n\n        <AltOptions\n          title={t('cerca_per')}\n          options={cercaOptions}\n          value={findFor}\n          onChange={(x) => {\n            setRicerca([])\n            setFindFor(x.value)\n          }}\n          style={{\n            gridColumn: 'span 3',\n          }}\n        />\n\n        <SearchDropDown\n          style={{\n            gridColumn: 'span 8',\n          }}\n          data={{\n            options: findFor === 'titolo' ? searchOptions : searchOptonsVolume,\n          }}\n          changeOptions={(newOptions) => {\n            // In top bar\n            setRicercaTop(\n              newOptions.map((o) => ({\n                ...o,\n                fromBounds: false,\n              }))\n            )\n            // In chart...\n            const racconti = newOptions.filter((o) => o.volume !== true)\n            const volumi = newOptions.filter((o) => o.volume === true)\n            const raccontiInVolumi = flatMap(volumi.map((v) =>\n              searchOptions.filter((o) => o.volume === v.value)\n            ))\n            const finalRicerca = uniqBy(racconti.concat(raccontiInVolumi), v => v.value)\n            setRicerca(finalRicerca)\n          }}\n          selectedOptions={ricerca}\n        />\n\n        <MoreInfo\n          helpSidePanelOpen={helpSidePanelOpen}\n          style={{ gridColumn: 'span 1' }}\n          onClicked={toggleHelpSidePanel}\n        />\n        <CompassButton\n          style={{\n            gridColumn: 'span 1',\n          }}\n        />\n      </div>\n\n      <Trama2Content\n        scalaMotivoY={scalaMotivoY}\n        tipologie={tipologie}\n        tipologieByTipologia={tipologieByTipologia}\n        colors={colors}\n        racconti={racconti}\n        setFindFor={setFindFor}\n        ricerca={ricerca}\n        currentView={currentView}\n        setCurrentView={setCurrentView}\n        byRacconto={byRacconto}\n        selected={selected}\n        setSelected={setSelected}\n        toggleSelect={toggleSelect}\n      ></Trama2Content>\n    </div>\n  )\n}\n\nexport default Trama2Main\n"],"sourceRoot":""}