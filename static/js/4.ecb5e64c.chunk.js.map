{"version":3,"sources":["../node_modules/d3-shape/src/link/index.js","../node_modules/d3-shape/src/pointRadial.js","../node_modules/lodash/mapValues.js","general/MiniInfoBox/MiniInfoBox.js","general/MiniInfoBox/index.js","../node_modules/lodash/difference.js","../node_modules/lodash/_baseDifference.js","../node_modules/lodash/isArrayLikeObject.js","visualizations/Realismo/utils.js","visualizations/Realismo/CircleWorms.js","visualizations/Realismo/WormDetail.js","visualizations/Realismo/RealismoMain.js"],"names":["linkSource","d","source","linkTarget","target","link","curve","x","pointX","y","pointY","context","buffer","argv","slice","call","arguments","s","apply","this","t","path","_","length","constant","curveVertical","x0","y0","x1","y1","moveTo","bezierCurveTo","linkVertical","Math","cos","PI","sin","baseAssignValue","require","baseForOwn","baseIteratee","module","exports","object","iteratee","result","value","key","MiniInfoBox","children","onClose","style","className","onClick","baseDifference","baseFlatten","baseRest","isArrayLikeObject","difference","array","values","SetCache","arrayIncludes","arrayIncludesWith","arrayMap","baseUnary","cacheHas","LARGE_ARRAY_SIZE","comparator","index","includes","isCommon","valuesLength","outer","computed","valuesIndex","push","isArrayLike","isObjectLike","realismoDataNormalized","realismoData","map","item","startNorm","start","endNorm","end","locationNorm","yearsExtent","extent","year","Date","racconti","uniqBy","title","volume","volume_primo","dataset","groupBy","maxLength","max","filter","Boolean","detailWormsCircles","mapValues","data","dataFilled","reduce","filledWithCream","calv0","i","level","occurrence_location","Number","ghost","prevCalvix","lastData","startTotalNorm","endTotalNorm","locationTotalNorm","lengthTotalNorm","intersectionCircleItem","colorScale","scaleOrdinal","range","domain","unknown","GAP_SIZE","LEGEND_SIZE","uniqueYears","sort","numGaps","acc","unitDeg","lastRotation","raccontiDegs","racconto","rotation","byYear","yearsArcs","startAngleDeg","startAngle","endAngle","angleLabel","calculateDegs","LABEL_SIZE_PERCENT","WORM_SIZE_PERCENT","LABEL_PADDING","INNER_CIRCLE_PADDING","INNER_CIRCLE_STROKE_WIDTH","arcGenerator","arc","Worm","React","memo","circles","radius","labelSize","wormSize","isOmitted","isSelected","wormStart","size","flipText","circleRadius","animationDelays","animationGroups","cursor","undefined","circle","cx","movement","delay","direction","category","transformOrigin","animationDelay","r","cy","place","fill","CicrleYears","wormEnd","flipTextStyle","transform","opacity","alignmentBaseline","width","height","radiusStrokeSize","yearArc","textX","fontSize","textAnchor","outerRadius","innerRadius","Legend","endLineStart","endLineEnd","y2","x2","stroke","strokeWidth","CircleWorms","heightCircle","circlesMap","selected","selectedByHand","omitted","raccontiJoinLines","toggleSelect","handleClick","useCallback","selectedKeys","Object","keys","allSelected","paddingTop","id","offset","stopColor","type","slope","pointAX","pointAY","pointBX","pointBY","strokeDasharray","angle","CHART_PADDING_X","LEGEND_TEXT_HEIGHT","MINI_RADIUS","LOCATION_RADIUS","LEVEL_HEIGHT","WORM_MARGIN_TOP","CHART_MARGIN_LEFT","yScale","makeItemFill","color","makeItemGradientUrl","totalLabelX","ghostWorm","allWidth","dataWorms","useMemo","xLocation","labalesData","dataForLabels","dataWormsLabeled","mul","linePath","levelsData","dataLevelWorms","hasData","dataLabel","totalLength","margin","marginLeft","attributeName","dur","repeatCount","datum","rx","ry","occurrence","n","LABEL_BEZIER_DELTA_A","RESET_BOX_HEIGHT","REALISMO_DIAMETER_BASE","circleWidth","out","interectionItems","sortBy","reverse","searchOptionsTitolo","label","searchOptionsVolume","keyByTitolo","volumeLabel","titoliByVolume","optionsMovimento","optionsSpace","cercaOptions","RealismoMain","useState","helpSidePanelOpen","setHelpSidePanelOpen","toggleHelpSidePanel","a","findFor","setFindFor","ricerca","setRicerca","helpPage","GlobalData","helpPages","realism","main","useDimensions","liveMeasure","ref","refCirlce","movimento","setMovimento","spazio","setSpazio","timeFilter","setTimeFilter","spazioLabels","omittedStuff","spazioValues","forEach","titolo","keep","some","every","categories","wormCateogry","indexOf","getFullYear","mapSelected","volumeSelected","selectedOnWorms","selected2","omittedKeys","newRicerca","concat","selctedTitoliSorted","ricercaTitoli","leftRacconti","rightRacconti","lineHeightRight","lineHeightLeft","raccontiFontSize","realismoDiameter","realismoRadius","abs","HelpSidePanel","open","page","closeButtonClicked","MainMenu","gridColumn","PageTitle","AltOptions","multiple","options","onChange","changeOptions","newOptions","selectedOptions","MoreInfo","onClicked","CompassButton","position","lineHeight","allowEmpty","m","textAlign","RangeFilter","timeSpan"],"mappings":"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","file":"static/js/4.ecb5e64c.chunk.js","sourcesContent":["import {path} from \"d3-path\";\nimport {slice} from \"../array.js\";\nimport constant from \"../constant.js\";\nimport {x as pointX, y as pointY} from \"../point.js\";\nimport pointRadial from \"../pointRadial.js\";\n\nfunction linkSource(d) {\n  return d.source;\n}\n\nfunction linkTarget(d) {\n  return d.target;\n}\n\nfunction link(curve) {\n  var source = linkSource,\n      target = linkTarget,\n      x = pointX,\n      y = pointY,\n      context = null;\n\n  function link() {\n    var buffer, argv = slice.call(arguments), s = source.apply(this, argv), t = target.apply(this, argv);\n    if (!context) context = buffer = path();\n    curve(context, +x.apply(this, (argv[0] = s, argv)), +y.apply(this, argv), +x.apply(this, (argv[0] = t, argv)), +y.apply(this, argv));\n    if (buffer) return context = null, buffer + \"\" || null;\n  }\n\n  link.source = function(_) {\n    return arguments.length ? (source = _, link) : source;\n  };\n\n  link.target = function(_) {\n    return arguments.length ? (target = _, link) : target;\n  };\n\n  link.x = function(_) {\n    return arguments.length ? (x = typeof _ === \"function\" ? _ : constant(+_), link) : x;\n  };\n\n  link.y = function(_) {\n    return arguments.length ? (y = typeof _ === \"function\" ? _ : constant(+_), link) : y;\n  };\n\n  link.context = function(_) {\n    return arguments.length ? ((context = _ == null ? null : _), link) : context;\n  };\n\n  return link;\n}\n\nfunction curveHorizontal(context, x0, y0, x1, y1) {\n  context.moveTo(x0, y0);\n  context.bezierCurveTo(x0 = (x0 + x1) / 2, y0, x0, y1, x1, y1);\n}\n\nfunction curveVertical(context, x0, y0, x1, y1) {\n  context.moveTo(x0, y0);\n  context.bezierCurveTo(x0, y0 = (y0 + y1) / 2, x1, y0, x1, y1);\n}\n\nfunction curveRadial(context, x0, y0, x1, y1) {\n  var p0 = pointRadial(x0, y0),\n      p1 = pointRadial(x0, y0 = (y0 + y1) / 2),\n      p2 = pointRadial(x1, y0),\n      p3 = pointRadial(x1, y1);\n  context.moveTo(p0[0], p0[1]);\n  context.bezierCurveTo(p1[0], p1[1], p2[0], p2[1], p3[0], p3[1]);\n}\n\nexport function linkHorizontal() {\n  return link(curveHorizontal);\n}\n\nexport function linkVertical() {\n  return link(curveVertical);\n}\n\nexport function linkRadial() {\n  var l = link(curveRadial);\n  l.angle = l.x, delete l.x;\n  l.radius = l.y, delete l.y;\n  return l;\n}\n","export default function(x, y) {\n  return [(y = +y) * Math.cos(x -= Math.PI / 2), y * Math.sin(x)];\n}\n","var baseAssignValue = require('./_baseAssignValue'),\n    baseForOwn = require('./_baseForOwn'),\n    baseIteratee = require('./_baseIteratee');\n\n/**\n * Creates an object with the same keys as `object` and values generated\n * by running each own enumerable string keyed property of `object` thru\n * `iteratee`. The iteratee is invoked with three arguments:\n * (value, key, object).\n *\n * @static\n * @memberOf _\n * @since 2.4.0\n * @category Object\n * @param {Object} object The object to iterate over.\n * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n * @returns {Object} Returns the new mapped object.\n * @see _.mapKeys\n * @example\n *\n * var users = {\n *   'fred':    { 'user': 'fred',    'age': 40 },\n *   'pebbles': { 'user': 'pebbles', 'age': 1 }\n * };\n *\n * _.mapValues(users, function(o) { return o.age; });\n * // => { 'fred': 40, 'pebbles': 1 } (iteration order is not guaranteed)\n *\n * // The `_.property` iteratee shorthand.\n * _.mapValues(users, 'age');\n * // => { 'fred': 40, 'pebbles': 1 } (iteration order is not guaranteed)\n */\nfunction mapValues(object, iteratee) {\n  var result = {};\n  iteratee = baseIteratee(iteratee, 3);\n\n  baseForOwn(object, function(value, key, object) {\n    baseAssignValue(result, key, iteratee(value, key, object));\n  });\n  return result;\n}\n\nmodule.exports = mapValues;\n","import React from 'react'\nimport './MiniInfoBox.css'\n\nexport default function MiniInfoBox({ children, onClose, style }) {\n  return (\n    <div className=\"MiniInfoBox\" style={style}>\n      <div className=\"MiniInfoBox-start\">{children}</div>\n      <div className=\"MiniInfoBox-end\" onClick={onClose}>\n        &times;\n      </div>\n    </div>\n  )\n}\n","export { default } from './MiniInfoBox'","var baseDifference = require('./_baseDifference'),\n    baseFlatten = require('./_baseFlatten'),\n    baseRest = require('./_baseRest'),\n    isArrayLikeObject = require('./isArrayLikeObject');\n\n/**\n * Creates an array of `array` values not included in the other given arrays\n * using [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)\n * for equality comparisons. The order and references of result values are\n * determined by the first array.\n *\n * **Note:** Unlike `_.pullAll`, this method returns a new array.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Array\n * @param {Array} array The array to inspect.\n * @param {...Array} [values] The values to exclude.\n * @returns {Array} Returns the new array of filtered values.\n * @see _.without, _.xor\n * @example\n *\n * _.difference([2, 1], [2, 3]);\n * // => [1]\n */\nvar difference = baseRest(function(array, values) {\n  return isArrayLikeObject(array)\n    ? baseDifference(array, baseFlatten(values, 1, isArrayLikeObject, true))\n    : [];\n});\n\nmodule.exports = difference;\n","var SetCache = require('./_SetCache'),\n    arrayIncludes = require('./_arrayIncludes'),\n    arrayIncludesWith = require('./_arrayIncludesWith'),\n    arrayMap = require('./_arrayMap'),\n    baseUnary = require('./_baseUnary'),\n    cacheHas = require('./_cacheHas');\n\n/** Used as the size to enable large array optimizations. */\nvar LARGE_ARRAY_SIZE = 200;\n\n/**\n * The base implementation of methods like `_.difference` without support\n * for excluding multiple arrays or iteratee shorthands.\n *\n * @private\n * @param {Array} array The array to inspect.\n * @param {Array} values The values to exclude.\n * @param {Function} [iteratee] The iteratee invoked per element.\n * @param {Function} [comparator] The comparator invoked per element.\n * @returns {Array} Returns the new array of filtered values.\n */\nfunction baseDifference(array, values, iteratee, comparator) {\n  var index = -1,\n      includes = arrayIncludes,\n      isCommon = true,\n      length = array.length,\n      result = [],\n      valuesLength = values.length;\n\n  if (!length) {\n    return result;\n  }\n  if (iteratee) {\n    values = arrayMap(values, baseUnary(iteratee));\n  }\n  if (comparator) {\n    includes = arrayIncludesWith;\n    isCommon = false;\n  }\n  else if (values.length >= LARGE_ARRAY_SIZE) {\n    includes = cacheHas;\n    isCommon = false;\n    values = new SetCache(values);\n  }\n  outer:\n  while (++index < length) {\n    var value = array[index],\n        computed = iteratee == null ? value : iteratee(value);\n\n    value = (comparator || value !== 0) ? value : 0;\n    if (isCommon && computed === computed) {\n      var valuesIndex = valuesLength;\n      while (valuesIndex--) {\n        if (values[valuesIndex] === computed) {\n          continue outer;\n        }\n      }\n      result.push(value);\n    }\n    else if (!includes(values, computed, comparator)) {\n      result.push(value);\n    }\n  }\n  return result;\n}\n\nmodule.exports = baseDifference;\n","var isArrayLike = require('./isArrayLike'),\n    isObjectLike = require('./isObjectLike');\n\n/**\n * This method is like `_.isArrayLike` except that it also checks if `value`\n * is an object.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an array-like object,\n *  else `false`.\n * @example\n *\n * _.isArrayLikeObject([1, 2, 3]);\n * // => true\n *\n * _.isArrayLikeObject(document.body.children);\n * // => true\n *\n * _.isArrayLikeObject('abc');\n * // => false\n *\n * _.isArrayLikeObject(_.noop);\n * // => false\n */\nfunction isArrayLikeObject(value) {\n  return isObjectLike(value) && isArrayLike(value);\n}\n\nmodule.exports = isArrayLikeObject;\n","import realismoData from './data/realismo.json'\nimport groupBy from 'lodash/groupBy'\nimport uniqBy from 'lodash/uniqBy'\nimport { scaleOrdinal } from 'd3-scale'\nimport range from 'lodash/range'\nimport find from 'lodash/find'\nimport mapValues from 'lodash/mapValues'\nimport { extent } from 'd3-array'\nimport { sortBy } from 'lodash'\n\nconst realismoDataNormalized = realismoData.map((item) => ({\n  ...item,\n  startNorm: +item.start / item.length,\n  endNorm: +item.end / item.length,\n  locationNorm: +item['occurrence_location'] / +item.length,\n}))\n\nexport const yearsExtent = extent(realismoData, (d) => +d.year).map(\n  (y) => new Date(y, 0)\n)\n\nexport const racconti = uniqBy(realismoData, 'title').map((item) => ({\n  title: item.title,\n  length: item.length,\n  year: +item.year,\n  volume: item.volume_primo,\n}))\n\nexport const dataset = groupBy(realismoDataNormalized, 'title')\n\nconst maxLength = Math.max(\n  ...realismoData.map((d) => +d.length).filter(Boolean)\n)\nexport const detailWormsCircles = mapValues(dataset, (data) => {\n  // Fill the pie\n  const dataFilled = data.reduce((filledWithCream, calv0, i) => {\n    if (i === 0) {\n      // We are about to start\n      if (+calv0.start > 0) {\n        // The first piece of our story start from n0000where\n        // filled the start\n        filledWithCream.push({\n          ...calv0,\n          level: 0,\n          occurrence_location: 0,\n          start: 0,\n          end: Number(calv0.start) - 1,\n          ghost: true,\n        })\n      }\n    } else {\n      // Rewind back 2 prev\n      const prevCalvix = data[i - 1]\n      if (calv0.start > Number(prevCalvix.end) + 1) {\n        filledWithCream.push({\n          ...calv0,\n          level: 0,\n          occurrence_location: Number(prevCalvix.end) + 1,\n          start: Number(prevCalvix.end) + 1,\n          end: Number(calv0.start) - 1,\n          ghost: true,\n        })\n      }\n    }\n    // Add item\n    filledWithCream.push(calv0)\n    return filledWithCream\n  }, [])\n  if (dataFilled.length > 0) {\n    const lastData = dataFilled[dataFilled.length - 1]\n    if (lastData.end < lastData.length) {\n      dataFilled.push({\n        ...lastData,\n        level: 0,\n        occurrence_location: lastData.end + 1,\n        start: lastData.end + 1,\n        end: lastData.length,\n        ghost: true,\n      })\n    }\n  }\n\n  return dataFilled.map((item) => ({\n    ...item,\n    startTotalNorm: +item.start / maxLength,\n    endTotalNorm: +item.end / maxLength,\n    locationTotalNorm: +item['occurrence_location'] / maxLength,\n    lengthTotalNorm: +item.length / maxLength,\n  }))\n})\n\nfunction intersectionCircleItem(item, startNorm, endNorm) {\n  if (endNorm < item.startNorm) {\n    return 0\n  }\n  if (startNorm > item.endNorm) {\n    return 0\n  }\n  const diffStart = Math.max(0, item.startNorm - startNorm)\n  const diffEnd = Math.max(0, endNorm - item.endNorm)\n\n  return endNorm - startNorm - diffStart - diffEnd\n}\n\nexport function datasetToCircles(n) {\n  return mapValues(dataset, (data) => {\n    const circleWidth = 1 / n\n\n    const circles = range(n).reduce((acc, item, i) => {\n      const startNorm = i * circleWidth\n      const endNorm = (i + 1) * circleWidth\n      let interectionItems = sortBy(data, (item) =>\n        intersectionCircleItem(item, startNorm, endNorm)\n      ).reverse()\n      let out\n      if (\n        interectionItems.length > 0 &&\n        intersectionCircleItem(interectionItems[0], startNorm, endNorm) > 0\n      ) {\n        out = interectionItems[0]\n      } else {\n        out = {}\n      }\n      let place = false\n      if (\n        out.occurrence &&\n        out.locationNorm >= startNorm &&\n        out.locationNorm <= endNorm\n      ) {\n        place = true\n      }\n      acc.push({ ...out, place })\n      return acc\n    }, [])\n\n    return circles\n  })\n}\n\nexport const colorScale = scaleOrdinal()\n  .range(['#ffc33e', '#00c97c', '#4a4aff'])\n  .domain(['indoor', 'outdoor', 'transportation'])\n  .unknown(['#ccc'])\n\nconst GAP_SIZE = 1\nexport const LEGEND_SIZE = 10\n\nfunction calculateDegs() {\n  const uniqueYears = uniqBy(racconti, (item) => item.year)\n    .map((x) => x.year)\n    .sort()\n\n  const numGaps = uniqueYears.reduce((acc, year, i) => {\n    if (i > 0) {\n      return acc + year - uniqueYears[i - 1]\n    }\n    return acc\n  }, 0)\n  const unitDeg = (360 - LEGEND_SIZE - numGaps * GAP_SIZE) / racconti.length\n\n  let lastRotation = LEGEND_SIZE / 2 + unitDeg / 2\n  const raccontiDegs = racconti.map((racconto, i) => {\n    if (i > 0) {\n      lastRotation =\n        lastRotation +\n        unitDeg +\n        (racconto.year - racconti[i - 1].year) * GAP_SIZE\n    }\n    return {\n      ...racconto,\n      rotation: lastRotation - 90,\n    }\n  })\n\n  const byYear = groupBy(raccontiDegs, 'year')\n  const yearsArcs = uniqueYears.map((year) => {\n    const data = byYear[year]\n    const startAngleDeg = data[0].rotation + 90 - unitDeg / 2\n    const startAngle = (startAngleDeg / 360) * (2 * Math.PI)\n\n    const endAngle =\n      ((data[data.length - 1].rotation + 90 + unitDeg / 2) / 360) *\n      (2 * Math.PI)\n\n    return {\n      startAngle,\n      angleLabel: startAngleDeg + unitDeg - 90 + unitDeg / 2,\n      endAngle,\n      year,\n    }\n  })\n\n  return { raccontiDegs, yearsArcs }\n}\n\nexport const { raccontiDegs, yearsArcs } = calculateDegs()\n","import React, { useCallback } from 'react'\nimport { colorScale, yearsArcs } from './utils'\nimport { scaleLinear } from 'd3-scale'\nimport { arc } from 'd3'\n\nconst LABEL_VISIBLE_SIZE = 0\nconst LABEL_SIZE_PERCENT = 0\nconst WORM_SIZE_PERCENT = 0.55\nconst LABEL_PADDING = 10\nconst INNER_CIRCLE_PADDING = 10\nconst INNER_CIRCLE_STROKE_WIDTH = 5\nconst LEGEND_TEXT_MARGIN = 3\n\nconst arcGenerator = arc()\n\nconst Worm = React.memo(\n  ({\n    racconto,\n    circles,\n    radius,\n    labelSize,\n    wormSize,\n    onClick,\n    isSelected,\n    isOmitted,\n    size,\n    flipText = false,\n  }) => {\n    const wormStart = radius - labelSize - wormSize - LABEL_PADDING\n    const wormEnd = radius - labelSize\n\n    const circleRadius = wormSize / circles.length / 2\n\n    //var for animations delays\n    const animationDelays = circles.reduce((acc, item) => {\n      if (!acc[item.occurrence_location]) {\n        acc[item.occurrence_location] = 1\n      }\n      acc[item.occurrence_location] += 1\n      return acc\n    }, {})\n\n    const animationGroups = {}\n\n    return (\n      <g\n        style={{\n          // opacity: isSelected ? 1 : 0.3,\n        }}\n      >\n        <title>{racconto.title}</title>\n        <g\n          onClick={() => {\n            if (!isOmitted) {\n              onClick(racconto)\n            }\n          }}\n          style={{\n            cursor: isOmitted ? undefined : 'pointer',\n          }}\n        >\n          {circles.map((circle, i) => {\n            const cx = wormStart + i * circleRadius * 2 + circleRadius\n            const cy = 0\n\n            if (circle.movement === 'TRUE') {\n              animationGroups[circle.occurrence_location] =\n                animationGroups[circle.occurrence_location] === undefined\n                  ? 0\n                  : animationGroups[circle.occurrence_location] + 1\n            }\n\n            const delay =\n              circle.direction === 'forward'\n                ? animationGroups[circle.occurrence_location] * 0.2\n                : (animationDelays[circle.occurrence_location] -\n                    animationGroups[circle.occurrence_location]) *\n                  0.2\n\n            return (\n              <g key={i}>\n                <circle\n                  className={`${\n                    circle.movement === 'TRUE' && !isOmitted ? 'movement' : ''\n                  } fill-realismo-circle-${circle.category ?? 'unknown'}`}\n                  style={{\n                    // fill: colorScale(circle.category),\n                    transformOrigin: `${cx}px ${cy}px`,\n                    animationDelay: `${delay}s`,\n                  }}\n                  r={isOmitted ? circleRadius * 0.5 : circleRadius * 1.5}\n                  cy={cy}\n                  cx={cx}\n                ></circle>\n                {circle.place && (\n                  <circle\n                    style={{ fill: '#000' }}\n                    r={circleRadius / 3}\n                    cy={cy}\n                    cx={cx}\n                  ></circle>\n                )}\n              </g>\n            )\n          })}\n        </g>\n      </g>\n    )\n  }\n)\n\nconst WormLabel = React.memo(\n  ({\n    racconto,\n    circles,\n    radius,\n    labelSize,\n    wormSize,\n    onClick,\n    isSelected,\n    isOmitted,\n    size,\n    flipText = false,\n  }) => {\n    const wormStart = radius - labelSize - wormSize - LABEL_PADDING\n    const wormEnd = radius - labelSize\n\n    const circleRadius = wormSize / circles.length / 2\n    const flipTextStyle = flipText\n      ? {\n          transform: 'rotate(180deg)',\n          transformOrigin: `${wormEnd}px 0px`,\n        }\n      : undefined\n\n    return (\n      <g\n        className={`worm-label-container${flipText ? '-flipped' : ''}`}\n        style={{\n          opacity: isSelected ? 1 : 0.3,\n        }}\n      >\n        <g style={flipTextStyle}>\n          <text\n            style={{ alignmentBaseline: 'middle' }}\n            x={wormEnd - (flipText ? LABEL_VISIBLE_SIZE : 0)}\n          >\n            {racconto.title}\n          </text>\n        </g>\n        <g>\n          {!flipText && (\n            <rect\n              className=\"worm-label-gradient-rect\"\n              x={wormEnd + LABEL_VISIBLE_SIZE}\n              y={-7}\n              width={size / 2 - wormSize}\n              height={14}\n              fill=\"url(#label-gradient)\"\n            />\n          )}\n          {flipText && (\n            <rect\n              className=\"worm-label-gradient-rect\"\n              x={30}\n              y={-7}\n              width={wormEnd}\n              height={14}\n              fill=\"url(#label-gradient-flip)\"\n            />\n          )}\n        </g>\n      </g>\n    )\n  }\n)\n\nconst CicrleYears = React.memo(({ x, y, radius, radiusStrokeSize }) => {\n  return (\n    <g transform={`translate(${x}, ${y})`}>\n      {yearsArcs.map((yearArc) => {\n        const flipText = yearArc.angleLabel >= 90 && yearArc.angleLabel <= 270\n        const textX = radius - radiusStrokeSize\n        return (\n          <g key={yearArc.year}>\n            <g style={{ transform: `rotate(${yearArc.angleLabel}deg)` }}>\n              <g\n                style={{\n                  transformOrigin: `${textX}px -3px`,\n                  transform: flipText ? 'rotate(180deg)' : undefined,\n                  fontSize: 10,\n                }}\n              >\n                <text textAnchor={flipText ? 'start' : 'end'} x={textX} y={0}>\n                  {yearArc.year}\n                </text>\n              </g>\n            </g>\n            <path\n              style={{ fill: '#ddd' }}\n              d={arcGenerator({\n                ...yearArc,\n                outerRadius: radius - radiusStrokeSize / 2,\n                innerRadius: radius + radiusStrokeSize / 2,\n              })}\n            />\n          </g>\n        )\n      })}\n    </g>\n  )\n})\n\nconst Legend = React.memo(\n  ({ labelSize, x, wormSize, endLineStart, endLineEnd }) => {\n    return (\n      <g>\n        <line\n          y1={0}\n          y2={labelSize}\n          x1={x}\n          x2={x}\n          stroke=\"black\"\n          strokeWidth={2}\n        />\n        {/* <text\n          x={x}\n          y={labelSize - LEGEND_TEXT_MARGIN}\n          className=\"realismo-legend-text\"\n          style={{\n            transformOrigin: `${x}px ${labelSize}px`,\n            transform: 'rotate(270deg)',\n          }}\n        >\n          TITOLO\n        </text> */}\n        <line\n          y1={labelSize + LABEL_PADDING}\n          y2={labelSize + LABEL_PADDING + wormSize}\n          x1={x}\n          x2={x}\n          stroke=\"black\"\n          strokeWidth={2}\n        />\n        <text\n          x={x}\n          y={labelSize + LABEL_PADDING - LEGEND_TEXT_MARGIN}\n          className=\"realismo-legend-text\"\n          textAnchor={'end'}\n          style={{\n            transformOrigin: `${x}px ${labelSize + LABEL_PADDING}px`,\n            transform: 'rotate(270deg)',\n          }}\n        >\n          FINE\n        </text>\n        <text\n          x={x}\n          y={labelSize + LABEL_PADDING + wormSize - LEGEND_TEXT_MARGIN}\n          className=\"realismo-legend-text\"\n          textAnchor={'start'}\n          style={{\n            transformOrigin: `${x}px ${labelSize + LABEL_PADDING + wormSize}px`,\n            transform: 'rotate(270deg)',\n          }}\n        >\n          INIZIO DEL TESTO\n        </text>\n\n        <line\n          y1={endLineStart}\n          y2={endLineEnd}\n          x1={x}\n          x2={x}\n          stroke=\"black\"\n          strokeWidth={2}\n        />\n        <g\n          style={{\n            transform: `translate(${x - 14}px, ${endLineEnd}px) rotate(270deg)`,\n          }}\n        >\n          <text\n            x={0}\n            y={0}\n            className=\"realismo-legend-text\"\n            textAnchor={'start'}\n          >\n            ANNO PRIMA\n          </text>\n          <text\n            x={0}\n            y={10}\n            className=\"realismo-legend-text\"\n            textAnchor={'start'}\n          >\n            PUBBLICAZIONE\n          </text>\n        </g>\n      </g>\n    )\n  }\n)\n\nexport default function CircleWorms({\n  heightCircle,\n  radius,\n  circlesMap,\n  selected,\n  selectedByHand,\n  omitted,\n  racconti,\n  raccontiJoinLines,\n  toggleSelect,\n}) {\n  const size = radius * 2\n  const handleClick = useCallback(\n    (racconto) => {\n      toggleSelect(racconto.title)\n    },\n    [toggleSelect]\n  )\n\n  const selectedKeys = Object.keys(selected)\n  const allSelected = selectedKeys.length === 0\n\n  const labelSize = (size / 2) * LABEL_SIZE_PERCENT\n  const wormSize = (size / 2) * WORM_SIZE_PERCENT\n  const innerRadius =\n    size / 2 - labelSize - wormSize - LABEL_PADDING - INNER_CIRCLE_PADDING\n\n  const endLineStart =\n    labelSize +\n    LABEL_PADDING +\n    wormSize +\n    INNER_CIRCLE_PADDING -\n    INNER_CIRCLE_STROKE_WIDTH / 2\n  const endLineEnd = endLineStart + 90\n\n  const paddingTop = (heightCircle - size) / 2\n\n  // 0 - 90\n  return (\n    <svg width={size + 200} height={heightCircle}>\n      <defs>\n        <linearGradient id=\"label-gradient\">\n          <stop offset=\"0%\" stopColor=\"rgba(255, 255, 255, 0)\"></stop>\n          <stop offset=\"10%\" stopColor=\"var(--bg)\"></stop>\n        </linearGradient>\n        <linearGradient id=\"label-gradient-flip\">\n          <stop offset=\"90%\" stopColor=\"var(--bg)\"></stop>\n          <stop offset=\"100%\" stopColor=\"rgba(255, 255, 255, 0)\"></stop>\n        </linearGradient>\n        <filter id=\"brightness\">\n          <feComponentTransfer>\n            <feFuncR type=\"linear\" slope=\"1.2\" />\n            <feFuncG type=\"linear\" slope=\"1.2\" />\n            <feFuncB type=\"linear\" slope=\"1.2\" />\n          </feComponentTransfer>\n        </filter>\n      </defs>\n\n      <g transform={`translate(${size / 2 + 100}, ${size / 2 + paddingTop})`}>\n        {selectedKeys.map((title) => {\n          const {\n            x1,\n            y1,\n            x2,\n            y2,\n            pointAX,\n            pointAY,\n            pointBX,\n            pointBY,\n          } = raccontiJoinLines[title]\n          return (\n            <g key={title}>\n              {/* <line x1={x1} y1={y1} x2={x2} y2={y2} fill=\"red\" stroke=\"red\" />\n              <circle cx={pointAX} cy={pointAY} r={5} fill={'blue'} />\n              <circle cx={pointBX} cy={pointBY} r={5} fill={'purple'} /> */}\n              <path\n                strokeDasharray=\"2\"\n                className={`realismo-label-join ${selectedByHand[title] ? 'reliasmo-label-join-explicit' : ''}`}\n                fill=\"none\"\n                d={`M ${x1} ${y1} C ${pointAX} ${pointAY}, ${pointBX} ${pointBY}, ${x2} ${y2}`}\n              />\n            </g>\n          )\n        })}\n\n        {/* {racconti.map((racconto, i) => {\n          const angle = racconto.rotation\n          return (\n            <g\n              key={i}\n              className={`worm-label worm-label-${i}`}\n              style={{ transform: `rotate(${angle}deg)` }}\n            >\n              <WormLabel\n                size={size}\n                flipText={angle >= 90 && angle <= 270}\n                isSelected={allSelected || !!selected[racconto.title]}\n                isOmitted={!!omitted[racconto.title]}\n                onClick={handleClick}\n                radius={size / 2}\n                labelSize={(size / 2) * LABEL_SIZE_PERCENT}\n                wormSize={(size / 2) * WORM_SIZE_PERCENT}\n                racconto={racconto}\n                circles={circlesMap[racconto.title]}\n              ></WormLabel>\n            </g>\n          )\n        })} */}\n        {/* <circle cx={0} cy={0} r={size / 2 - labelSize} fill='transparent' /> */}\n        {racconti.map((racconto, i) => {\n          const angle = racconto.rotation\n          return (\n            <g\n              key={i}\n              className={`worm-${i}`}\n              style={{ transform: `rotate(${angle}deg)` }}\n            >\n              <Worm\n                size={size}\n                flipText={angle >= 90 && angle <= 270}\n                isSelected={allSelected || !!selected[racconto.title]}\n                isOmitted={!!omitted[racconto.title]}\n                onClick={handleClick}\n                radius={size / 2}\n                labelSize={(size / 2) * LABEL_SIZE_PERCENT}\n                wormSize={(size / 2) * WORM_SIZE_PERCENT}\n                racconto={racconto}\n                circles={circlesMap[racconto.title]}\n              ></Worm>\n            </g>\n          )\n        })}\n      </g>\n      <g transform={`translate(100, ${paddingTop})`}>\n        <Legend\n          x={radius}\n          wormSize={wormSize}\n          labelSize={labelSize}\n          endLineStart={endLineStart}\n          endLineEnd={endLineEnd}\n        />\n\n        <CicrleYears\n          x={radius}\n          y={radius}\n          radius={innerRadius}\n          radiusStrokeSize={INNER_CIRCLE_STROKE_WIDTH}\n        />\n      </g>\n    </svg>\n  )\n}\n","import React, { useMemo } from 'react'\nimport { linkVertical } from 'd3-shape'\nimport { colorScale } from './utils'\nimport range from 'lodash/range'\nimport MiniInfoBox from '../../general/MiniInfoBox'\n\nconst CHART_PADDING_X = 80\nconst LEGEND_TEXT_HEIGHT = 150\n\nconst MINI_RADIUS = 20\nconst LOCATION_RADIUS = 2\n\nconst LEVEL_HEIGHT = 40\n\nconst WORM_MARGIN_TOP = 20\n\nconst CHART_MARGIN_LEFT = 100\n\nfunction yScale(level) {\n  return WORM_MARGIN_TOP + LEVEL_HEIGHT * level\n}\n\nfunction makeItemFill(item) {\n  if (item.ghost) {\n    return 'rgba(95, 102, 100, 0.5)'\n  }\n  if (item.movement === 'FALSE') {\n    return item.color\n  }\n  return `url(${makeItemGradientUrl(item)})`\n}\n\nfunction makeItemGradientUrl(item) {\n  let direction = ''\n  if (item.direction === 'forward') {\n    direction = '-forward'\n  } else if (item.direction === 'backward') {\n    direction = '-backward'\n  }\n  return `#worm-detail-${item.category}${direction}`\n}\n\nfunction WormDetail({ data, width: allWidth, title, year, toggleSelect }) {\n  const width = allWidth - CHART_PADDING_X * 2 - CHART_MARGIN_LEFT\n  const dataWorms = useMemo(() => {\n    return data.map((item) => {\n      const x1 =\n        item.startTotalNorm * width + CHART_PADDING_X + CHART_MARGIN_LEFT\n      const x2 = item.endTotalNorm * width + CHART_PADDING_X + CHART_MARGIN_LEFT\n      const xLocation =\n        item.locationTotalNorm * width + CHART_PADDING_X + CHART_MARGIN_LEFT\n      const color = colorScale(item.category)\n      return {\n        ...item,\n        level: +item.level,\n        color,\n        x1,\n        x2,\n        xLocation,\n      }\n    })\n  }, [data, width])\n\n  const maxLevel = 3\n\n  const labalesData = useMemo(() => {\n    let dataForLabels\n    const dataWormsLabeled = dataWorms.filter((d) => d.ghost !== true)\n    if (dataWormsLabeled.length < 13) {\n      dataForLabels = dataWormsLabeled.map((item, i) => {\n        const x = CHART_PADDING_X + CHART_MARGIN_LEFT + i * 60\n        return {\n          ...item,\n          x,\n          y: yScale(maxLevel),\n        }\n      })\n    } else {\n      const mul = width / (dataWormsLabeled.length - 1)\n      dataForLabels = dataWormsLabeled.map((item, i) => {\n        const x = CHART_PADDING_X + CHART_MARGIN_LEFT + i * mul\n        return {\n          ...item,\n          x,\n          y: yScale(maxLevel),\n        }\n      })\n    }\n    const link = linkVertical()\n    return dataForLabels.map((item) => {\n      const linePath = link({\n        source: [item.xLocation, yScale(item.level)],\n        target: [item.x, item.y - 5],\n      })\n      return {\n        ...item,\n        linePath,\n      }\n    })\n  }, [dataWorms, width])\n\n  const levelsData = useMemo(() => {\n    return range(maxLevel).map((level) => {\n      const dataLevelWorms = dataWorms.filter((d) => d.level === level)\n      const hasData = dataLevelWorms.length > 0\n      const dataLabel = labalesData.filter((d) => d.level === level)\n\n      return {\n        level,\n        dataLevelWorms,\n        hasData,\n        dataLabel,\n      }\n    })\n  }, [dataWorms, labalesData])\n\n  const totalLength = data[0]?.length ?? 0\n  let totalLabelX\n  const height = yScale(maxLevel) + LEGEND_TEXT_HEIGHT\n\n  let ghostWorm\n\n  // GHOST (no ambientazione)\n  if (dataWorms.length === 1 && dataWorms[0].occurrence_location === '0') {\n    ghostWorm = {\n      x1: 0 + CHART_PADDING_X + CHART_MARGIN_LEFT,\n      x2:\n        dataWorms[0].lengthTotalNorm * width +\n        CHART_PADDING_X +\n        CHART_MARGIN_LEFT,\n    }\n    totalLabelX = ghostWorm.x2\n  } else {\n    totalLabelX = dataWorms[dataWorms.length - 1]?.x2\n  }\n\n  return (\n    <div className=\"realismo-detail\">\n      <div className=\"realismo-detail-info-legend\">\n        Livelli\n        <br />\n        di annidamento\n        <br />\n        dei luoghi\n      </div>\n      <div style={{ margin: `0px ${CHART_PADDING_X}px` }}>\n        <MiniInfoBox\n          onClose={() => toggleSelect(title)}\n          style={{ marginLeft: CHART_MARGIN_LEFT }}\n        >\n          {title}, {year}\n        </MiniInfoBox>\n      </div>\n      <svg className=\"worm-detail-svg\" style={{ height }}>\n        <linearGradient id=\"worm-detail-indoor\">\n          <stop offset={'0%'} stopColor={'#ffc33e'} />\n          <stop offset={'50%'} stopColor={'#FFF3D7'}>\n            <animate\n              attributeName=\"offset\"\n              values=\"0;1;0\"\n              dur=\"8s\"\n              repeatCount=\"indefinite\"\n            ></animate>\n          </stop>\n          <stop offset={'100%'} stopColor={'#ffc33e'} />\n        </linearGradient>\n        <linearGradient id=\"worm-detail-indoor-backward\">\n          <stop offset={'0%'} stopColor={'#ffc33e'} />\n          <stop offset={'50%'} stopColor={'#FFF3D7'}>\n            <animate\n              attributeName=\"offset\"\n              values=\"1;0\"\n              dur=\"4s\"\n              repeatCount=\"indefinite\"\n            ></animate>\n          </stop>\n          <stop offset={'100%'} stopColor={'#ffc33e'} />\n        </linearGradient>\n        <linearGradient id=\"worm-detail-indoor-forward\">\n          <stop offset={'0%'} stopColor={'#ffc33e'} />\n          <stop offset={'50%'} stopColor={'#FFF3D7'}>\n            <animate\n              attributeName=\"offset\"\n              values=\"0;1\"\n              dur=\"4s\"\n              repeatCount=\"indefinite\"\n            ></animate>\n          </stop>\n          <stop offset={'100%'} stopColor={'#ffc33e'} />\n        </linearGradient>\n        <linearGradient id=\"worm-detail-outdoor\">\n          <stop offset={'0%'} stopColor={'#00c97c'} />\n          <stop offset={'50%'} stopColor={'#63FFC3'}>\n            <animate\n              attributeName=\"offset\"\n              values=\"0;1;0\"\n              dur=\"8s\"\n              repeatCount=\"indefinite\"\n            ></animate>\n          </stop>\n          <stop offset={'100%'} stopColor={'#00c97c'} />\n        </linearGradient>\n        <linearGradient id=\"worm-detail-outdoor-forward\">\n          <stop offset={'0%'} stopColor={'#00c97c'} />\n          <stop offset={'50%'} stopColor={'#63FFC3'}>\n            <animate\n              attributeName=\"offset\"\n              values=\"0;1\"\n              dur=\"4s\"\n              repeatCount=\"indefinite\"\n            ></animate>\n          </stop>\n          <stop offset={'100%'} stopColor={'#00c97c'} />\n        </linearGradient>\n        <linearGradient id=\"worm-detail-outdoor-backward\">\n          <stop offset={'0%'} stopColor={'#00c97c'} />\n          <stop offset={'50%'} stopColor={'#63FFC3'}>\n            <animate\n              attributeName=\"offset\"\n              values=\"1;0\"\n              dur=\"4s\"\n              repeatCount=\"indefinite\"\n            ></animate>\n          </stop>\n          <stop offset={'100%'} stopColor={'#00c97c'} />\n        </linearGradient>\n        <linearGradient id=\"worm-detail-transportation\">\n          <stop offset={'0%'} stopColor={'#4a4aff'} />\n          <stop offset={'50%'} stopColor={'#E3E3FF'}>\n            <animate\n              attributeName=\"offset\"\n              values=\"0;1;0\"\n              dur=\"8s\"\n              repeatCount=\"indefinite\"\n            ></animate>\n          </stop>\n          <stop offset={'100%'} stopColor={'#4a4aff'} />\n        </linearGradient>\n        <linearGradient id=\"worm-detail-transportation-forward\">\n          <stop offset={'0%'} stopColor={'#4a4aff'} />\n          <stop offset={'50%'} stopColor={'#E3E3FF'}>\n            <animate\n              attributeName=\"offset\"\n              values=\"0;1\"\n              dur=\"4s\"\n              repeatCount=\"indefinite\"\n            ></animate>\n          </stop>\n          <stop offset={'100%'} stopColor={'#4a4aff'} />\n        </linearGradient>\n        <linearGradient id=\"worm-detail-transportation-backward\">\n          <stop offset={'0%'} stopColor={'#4a4aff'} />\n          <stop offset={'50%'} stopColor={'#E3E3FF'}>\n            <animate\n              attributeName=\"offset\"\n              values=\"1;0\"\n              dur=\"4s\"\n              repeatCount=\"indefinite\"\n            ></animate>\n          </stop>\n          <stop offset={'100%'} stopColor={'#4a4aff'} />\n        </linearGradient>\n        <g transform={'translate(0, 10)'}>\n          {levelsData.map((datum) => (\n            <g\n              key={datum.level}\n              className={`worm-detail-grid-container ${\n                datum.hasData ? 'level-enabled' : 'level-disabled'\n              }`}\n            >\n              <line\n                x1={CHART_PADDING_X + CHART_MARGIN_LEFT}\n                x2={width + CHART_PADDING_X + CHART_MARGIN_LEFT}\n                y1={yScale(datum.level)}\n                y2={yScale(datum.level)}\n                className={`worm-detail-y-grid`}\n              ></line>\n              <text\n                className={'worm-detail-level-label'}\n                y={yScale(datum.level) + 4}\n                x={CHART_PADDING_X - 10 + CHART_MARGIN_LEFT}\n              >\n                {datum.level}\n              </text>\n            </g>\n          ))}\n\n          {levelsData.map((datum) => (\n            <g key={datum.level}>\n              {datum.dataLevelWorms.map((item) => (\n                <g key={item.occurrence_location}>\n                  <rect\n                    rx={2}\n                    ry={2}\n                    x={item.x1}\n                    width={item.x2 - item.x1}\n                    height={MINI_RADIUS}\n                    style={{\n                      fill: makeItemFill(item),\n                    }}\n                    y={yScale(item.level) - MINI_RADIUS / 2}\n                  />\n                </g>\n              ))}\n              {datum.dataLabel.map((item) => (\n                <g key={item.occurrence_location}>\n                  <path d={item.linePath} fill=\"none\" stroke=\"#858585\" />\n                  <g\n                    style={{\n                      transformOrigin: `${item.x}px ${item.y}px`,\n                      transform: `rotate(-45deg)`,\n                    }}\n                  >\n                    <text x={item.x} y={item.y} textAnchor=\"end\">\n                      {item.occurrence}\n                    </text>\n                  </g>\n                </g>\n              ))}\n              {datum.dataLevelWorms\n                .filter((d) => d.ghost !== true)\n                .map((item) => (\n                  <g key={item.occurrence_location}>\n                    <circle\n                      fill=\"black\"\n                      cx={item.xLocation}\n                      cy={yScale(item.level)}\n                      r={LOCATION_RADIUS}\n                    />\n                  </g>\n                ))}\n            </g>\n          ))}\n          {ghostWorm && (\n            <rect\n              rx={2}\n              ry={2}\n              x={ghostWorm.x1}\n              width={ghostWorm.x2 - ghostWorm.x1}\n              height={MINI_RADIUS}\n              style={{\n                fill: 'rgba(95, 102, 100, 0.5)',\n              }}\n              y={yScale(0) - MINI_RADIUS / 2}\n            />\n          )}\n        </g>\n\n        <text\n          textAnchor={totalLabelX / width >= 0.75 ? 'end' : 'middle'}\n          x={totalLabelX}\n          y={10}\n          style={{ fontSize: 12 }}\n        >\n          {totalLength} caratteri\n        </text>\n        <line\n          x1={totalLabelX}\n          x2={totalLabelX}\n          y1={12}\n          y2={18}\n          stroke={'black'}\n        />\n      </svg>\n    </div>\n  )\n}\n\nexport default React.memo(WormDetail)\n","import React, {\n  useState,\n  useCallback,\n  useRef,\n  useLayoutEffect,\n  useMemo,\n} from 'react'\nimport HelpSidePanel from '../../panels/HelpSidePanel/HelpSidePanel'\nimport MainMenu from '../../general/MainMenu'\nimport PageTitle from '../../general/PageTitle'\nimport AltOptions from '../../general/Options/AltOptions'\nimport SearchDropDown from '../../general/Search/SearchDropDownControlled'\nimport MoreInfo from '../../general/MoreInfo'\nimport CompassButton from '../../general/CompassButton/CompassButton'\nimport useDimensions from 'react-use-dimensions'\nimport GlobalData from '../../utilities/GlobalData'\nimport RangeFilter from '../../general/RangeFilter'\n\nimport sortBy from 'lodash/sortBy'\nimport difference from 'lodash/difference'\nimport uniqBy from 'lodash/uniqBy'\n\nimport {\n  datasetToCircles,\n  dataset,\n  raccontiDegs as racconti,\n  yearsExtent,\n  detailWormsCircles,\n} from './utils'\nimport CircleWorms from './CircleWorms'\nimport WormDetail from './WormDetail'\nimport { groupBy } from 'lodash'\n\nconst LABEL_BEZIER_DELTA_A = 30\nconst RESET_BOX_HEIGHT = 70\nconst REALISMO_DIAMETER_BASE = 760\n\nconst circlesMap = datasetToCircles(40)\n\nconst searchOptionsTitolo = racconti.map((racconto) => ({\n  label: racconto.title,\n  value: racconto.title,\n}))\nconst searchOptionsVolume = (() => {\n  const keyByTitolo = racconti.reduce((acc, r) => {\n    acc[r.title] = true\n    return acc\n  }, {})\n  return uniqBy(racconti, 'volume').map((racconto) => {\n    const volume = racconto.volume\n    let volumeLabel = volume\n    if (keyByTitolo[volumeLabel]) {\n      volumeLabel += ' (volume)'\n    }\n    return {\n      label: volumeLabel,\n      value: volumeLabel,\n      volume: volume,\n    }\n  })\n})()\n\nconst titoliByVolume = groupBy(racconti, 'volume')\n\nconst optionsMovimento = [\n  {\n    label: 'SI MOVIMENTO',\n  },\n  {\n    label: 'NO MOVIMENTO',\n  },\n]\n\nconst optionsSpace = [\n  {\n    label: 'INTERNO',\n    value: 'indoor',\n  },\n  {\n    label: 'ESTERNO',\n    value: 'outdoor',\n  },\n  {\n    label: 'MEZZO DI TRASPORTO',\n    value: 'transportation',\n  },\n  {\n    label: 'ASSENZA DI AMBIENTAZIONE',\n    value: 'no_setting',\n  },\n]\n\nconst cercaOptions = [\n  { label: 'Volume', value: 'volume' },\n  { label: 'Titolo', value: 'titolo' },\n]\n\nexport default function RealismoMain({ title }) {\n  const [helpSidePanelOpen, setHelpSidePanelOpen] = useState(true)\n  const toggleHelpSidePanel = useCallback(() => {\n    setHelpSidePanelOpen((a) => !a)\n  }, [])\n  const [findFor, setFindFor] = useState('Titolo')\n  const [ricerca, setRicerca] = useState([])\n\n  const helpPage = GlobalData.helpPages.realism.main\n\n  // const containerRef = useRef()\n  // const [measures, setMeasures] = useState(null)\n  // useLayoutEffect(() => {\n  //   const m = containerRef.current.getBoundingClientRect()\n  //   setMeasures(m)\n  // }, [])\n  const [ref, { width }] = useDimensions({ liveMeasure: false })\n  const [refCirlce, { height: heightCircle }] = useDimensions({\n    liveMeasure: false,\n  })\n\n  const [movimento, setMovimento] = useState(null)\n  const [spazio, setSpazio] = useState([])\n  const [timeFilter, setTimeFilter] = useState(yearsExtent)\n  const spazioLabels = useMemo(() => spazio.map((s) => s.label), [spazio])\n\n  const omitted = useMemo(() => {\n    const omittedStuff = {}\n    const spazioValues = spazio.map((s) => s.value)\n    Object.keys(dataset).forEach((titolo) => {\n      let keep = true\n\n      if (keep && movimento !== null) {\n        if (movimento === 'SI MOVIMENTO') {\n          keep = dataset[titolo].some((datum) => {\n            if (movimento === 'SI MOVIMENTO') {\n              return datum.movement === 'TRUE'\n            }\n            return false\n          })\n        } else {\n          keep = dataset[titolo].every((datum) => {\n            if (movimento === 'NO MOVIMENTO') {\n              return datum.movement === 'FALSE'\n            }\n            return false\n          })\n        }\n      }\n\n      if (keep && spazioValues.length > 0) {\n        const categories = dataset[titolo].map((i) => i.category)\n        keep = spazioValues.some((category) => {\n          if (category === 'indoor' || category === 'outdoor') {\n            return categories.every((wormCateogry) => wormCateogry === category)\n          }\n          return categories.indexOf(category) !== -1\n        })\n      }\n\n      if (keep) {\n        keep = dataset[titolo].every((d) => {\n          return (\n            d.year >= timeFilter[0].getFullYear() &&\n            d.year <= timeFilter[1].getFullYear()\n          )\n        })\n      }\n\n      if (!keep) {\n        omittedStuff[titolo] = true\n      }\n    })\n    return omittedStuff\n  }, [movimento, spazio, timeFilter])\n\n  const selected = useMemo(() => {\n    const mapSelected = {}\n    const volumeSelected = {}\n    ricerca.forEach((item) => {\n      if (!item.volume) {\n        mapSelected[item.value] = true\n      } else {\n        volumeSelected[item.volume] = true\n      }\n    })\n    racconti\n      .filter((r) => volumeSelected[r.volume])\n      .forEach((item) => {\n        mapSelected[item.title] = true\n      })\n    return mapSelected\n  }, [ricerca])\n\n  const selectedOnWorms = useMemo(() => {\n    const selected2 = { ...selected }\n    const omittedKeys = Object.keys(omitted)\n    if (omittedKeys.length > 0) {\n      const keeped = difference(Object.keys(dataset), omittedKeys)\n      keeped.forEach((key) => {\n        selected2[key] = true\n      })\n    }\n    return selected2\n  }, [selected, omitted])\n\n  const toggleSelect = useCallback((title) => {\n    setRicerca((ricerca) => {\n      const newRicerca = ricerca.filter((item) => item.value !== title)\n      if (ricerca.length === newRicerca.length) {\n        return ricerca.concat({ label: title, value: title })\n      }\n      return newRicerca\n    })\n  }, [])\n\n  const selctedTitoliSorted = useMemo(() => {\n    const ricercaTitoli = uniqBy(\n      ricerca\n        .filter((r) => r.volume)\n        .reduce(\n          (acc, r) =>\n            acc.concat(\n              titoliByVolume[r.volume].map((r) => ({\n                value: r.title,\n                label: r.title,\n              }))\n            ),\n          []\n        )\n        .concat(ricerca.filter((r) => !r.volume)),\n      'value'\n    )\n    return sortBy(ricercaTitoli, (item) => dataset[item.value]?.[0]?.year)\n  }, [ricerca])\n\n  const leftRacconti = useMemo(() => {\n    return racconti\n      .filter((r) => r.rotation >= 90 && r.rotation <= 270)\n      .reverse()\n  }, [])\n\n  const rightRacconti = useMemo(() => {\n    return racconti.filter((r) => !(r.rotation >= 90 && r.rotation <= 270))\n  }, [])\n\n  const lineHeightRight = heightCircle / rightRacconti.length\n  const lineHeightLeft = (heightCircle - RESET_BOX_HEIGHT) / leftRacconti.length\n\n  const raccontiFontSize = lineHeightRight < 11 ? 11 : 12\n  const realismoDiameter =\n    heightCircle < REALISMO_DIAMETER_BASE\n      ? heightCircle - 10\n      : REALISMO_DIAMETER_BASE\n  const realismoRadius = realismoDiameter / 2\n\n  const raccontiJoinLines = useMemo(() => {\n    const paddingTop = (heightCircle - realismoDiameter) / 2\n\n    return racconti.reduce((acc, racconto) => {\n      const isLeft = racconto.rotation >= 90 && racconto.rotation <= 270\n\n      let x1, x2, y1, y2, pointAX, pointAY, pointBX, pointBY\n\n      if (isLeft) {\n        const angle = Math.abs(180 - racconto.rotation)\n        const index = leftRacconti.indexOf(racconto)\n        x2 = -(realismoDiameter / 2 + 100) + 5\n        y2 =\n          -(realismoDiameter / 2) +\n          index * lineHeightLeft +\n          lineHeightLeft / 2 -\n          paddingTop +\n          RESET_BOX_HEIGHT\n\n        y1 =\n          -Math.sin((Math.PI / 180) * angle) *\n          (realismoRadius - 5) *\n          (racconto.rotation > 180 ? 1 : -1)\n        x1 = -Math.cos((Math.PI / 180) * angle) * (realismoRadius - 5)\n\n        pointAY =\n          -Math.sin((Math.PI / 180) * angle) *\n          (realismoRadius + LABEL_BEZIER_DELTA_A) *\n          (racconto.rotation > 180 ? 1 : -1)\n        pointAX =\n          -Math.cos((Math.PI / 180) * angle) *\n          (realismoRadius + LABEL_BEZIER_DELTA_A)\n      } else {\n        const index = rightRacconti.indexOf(racconto)\n        x2 = realismoDiameter / 2 + 100 - 5\n        y2 =\n          -(realismoDiameter / 2) +\n          index * lineHeightRight +\n          lineHeightRight / 2 -\n          paddingTop\n\n        const angle = Math.abs(racconto.rotation)\n\n        y1 =\n          -Math.sin((Math.PI / 180) * angle) *\n          (realismoRadius - 5) *\n          (racconto.rotation > 0 ? -1 : 1)\n        x1 = Math.cos((Math.PI / 180) * angle) * (realismoRadius - 5)\n\n        pointAY =\n          -Math.sin((Math.PI / 180) * angle) *\n          (realismoRadius + LABEL_BEZIER_DELTA_A) *\n          (racconto.rotation > 0 ? -1 : 1)\n        pointAX =\n          Math.cos((Math.PI / 180) * angle) *\n          (realismoRadius + LABEL_BEZIER_DELTA_A)\n      }\n\n      pointBX = (x1 + x2) / 2\n      pointBY = y2\n\n      acc[racconto.title] = {\n        x1,\n        y1,\n        x2,\n        y2,\n        pointAX,\n        pointAY,\n        pointBX,\n        pointBY,\n      }\n\n      return acc\n    }, {})\n  }, [\n    heightCircle,\n    realismoDiameter,\n    leftRacconti,\n    lineHeightLeft,\n    realismoRadius,\n    rightRacconti,\n    lineHeightRight,\n  ])\n\n  return (\n    <div>\n      <HelpSidePanel\n        open={helpSidePanelOpen}\n        page={helpPage}\n        closeButtonClicked={toggleHelpSidePanel}\n      />\n      <div className=\"top-nav navigations\">\n        <MainMenu className=\"main-menu\" style={{ gridColumn: 'span 1' }} />\n        <PageTitle title={title} style={{ gridColumn: 'span 10' }} />\n        <AltOptions\n          multiple={false}\n          title=\"Cerca per\"\n          options={cercaOptions}\n          value={findFor}\n          onChange={(x) => setFindFor(x.label)}\n          style={{\n            gridColumn: 'span 3',\n          }}\n        />\n        <SearchDropDown\n          style={{\n            gridColumn: 'span 8',\n          }}\n          data={{\n            options:\n              findFor === 'Titolo' ? searchOptionsTitolo : searchOptionsVolume,\n          }}\n          changeOptions={(newOptions) => {\n            setRicerca(newOptions)\n          }}\n          selectedOptions={ricerca}\n        />\n        <MoreInfo\n          style={{ gridColumn: 'span 1' }}\n          helpSidePanelOpen={helpSidePanelOpen} \n          onClicked={toggleHelpSidePanel}\n        />\n        <CompassButton\n          style={{\n            gridColumn: 'span 1',\n          }}\n        />\n      </div>\n      <div className=\"realismo-content\">\n        <div\n          className=\"h-100 w-100 d-flex justify-content-center realismo-circle-wrapper\"\n          style={{\n            position: 'relative',\n          }}\n        >\n          <div className=\"realismo-labels-container on-left text-right\">\n            <div className=\"realismo-reset\">\n              <div>\n                <div>Seleziona i test e poi scorri in basso</div>\n                <button\n                  onClick={() => {\n                    // Reset Selection\n                    setRicerca([])\n                    // Reset Filters\n                    setSpazio([])\n                    setMovimento(null)\n                    // setTimeFilter(yearsExtent)\n                  }}\n                >\n                  Reset\n                </button>\n              </div>\n            </div>\n            {leftRacconti.map((racconto, i) => {\n              return (\n                <div\n                  onClick={() => toggleSelect(racconto.title)}\n                  className={`realismo-label ${\n                    selected[racconto.title]\n                      ? 'realismo-label-selected'\n                      : omitted[racconto.title]\n                      ? 'realismo-label-omitted'\n                      : ''\n                  }`}\n                  style={{\n                    height: `${lineHeightLeft}px`,\n                    lineHeight: `${lineHeightLeft}px`,\n                  }}\n                  key={i}\n                >\n                  {racconto.title}\n                </div>\n              )\n            })}\n          </div>\n          <div className=\"circle-worms-the-wrapper\" ref={refCirlce}>\n            {heightCircle && (\n              <CircleWorms\n                heightCircle={heightCircle}\n                toggleSelect={toggleSelect}\n                selected={selectedOnWorms}\n                selectedByHand={selected}\n                omitted={omitted}\n                circlesMap={circlesMap}\n                racconti={racconti}\n                raccontiJoinLines={raccontiJoinLines}\n                radius={realismoRadius}\n              ></CircleWorms>\n            )}\n          </div>\n          <div className=\"realismo-labels-container on-right\">\n            {rightRacconti.map((racconto, i) => {\n              return (\n                <div\n                  style={{\n                    lineHeight: `${lineHeightRight}px`,\n                    height: `${lineHeightRight}px`,\n                    fontSize: `${raccontiFontSize}px`,\n                  }}\n                  onClick={() => toggleSelect(racconto.title)}\n                  className={`realismo-label ${\n                    selected[racconto.title]\n                      ? 'realismo-label-selected'\n                      : omitted[racconto.title]\n                      ? 'realismo-label-omitted'\n                      : ''\n                  }`}\n                  key={i}\n                >\n                  {racconto.title}\n                </div>\n              )\n            })}\n          </div>\n        </div>\n        <div className=\"bottom-nav navigations\">\n          <AltOptions\n            title=\"Movimento\"\n            options={optionsMovimento}\n            value={movimento}\n            allowEmpty={true}\n            onChange={(m) => {\n              if (m) {\n                setMovimento(m.label)\n              } else {\n                setMovimento(null)\n              }\n            }}\n            style={{\n              gridColumn: 'span 8',\n              textAlign: 'center',\n            }}\n          />\n          <AltOptions\n            title=\"Spazio\"\n            multiple\n            options={optionsSpace}\n            value={spazioLabels}\n            allowEmpty={true}\n            onChange={(s) => {\n              setSpazio(s)\n            }}\n            style={{\n              gridColumn: 'span 8',\n              textAlign: 'center',\n            }}\n          />\n          <RangeFilter\n            style={{ gridColumn: 'span 8' }}\n            data={timeFilter}\n            changeOptions={(timeSpan) => {\n              setTimeFilter(timeSpan)\n            }}\n          />\n        </div>\n      </div>\n      {ricerca.length > 0 && (\n        <div className=\"realismo-details-container\" ref={ref}>\n          <h4>VEDI IN DETTAGLIO I TESTI SELEZIONATI</h4>\n          {width &&\n            selctedTitoliSorted.map((item) => (\n              <WormDetail\n                data={detailWormsCircles[item.value]}\n                year={detailWormsCircles[item.value]?.[0]?.year}\n                title={item.value}\n                width={width}\n                key={item.value}\n                toggleSelect={toggleSelect}\n              />\n            ))}\n        </div>\n      )}\n    </div>\n  )\n}\n"],"sourceRoot":""}