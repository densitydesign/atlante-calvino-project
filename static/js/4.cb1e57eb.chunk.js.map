{"version":3,"sources":["general/Search/SearchDropDownControlled.js","../node_modules/lodash/mapValues.js","visualizations/Realismo/utils.js","visualizations/Realismo/CircleWorms.js","visualizations/Realismo/WormDetail.js","visualizations/Realismo/RealismoMain.js"],"names":["Search","this","props","maxTokens","selectedOptions","className","style","fontSize","position","top","ref","typeahead","multiple","onChange","selected","selectedGroups","groupBy","x","value","dupes","Object","keys","filter","length","newSelected","item","indexOf","changeOptions","disabled","onInputChange","options","data","id","filterBy","option","text","label","toLowerCase","renderMenu","results","menuProps","map","result","index","isSelected","key","renderMenuItemChildren","idx","selectedValues","search","renderToken","onRemove","tabIndex","onClick","focus","Component","defaultProps","gridColumn","baseAssignValue","require","baseForOwn","baseIteratee","module","exports","object","iteratee","realismoDataNormalized","realismoData","startNorm","start","endNorm","end","locationNorm","racconti","uniqBy","title","dataset","colorScale","scaleOrdinal","range","domain","unknown","Worm","React","memo","racconto","circles","radius","labelSize","wormSize","wormStart","wormEnd","circleRadius","yScale","scaleLinear","opacity","cursor","circle","i","fill","category","r","cy","level","cx","place","CircleWorms","size","circlesMap","toggleSelect","deltaAngle","handleClick","useCallback","allSelected","width","height","transform","margins","x1","x2","y1","y2","y","occurrence","n","mapValues","circleWidth","reduce","acc","out","find","push","searchOptions","cercaOptions","RealismoMain","useState","helpSidePanelOpen","setHelpSidePanelOpen","toggleHelpSidePanel","a","ricerca","setRicerca","helpPage","GlobalData","helpPages","plot","main","containerRef","useRef","measures","setMeasures","useLayoutEffect","m","current","getBoundingClientRect","Math","min","selcted","useMemo","mapSelected","forEach","newRicerca","concat","useDimensions","HelpSidePanel","open","page","closeButtonClicked","MainMenu","PageTitle","AltOptions","newOptions","MoreInfo","onClicked","CompassButton","color","backgroundColor"],"mappings":"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","file":"static/js/4.cb1e57eb.chunk.js","sourcesContent":["import React, { Component, createRef } from \"react\";\nimport \"../../App.css\";\nimport \"./SearchDropDown.css\";\nimport {\n  Typeahead,\n  Token,\n  Highlighter,\n  Menu,\n  MenuItem\n} from \"react-bootstrap-typeahead\";\nimport \"react-bootstrap-typeahead/css/Typeahead.css\";\nimport \"react-bootstrap-typeahead/css/Typeahead-bs4.css\";\nimport groupBy from \"lodash/groupBy\";\n\nconst renderToken = (option, props, idx) => (\n  <Token\n    disabled={props.disabled}\n    key={idx}\n    onRemove={props.onRemove}\n    tabIndex={props.tabIndex}\n  >\n    {option.label}\n  </Token>\n);\n\nconst renderMenuItemChildren = (option, props, idx, selectedValues) => {\n\n  return (\n    <Highlighter search={props.text} key={idx}>\n      {option.label}\n    </Highlighter>\n  );\n};\n\nclass Search extends Component {\n  render() {\n    let isSelection = false;\n    const { maxTokens, selectedOptions } = this.props;\n\n    return (\n      <div className=\"search-component\" style={this.props.style}>\n        {!isSelection && (\n          <span style={{ fontSize: \"1rem\", position: \"relative\", top: \"-3px\" }}>\n            /\n          </span>\n        )}\n        <Typeahead\n          ref={typeahead => (this.typeahead = typeahead)}\n          multiple\n          onChange={selected => {\n            const selectedGroups = groupBy(selected, x => x.value);\n            const dupes = Object.keys(selectedGroups).filter(\n              x => selectedGroups[x].length > 1\n            );\n            const newSelected = selected.filter(\n              item => dupes.indexOf(item.value) === -1\n            );\n            this.props.changeOptions(newSelected);\n          }}\n          selected={selectedOptions}\n          disabled={false}\n          onInputChange={this.props.onInputChange}\n          options={this.props.data.options}\n          id=\"main-search\"\n          filterBy={(option, props) => {\n            if (!props.text) {\n              return option;\n            }\n            return option.label.toLowerCase().indexOf(props.text.toLowerCase()) !== -1 ? option : null;\n          }}\n          renderMenu={(results, menuProps) => (\n            <Menu {...menuProps} className=\"rbt-menu-container\">\n              {results.map((result, index) => {\n                const isSelected =\n                selectedOptions.map(x => x.value).indexOf(result.value) !== -1;\n                return (\n                  <MenuItem\n                    key={index}\n                    option={result}\n                    position={index}\n                    className={`dropdown-item-selectable ${isSelected ? 'selected' : ''}`}\n                  >\n                    {result.label}\n                  </MenuItem>\n                );\n              })}\n            </Menu>\n          )}\n          renderMenuItemChildren={(option, props, idx) =>\n            renderMenuItemChildren(option, props, idx, selectedOptions)\n          }\n          renderToken={(option, props, index) => {\n            return index < maxTokens ? (\n              renderToken(option, props, index)\n            ) : index === maxTokens ? (\n              <span key={index} className=\"rbt-token\" onClick={() => this.typeahead.focus()}>+{selectedOptions.length - maxTokens}</span>\n            ) : null;\n          }}\n        />\n      </div>\n    );\n  }\n}\n\nexport default Search;\n\nSearch.defaultProps = {\n  maxTokens: 2,\n  style: {\n    gridColumn: \"span 4\"\n  }\n};\n","var baseAssignValue = require('./_baseAssignValue'),\n    baseForOwn = require('./_baseForOwn'),\n    baseIteratee = require('./_baseIteratee');\n\n/**\n * Creates an object with the same keys as `object` and values generated\n * by running each own enumerable string keyed property of `object` thru\n * `iteratee`. The iteratee is invoked with three arguments:\n * (value, key, object).\n *\n * @static\n * @memberOf _\n * @since 2.4.0\n * @category Object\n * @param {Object} object The object to iterate over.\n * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n * @returns {Object} Returns the new mapped object.\n * @see _.mapKeys\n * @example\n *\n * var users = {\n *   'fred':    { 'user': 'fred',    'age': 40 },\n *   'pebbles': { 'user': 'pebbles', 'age': 1 }\n * };\n *\n * _.mapValues(users, function(o) { return o.age; });\n * // => { 'fred': 40, 'pebbles': 1 } (iteration order is not guaranteed)\n *\n * // The `_.property` iteratee shorthand.\n * _.mapValues(users, 'age');\n * // => { 'fred': 40, 'pebbles': 1 } (iteration order is not guaranteed)\n */\nfunction mapValues(object, iteratee) {\n  var result = {};\n  iteratee = baseIteratee(iteratee, 3);\n\n  baseForOwn(object, function(value, key, object) {\n    baseAssignValue(result, key, iteratee(value, key, object));\n  });\n  return result;\n}\n\nmodule.exports = mapValues;\n","import realismoData from './data/realismo.json'\nimport groupBy from 'lodash/groupBy'\nimport uniqBy from 'lodash/uniqBy'\nimport {scaleOrdinal} from 'd3-scale'\nimport range from 'lodash/range'\nimport find from 'lodash/find'\nimport mapValues from 'lodash/mapValues'\nimport sortBy from 'lodash/sortBy'\n\n\nconst realismoDataNormalized = realismoData.map(item => ({\n  ...item,\n  startNorm: +item.start / item.length,\n  endNorm: +item.end / item.length,\n  locationNorm: +item['occurrence_location'] / +item.length,\n\n}))\n\n\nexport const racconti = uniqBy(realismoData, 'title').map(item => ({\n  title: item.title,\n  length: item.length,\n}))\n\n\nexport const dataset = groupBy(realismoDataNormalized, 'title')\n\n\nexport function datasetToCircles(n){\n  return mapValues(dataset, data => {\n\n    const circleWidth = 1 / n\n    \n    const circles = range(n).reduce(\n      (acc, item, i) => {\n  \n        const startNorm = i * circleWidth\n        const endNorm = (i + 1) * circleWidth \n        // const pos = (startNorm + endNorm) / 2\n        // const dataOrdered = sortBy(data, item => Math.abs(+item.locationNorm - pos))\n        const out = find(data, item => item.startNorm <= startNorm && item.endNorm >= endNorm) || {}\n        let place = false\n        if (out.occurrence && (i === 0 || acc[i-1].occurrence !== out.occurrence )){\n          place = true\n        } \n        acc.push({...out, place})\n        return acc\n\n        // return dataOrdered[0]\n      }\n    , [])\n  \n    return circles\n  \n  })\n}\n\n\n\nexport const colorScale = scaleOrdinal()\n  .range(['#ffc33e','#00c97c','#4a4aff'])\n  .domain(['indoor','outdoor','transportation'])\n  .unknown(['#ccc'])","import React, { useCallback } from 'react'\nimport { colorScale } from './utils'\nimport { scaleLinear } from 'd3-scale'\n\nconst Worm = React.memo(\n  ({ racconto, circles, radius, labelSize, wormSize, onClick, isSelected }) => {\n    const wormStart = radius - labelSize - wormSize\n    const wormEnd = radius - labelSize\n\n    const circleRadius = wormSize / circles.length / 2\n\n    const yScale = scaleLinear()\n      .domain([0, 2])\n      .range([0, circleRadius * 2])\n\n    return (\n      <g\n        style={{\n          opacity: isSelected ? 1 : 0.3,\n        }}\n      >\n        <g\n          onClick={() => onClick(racconto)}\n          style={{\n            cursor: 'pointer',\n          }}\n        >\n          {circles.map((circle, i) => {\n            return (\n              <g key={i}>\n                <circle\n                  className=\"movement\"\n                  style={{ fill: colorScale(circle.category) }}\n                  r={circleRadius * 1.5}\n                  cy={yScale(circle.level)}\n                  cx={wormStart + i * circleRadius * 2 + circleRadius}\n                ></circle>\n                {circle.place && (\n                  <circle\n                    style={{ fill: '#fff' }}\n                    r={circleRadius / 3}\n                    cy={yScale(circle.level)}\n                    cx={wormStart + i * circleRadius * 2 + circleRadius}\n                  ></circle>\n                )}\n              </g>\n            )\n          })}\n        </g>\n        <text x={wormEnd}>&nbsp;&nbsp;{racconto.title}</text>\n      </g>\n    )\n  }\n)\n\nexport default function CircleWorms({\n  size,\n  circlesMap,\n  selected,\n  racconti,\n  toggleSelect,\n}) {\n  const deltaAngle = 360 / racconti.length\n\n  const handleClick = useCallback((racconto) => {\n    toggleSelect(racconto.title)\n  }, [toggleSelect])\n\n  const allSelected = Object.keys(selected).length === 0\n\n  return (\n    <svg width={size} height={size}>\n      <g transform={`translate(${size / 2}, ${size / 2})`}>\n        {racconti.map((racconto, i) => (\n          <g key={i} style={{ transform: `rotate(${i * deltaAngle}deg)` }}>\n            <Worm\n              isSelected={allSelected || !!selected[racconto.title]}\n              onClick={handleClick}\n              radius={size / 2}\n              labelSize={size / 10}\n              wormSize={(size / 10) * 2}\n              racconto={racconto}\n              circles={circlesMap[racconto.title]}\n            ></Worm>\n          </g>\n        ))}\n      </g>\n    </svg>\n  )\n}\n","import React from 'react'\nimport { scaleLinear } from 'd3-scale'\nimport { colorScale } from './utils'\n\nfunction WormDetail({ title, circles, width }) {\n\n    const margins = {\n      h: 50,\n      v: 50,\n\n    }\n\n    const xScale = scaleLinear()\n      .domain([0, 1])\n      .range([0+margins.h, width-margins.h])\n\n    const circleRadius = width / circles.length / 2\n\n    const yScale = scaleLinear()\n      .domain([0, 2])\n      .range([margins.v + circleRadius*2,  circleRadius * 4 + margins.v * 2 - circleRadius ])\n\n\n\n  return (\n    <div className=\"realismo-detail border-dark\">\n      <h2>{title}</h2>\n      <svg className=\"worm-detail-svg\">\n\n\n      <line x1={0} x2={width} y1={yScale(0)} y2={yScale(0)} className=\"worm-detail-y-grid\"></line>\n      <line x1={0} x2={width} y1={yScale(1)} y2={yScale(1)} className=\"worm-detail-y-grid\"></line>\n      <line x1={0} x2={width} y1={yScale(2)} y2={yScale(2)} className=\"worm-detail-y-grid\"></line>\n\n      {circles.map((circle, i) => {\n            return (\n              <g key={i}>\n\n                {circle.place && (\n                  <g>\n                  <line className=\"worm-detail-x-place\" x1={i * circleRadius * 2 + circleRadius} x2={i * circleRadius * 2 + circleRadius} y1={yScale(circle.level || 0)} y2={250-margins.v}>\n\n                  </line>\n                    <text\n                    // style={{transformOrigin:`${i * circleRadius * 2 + circleRadius}px, ${200}px`}}\n                    className=\"worm-detail-place-label\" x={i * circleRadius * 2 + circleRadius} y={200}>{circle.occurrence}</text>\n                  </g>\n                )}\n\n\n                <circle\n                  className=\"movement\"\n                  style={{ fill: colorScale(circle.category) }}\n                  r={circleRadius}\n                  cy={yScale(circle.level || 0)}\n                  cx={ i * circleRadius * 2 + circleRadius}\n                ></circle>\n                {circle.place && (\n                  <circle\n                    style={{ fill: '#fff' }}\n                    r={circleRadius / 3}\n                    cy={yScale(circle.level)}\n                    cx={i * circleRadius * 2 + circleRadius}\n                  ></circle>\n                )}\n              </g>\n            )\n          })}\n\n\n\n\n      </svg>\n\n    </div>\n  )\n}\n\nexport default React.memo(WormDetail)","import React, {\n  useState,\n  useCallback,\n  useRef,\n  useLayoutEffect,\n  useMemo,\n} from 'react'\nimport HelpSidePanel from '../../panels/HelpSidePanel/HelpSidePanel'\nimport MainMenu from '../../general/MainMenu'\nimport PageTitle from '../../general/PageTitle'\nimport AltOptions from '../../general/Options/AltOptions'\nimport SearchDropDown from '../../general/Search/SearchDropDownControlled'\nimport MoreInfo from '../../general/MoreInfo'\nimport CompassButton from '../../general/CompassButton/CompassButton'\nimport useDimensions from \"react-use-dimensions\";\nimport GlobalData from '../../utilities/GlobalData'\n\nimport { datasetToCircles, dataset, racconti } from './utils'\nimport CircleWorms from './CircleWorms'\nimport WormDetail from './WormDetail'\n\nconst circlesMap = datasetToCircles(30)\n\nconst searchOptions = racconti.map((racconto) => ({\n  label: racconto.title,\n  value: racconto.title,\n}))\n\n// console.log('dataset', dataset)\n// console.log('circlesMap', circlesMap)\n\nconst cercaOptions = [{ label: 'Volume' }]\n\nexport default function RealismoMain({ title }) {\n  const [helpSidePanelOpen, setHelpSidePanelOpen] = useState(false)\n  const toggleHelpSidePanel = useCallback(() => {\n    setHelpSidePanelOpen((a) => !a)\n  }, [])\n  const [ricerca, setRicerca] = useState([])\n\n  const helpPage = GlobalData.helpPages.plot.main\n\n  const containerRef = useRef()\n  const [measures, setMeasures] = useState(null)\n  useLayoutEffect(() => {\n    const m = containerRef.current.getBoundingClientRect()\n    setMeasures(m)\n  }, [])\n  const size =\n    measures === null ? null : Math.min(measures.width, measures.height)\n\n  const selcted = useMemo(() => {\n    const mapSelected = {}\n    ricerca.forEach((item) => {\n      mapSelected[item.value] = true\n    })\n    return mapSelected\n  }, [ricerca])\n\n  const toggleSelect = useCallback((title) => {\n    setRicerca((ricerca) => {\n      const newRicerca = ricerca.filter((item) => item.value !== title)\n      if (ricerca.length === newRicerca.length) {\n        return ricerca.concat({ label: title, value: title })\n      }\n      return newRicerca\n    })\n  }, [])\n\n  const [ref, { x, y, width, height }] = useDimensions();\n\n  return (\n    <div>\n      <HelpSidePanel\n        open={helpSidePanelOpen}\n        page={helpPage}\n        closeButtonClicked={toggleHelpSidePanel}\n      />\n      <div className=\"top-nav navigations\">\n        <MainMenu className=\"main-menu\" style={{ gridColumn: 'span 1' }} />\n        <PageTitle title={title} style={{ gridColumn: 'span 10' }} />\n        <AltOptions\n          title=\"Cerca per\"\n          options={cercaOptions}\n          disabled={true}\n          value={'Volume'}\n          onChange={(x) => {}}\n          style={{\n            gridColumn: 'span 3',\n          }}\n        />\n        <SearchDropDown\n          style={{\n            gridColumn: 'span 8',\n          }}\n          data={{ options: searchOptions }}\n          changeOptions={(newOptions) => {\n            setRicerca(newOptions)\n          }}\n          selectedOptions={ricerca}\n        />\n        <MoreInfo\n          style={{ gridColumn: 'span 1' }}\n          onClicked={toggleHelpSidePanel}\n        />\n        <CompassButton\n          style={{\n            gridColumn: 'span 1',\n            color: 'white',\n            backgroundColor: 'black',\n          }}\n        />\n      </div>\n      <div className=\"realismo-content \" ref={containerRef}>\n        <div\n          className=\"h-100 w-100 d-flex justify-content-center align-items-center\"\n          style={{\n            position: 'relative',\n          }}\n        >\n          <div className=\"realismo-reset\">\n            <div>Seleziona i test e poi scorri in basso</div>\n            <button onClick={() => setRicerca([])}>reset</button>\n          </div>\n          <CircleWorms\n            toggleSelect={toggleSelect}\n            selected={selcted}\n            circlesMap={circlesMap}\n            racconti={racconti}\n            size={size}\n          ></CircleWorms>\n        </div>\n      </div>\n      {ricerca.length > 0 && <div className=\"realismo-details-container\" ref={ref}>\n      {width && ricerca.map((item) => (\n        <WormDetail\n          width={width}\n          key={item.value}\n          title={item.value}\n          circles={circlesMap[item.value]}\n        />\n      ))}\n      </div>}\n    </div>\n  )\n}\n"],"sourceRoot":""}