{"version":3,"sources":["../node_modules/d3-shape/src/curve/monotone.js","../node_modules/lodash/mapValues.js","general/MiniInfoBox/MiniInfoBox.js","../node_modules/lodash/minBy.js","../node_modules/lodash/_baseLt.js","../node_modules/lodash/take.js","../node_modules/lodash/orderBy.js","visualizations/Trama2/utils.js","visualizations/Trama2/GradientsDefinitions.js","visualizations/Trama2/RaccontoInfoBoxSvg.js","visualizations/Trama2/Brush.js","visualizations/Trama2/LineeTrama.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectWithoutPropertiesLoose.js","visualizations/Trama2/Star.js","visualizations/Trama2/BoxPlotGradientsDefinitions.js","visualizations/Trama2/BoxPlot.js","visualizations/Trama2/TramaDetail.js","visualizations/Trama2/SideBar.js","visualizations/Trama2/Trama2Content.js","visualizations/Trama2/Trama2Main.js"],"names":["sign","x","slope3","that","x2","y2","h0","_x1","_x0","h1","s0","_y1","_y0","s1","p","Math","min","abs","slope2","t","h","point","t0","t1","x0","y0","x1","y1","dx","_context","bezierCurveTo","MonotoneX","context","this","MonotoneY","ReflectContext","monotoneX","prototype","areaStart","_line","areaEnd","NaN","lineStart","_t0","_point","lineEnd","lineTo","closePath","y","moveTo","Object","create","call","baseAssignValue","require","baseForOwn","baseIteratee","module","exports","object","iteratee","result","value","key","MiniInfoBox","children","onClose","style","className","onClick","baseExtremum","baseLt","array","length","undefined","other","baseSlice","toInteger","n","guard","baseOrderBy","isArray","collection","iteratees","orders","motivoExtent","extent","ordineColore","item","makeScalaMotivoY","lineHeight","scaleLinear","domain","range","splitPath","d","pieces","split","reduce","acc","i","path","push","reverse","a","b","React","memo","prefix","gradientsType","byTipologia","map","gradientType","tipoFromName","tipoToName","tipoFrom","tipoTo","id","offset","stopColor","colore","colori","RaccontoInfoBoxSvg","titolo","containerRef","useRef","useState","measures","setMeasures","view","useContext","CurretTramaViewContext","useLayoutEffect","m","current","getBoundingClientRect","transform","cursor","width","height","rx","stroke","ref","textAnchor","userSelect","Brush","onNextClick","onPrevClick","controlledX","onXChange","BRUSH_HANDLE_WIDTH","uncontrolledX","setX","rawNextX","nextX","icon","faArrowLeft","axis","position","bounds","left","right","onDrag","e","faArrowRight","lineGenerator","line","curve","curveMonotoneX","SubPathsWithColors","subPaths","data","itemSelected","subPath","strokeSelected","motivo_type","fill","TramaPoints","transformOrigin","cx","cy","r","LineaTrama","racconto","selectedPoint","xScale","index","toggleItem","onRaccontoClick","showInfoUI","useMemo","handleClickRacconto","useCallback","element","data-subracconto","anno","originalX","ReactDOM","createPortal","document","getElementsByClassName","SelectedContainers","LineeTramaList","dataRacconti","currentXHoverRacconti","racconti","scalaColore","scalaMotivoY","selected","toggleSelect","datum","imperativeTranslate","currentScaleY","selectAll","attr","LineeTramaWithMeasuresReffed","forwardRef","colors","tipologieByTipologia","tipologie","setYears","svgRef","lastZoomedScaleYRef","useEffect","svg","scaleY","selection","select","zoom","scaleExtent","translateExtent","on","newScaleY","currentEvent","rescaleY","lowIndex","max","floor","hiIndex","prevYears","newYears","dataByRaccontiFinal","gradientsSet","Set","out","filter","add","Array","from","dataByRacconti","raccontoData","raccontoDatum","find","toFixed","handleNexPoint","nextPoints","keys","forEach","handlePrevPoint","xKey","setShowInfoUI","useImperativeHandle","rotateView","cb","raccontoDataIndex","findIndex","flyToX","scaleXBoxPlot","querySelectorAll","display","paths","start","animate","timestamp","k","dataFly","prevDatum","cachedResetStrokes","setAttribute","window","requestAnimationFrame","setTimeout","lastZoomScaleY","resetDPath","resettedDSubPaths","opacity","cleanUpAnimation","GradientsDefinitions","props","childRef","overflow","_objectWithoutProperties","source","excluded","target","sourceKeys","indexOf","getOwnPropertySymbols","sourceSymbolKeys","propertyIsEnumerable","rad2","sqrt","points","Star","size","svgStyle","strokeWidth","join","viewBox","scalaMotivo","colorsItems","values","sort","ordineMotivo","delta","motivi","uniqueItems","gradientUnits","tipologia","BoxPlotElement","zoomFactor","gradient","yScale","showBoxInOpacity","onGlyphoClick","bottom","top","widthBar","fontSize","fillOpacity","first","last","xAxisContainer","translations","setZoomFactor","actualScaleX","currentScaleX","formatAxisTick","scaleX","axisBottom","tickFormat","newScaleX","rescaleX","round","unstable_batchedUpdates","finalDataByRacconti","dataForRacconto","head","_last","uniqBy","minBy","maxBy","setShowBoxInOpacity","toggleBoxInOpacity","animationId","transition","cancelAnimationFrame","timeoutId","clearTimeout","BoxPlotGradientsDefinitions","calculateLabelScore","score","j","lenX","lenY","len","parseInt","TramaDetail","onBack","detailHeight","newData","fullData","raccontiIncastonati","inkMap","groupBy","minX","maxX","inkY","startY","endY","labelsData","dataWithScore","labelData","byTypeWithScore","orderBy","concat","keepByType","mapValues","keep","splice","finalLabels","keepLabel","hoverMotivo","setHoverMotivo","onMouseEnter","onMouseLeave","SideBarItem","addBound","disabled","fromDarkItem","itemHeight","disableEvents","Number","paddingLeft","background","tramaDetail","setBounds","boundsByKey","keyBy","leftAsMyNavGridIs","outerWidth","setWidth","setCurrentWidth","addEventListener","removeEventListener","useWindowWidth","lookupMap","looks","minDatum","maxDatum","lookup","tipologieGrouped","Infinity","motiviDetail","uniq","createContext","Trama2Content","byRacconto","setSelected","sidePanelOpen","setSidePanelOpen","toggleSidePanel","orderedBounds","sortBy","bound","indexes","indenx","sel","some","fromBounds","listRef","currentView","setCurrentView","currentTramaDetail","setCurrentTramaDetail","years","faAngleDoubleRight","borderBottom","MOTIVO_LINE_HEIGHT","Provider","ordineByCluster","coloriPosizioni","get","ordine","clusterByMotivo","mappaMotivoTipologia","ordineMotivoByMotivo","datasetTmpByRacconto","datasetLines","holes","motivo","end_motivo","start_motivo","totHolesSize","hole","holesSize","datasetLinesNormalized","flatten","tot","cluster","coloreCluster","ordineCluster","startMotivoNorm","endMotivoNorm","mese","fixScale","raccontiByRacconto","v","makeVizData","searchOptions","label","cercaOptions","Trama2Main","title","helpSidePanelOpen","setHelpSidePanelOpen","ricerca","setRicerca","toggleHelpSidePanel","helpPage","GlobalData","helpPages","plot","main","newRicerca","clearedBounds","HelpSidePanel","open","page","closeButtonClicked","MainMenu","gridColumn","PageTitle","AltOptions","options","onChange","changeOptions","newOptions","o","selectedOptions","MoreInfo","onClicked","CompassButton","color","backgroundColor"],"mappings":"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","file":"static/js/3.20b1549f.chunk.js","sourcesContent":["function sign(x) {\n  return x < 0 ? -1 : 1;\n}\n\n// Calculate the slopes of the tangents (Hermite-type interpolation) based on\n// the following paper: Steffen, M. 1990. A Simple Method for Monotonic\n// Interpolation in One Dimension. Astronomy and Astrophysics, Vol. 239, NO.\n// NOV(II), P. 443, 1990.\nfunction slope3(that, x2, y2) {\n  var h0 = that._x1 - that._x0,\n      h1 = x2 - that._x1,\n      s0 = (that._y1 - that._y0) / (h0 || h1 < 0 && -0),\n      s1 = (y2 - that._y1) / (h1 || h0 < 0 && -0),\n      p = (s0 * h1 + s1 * h0) / (h0 + h1);\n  return (sign(s0) + sign(s1)) * Math.min(Math.abs(s0), Math.abs(s1), 0.5 * Math.abs(p)) || 0;\n}\n\n// Calculate a one-sided slope.\nfunction slope2(that, t) {\n  var h = that._x1 - that._x0;\n  return h ? (3 * (that._y1 - that._y0) / h - t) / 2 : t;\n}\n\n// According to https://en.wikipedia.org/wiki/Cubic_Hermite_spline#Representations\n// \"you can express cubic Hermite interpolation in terms of cubic Bézier curves\n// with respect to the four values p0, p0 + m0 / 3, p1 - m1 / 3, p1\".\nfunction point(that, t0, t1) {\n  var x0 = that._x0,\n      y0 = that._y0,\n      x1 = that._x1,\n      y1 = that._y1,\n      dx = (x1 - x0) / 3;\n  that._context.bezierCurveTo(x0 + dx, y0 + dx * t0, x1 - dx, y1 - dx * t1, x1, y1);\n}\n\nfunction MonotoneX(context) {\n  this._context = context;\n}\n\nMonotoneX.prototype = {\n  areaStart: function() {\n    this._line = 0;\n  },\n  areaEnd: function() {\n    this._line = NaN;\n  },\n  lineStart: function() {\n    this._x0 = this._x1 =\n    this._y0 = this._y1 =\n    this._t0 = NaN;\n    this._point = 0;\n  },\n  lineEnd: function() {\n    switch (this._point) {\n      case 2: this._context.lineTo(this._x1, this._y1); break;\n      case 3: point(this, this._t0, slope2(this, this._t0)); break;\n    }\n    if (this._line || (this._line !== 0 && this._point === 1)) this._context.closePath();\n    this._line = 1 - this._line;\n  },\n  point: function(x, y) {\n    var t1 = NaN;\n\n    x = +x, y = +y;\n    if (x === this._x1 && y === this._y1) return; // Ignore coincident points.\n    switch (this._point) {\n      case 0: this._point = 1; this._line ? this._context.lineTo(x, y) : this._context.moveTo(x, y); break;\n      case 1: this._point = 2; break;\n      case 2: this._point = 3; point(this, slope2(this, t1 = slope3(this, x, y)), t1); break;\n      default: point(this, this._t0, t1 = slope3(this, x, y)); break;\n    }\n\n    this._x0 = this._x1, this._x1 = x;\n    this._y0 = this._y1, this._y1 = y;\n    this._t0 = t1;\n  }\n}\n\nfunction MonotoneY(context) {\n  this._context = new ReflectContext(context);\n}\n\n(MonotoneY.prototype = Object.create(MonotoneX.prototype)).point = function(x, y) {\n  MonotoneX.prototype.point.call(this, y, x);\n};\n\nfunction ReflectContext(context) {\n  this._context = context;\n}\n\nReflectContext.prototype = {\n  moveTo: function(x, y) { this._context.moveTo(y, x); },\n  closePath: function() { this._context.closePath(); },\n  lineTo: function(x, y) { this._context.lineTo(y, x); },\n  bezierCurveTo: function(x1, y1, x2, y2, x, y) { this._context.bezierCurveTo(y1, x1, y2, x2, y, x); }\n};\n\nexport function monotoneX(context) {\n  return new MonotoneX(context);\n}\n\nexport function monotoneY(context) {\n  return new MonotoneY(context);\n}\n","var baseAssignValue = require('./_baseAssignValue'),\n    baseForOwn = require('./_baseForOwn'),\n    baseIteratee = require('./_baseIteratee');\n\n/**\n * Creates an object with the same keys as `object` and values generated\n * by running each own enumerable string keyed property of `object` thru\n * `iteratee`. The iteratee is invoked with three arguments:\n * (value, key, object).\n *\n * @static\n * @memberOf _\n * @since 2.4.0\n * @category Object\n * @param {Object} object The object to iterate over.\n * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n * @returns {Object} Returns the new mapped object.\n * @see _.mapKeys\n * @example\n *\n * var users = {\n *   'fred':    { 'user': 'fred',    'age': 40 },\n *   'pebbles': { 'user': 'pebbles', 'age': 1 }\n * };\n *\n * _.mapValues(users, function(o) { return o.age; });\n * // => { 'fred': 40, 'pebbles': 1 } (iteration order is not guaranteed)\n *\n * // The `_.property` iteratee shorthand.\n * _.mapValues(users, 'age');\n * // => { 'fred': 40, 'pebbles': 1 } (iteration order is not guaranteed)\n */\nfunction mapValues(object, iteratee) {\n  var result = {};\n  iteratee = baseIteratee(iteratee, 3);\n\n  baseForOwn(object, function(value, key, object) {\n    baseAssignValue(result, key, iteratee(value, key, object));\n  });\n  return result;\n}\n\nmodule.exports = mapValues;\n","import React from 'react'\nimport './MiniInfoBox.css'\n\nexport default function MiniInfoBox({ children, onClose, style }) {\n  return (\n    <div className=\"MiniInfoBox\" style={style}>\n      <div className=\"MiniInfoBox-start\">{children}</div>\n      <div className=\"MiniInfoBox-end\" onClick={onClose}>\n        &times;\n      </div>\n    </div>\n  )\n}\n","var baseExtremum = require('./_baseExtremum'),\n    baseIteratee = require('./_baseIteratee'),\n    baseLt = require('./_baseLt');\n\n/**\n * This method is like `_.min` except that it accepts `iteratee` which is\n * invoked for each element in `array` to generate the criterion by which\n * the value is ranked. The iteratee is invoked with one argument: (value).\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Math\n * @param {Array} array The array to iterate over.\n * @param {Function} [iteratee=_.identity] The iteratee invoked per element.\n * @returns {*} Returns the minimum value.\n * @example\n *\n * var objects = [{ 'n': 1 }, { 'n': 2 }];\n *\n * _.minBy(objects, function(o) { return o.n; });\n * // => { 'n': 1 }\n *\n * // The `_.property` iteratee shorthand.\n * _.minBy(objects, 'n');\n * // => { 'n': 1 }\n */\nfunction minBy(array, iteratee) {\n  return (array && array.length)\n    ? baseExtremum(array, baseIteratee(iteratee, 2), baseLt)\n    : undefined;\n}\n\nmodule.exports = minBy;\n","/**\n * The base implementation of `_.lt` which doesn't coerce arguments.\n *\n * @private\n * @param {*} value The value to compare.\n * @param {*} other The other value to compare.\n * @returns {boolean} Returns `true` if `value` is less than `other`,\n *  else `false`.\n */\nfunction baseLt(value, other) {\n  return value < other;\n}\n\nmodule.exports = baseLt;\n","var baseSlice = require('./_baseSlice'),\n    toInteger = require('./toInteger');\n\n/**\n * Creates a slice of `array` with `n` elements taken from the beginning.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Array\n * @param {Array} array The array to query.\n * @param {number} [n=1] The number of elements to take.\n * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n * @returns {Array} Returns the slice of `array`.\n * @example\n *\n * _.take([1, 2, 3]);\n * // => [1]\n *\n * _.take([1, 2, 3], 2);\n * // => [1, 2]\n *\n * _.take([1, 2, 3], 5);\n * // => [1, 2, 3]\n *\n * _.take([1, 2, 3], 0);\n * // => []\n */\nfunction take(array, n, guard) {\n  if (!(array && array.length)) {\n    return [];\n  }\n  n = (guard || n === undefined) ? 1 : toInteger(n);\n  return baseSlice(array, 0, n < 0 ? 0 : n);\n}\n\nmodule.exports = take;\n","var baseOrderBy = require('./_baseOrderBy'),\n    isArray = require('./isArray');\n\n/**\n * This method is like `_.sortBy` except that it allows specifying the sort\n * orders of the iteratees to sort by. If `orders` is unspecified, all values\n * are sorted in ascending order. Otherwise, specify an order of \"desc\" for\n * descending or \"asc\" for ascending sort order of corresponding values.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Collection\n * @param {Array|Object} collection The collection to iterate over.\n * @param {Array[]|Function[]|Object[]|string[]} [iteratees=[_.identity]]\n *  The iteratees to sort by.\n * @param {string[]} [orders] The sort orders of `iteratees`.\n * @param- {Object} [guard] Enables use as an iteratee for methods like `_.reduce`.\n * @returns {Array} Returns the new sorted array.\n * @example\n *\n * var users = [\n *   { 'user': 'fred',   'age': 48 },\n *   { 'user': 'barney', 'age': 34 },\n *   { 'user': 'fred',   'age': 40 },\n *   { 'user': 'barney', 'age': 36 }\n * ];\n *\n * // Sort by `user` in ascending order and by `age` in descending order.\n * _.orderBy(users, ['user', 'age'], ['asc', 'desc']);\n * // => objects for [['barney', 36], ['barney', 34], ['fred', 48], ['fred', 40]]\n */\nfunction orderBy(collection, iteratees, orders, guard) {\n  if (collection == null) {\n    return [];\n  }\n  if (!isArray(iteratees)) {\n    iteratees = iteratees == null ? [] : [iteratees];\n  }\n  orders = guard ? undefined : orders;\n  if (!isArray(orders)) {\n    orders = orders == null ? [] : [orders];\n  }\n  return baseOrderBy(collection, iteratees, orders);\n}\n\nmodule.exports = orderBy;\n","//visual helpers\nimport { scaleLinear } from \"d3-scale\";\nimport { extent } from \"d3-array\";\n\n//data management\nimport groupBy from \"lodash/groupBy\";\nimport keyBy from \"lodash/keyBy\";\nimport sortBy from \"lodash/sortBy\";\nimport uniqBy from \"lodash/uniqBy\";\nimport minBy from \"lodash/minBy\";\nimport maxBy from \"lodash/maxBy\";\nimport mapValues from \"lodash/mapValues\";\nimport get from \"lodash/get\";\nimport take from \"lodash/take\";\nimport sum from \"lodash/sum\";\nimport flatten from \"lodash/flatten\";\n\nimport datasetLines from \"./dati/dataset_lines.json\";\nimport mappaMotivoTipologia from \"./dati/mappa_motivo_tipologia.json\";\nimport coloriPosizioni from \"./dati/colori_posizioni.json\";\nimport ordineColore from \"./dati/ordine_colore_y.json\";\n\nexport const MOTIVO_LINE_HEIGHT = 50;\n\nexport const motivoExtent = extent(\n  ordineColore,\n  (item) => +item[\"ordine tipologia\"]\n);\n\nexport function makeScalaMotivoY(lineHeight) {\n  return scaleLinear().domain(motivoExtent).range([lineHeight, 0]);\n}\n\nexport function makeVizData(scaleY) {\n  const ordineByCluster = keyBy(coloriPosizioni, \"valore\");\n  const tipologie = ordineColore.map((item) => ({\n    ...item,\n    colore: get(ordineByCluster, item[\"cluster tipologia\"]),\n  }));\n  const colors = sortBy(tipologie, (item) => item.colore.ordine).map(\n    (x) => x.colore.colori\n  );\n  const tipologieByTipologia = keyBy(tipologie, (item) => item.tipologia);\n\n  const clusterByMotivo = mapValues(\n    keyBy(mappaMotivoTipologia, \"motivo_type\"),\n    (item) => item[\"cluster tipologie\"]\n  );\n  const ordineMotivoByMotivo = mapValues(\n    keyBy(ordineColore, \"tipologia\"),\n    (item) => +item[\"ordine tipologia\"]\n  );\n\n  const fixHoles = (data) => {\n    const holes = data\n      .map((item, i) => {\n        const motivo = item[\"motivo_type\"];\n        const ordineMotivo = !!get(ordineMotivoByMotivo, motivo);\n        if (ordineMotivo) {\n          return null;\n        } else {\n          return {\n            index: i,\n            len: +item.end_motivo - item.start_motivo + 1,\n          };\n        }\n      })\n      .filter((x) => !!x);\n\n    const totHolesSize = holes.reduce((acc, hole) => acc + hole.len, 0);\n\n    let out = [];\n    data.forEach((datum, i) => {\n      const motivo = datum[\"motivo_type\"];\n      const ordineMotivo = get(ordineMotivoByMotivo, motivo);\n      if (ordineMotivo !== undefined) {\n        const holesForDatum = holes.filter((item) => item.index < i);\n        const holesSize = holesForDatum.reduce(\n          (acc, hole) => acc + hole.len,\n          0\n        );\n        out.push({\n          ...datum,\n          start_motivo: +datum.start_motivo - holesSize,\n          end_motivo: +datum.end_motivo - holesSize,\n          \"tot caratteri\": +datum[\"tot caratteri\"] - totHolesSize,\n        });\n      }\n    });\n    return out;\n  };\n\n  let datasetTmpByRacconto = groupBy(datasetLines, \"titolo racconto\");\n  datasetTmpByRacconto = mapValues(datasetTmpByRacconto, fixHoles);\n  const datasetLinesFinal = flatten(Object.values(datasetTmpByRacconto));\n\n  const datasetLinesNormalized = datasetLinesFinal.map((item) => {\n    const tot = +item[\"tot caratteri\"];\n    const motivo = item[\"motivo_type\"];\n    const cluster = get(clusterByMotivo, motivo);\n    const coloreCluster = get(ordineByCluster, `[${cluster}].colori`);\n    const ordineCluster = get(ordineByCluster, `[${cluster}].ordine`);\n    const ordineMotivo = get(ordineMotivoByMotivo, motivo);\n\n    const startMotivoNorm = +item.start_motivo / tot;\n    const endMotivoNorm = +item.end_motivo / tot;\n    const y = ordineMotivo !== undefined ? scaleY(ordineMotivo) : undefined;\n    const x = (startMotivoNorm + endMotivoNorm) / 2;\n\n    return {\n      ...item,\n      startMotivoNorm,\n      endMotivoNorm,\n      cluster,\n      coloreCluster,\n      ordineCluster: ordineCluster ? +ordineCluster : undefined,\n      ordineMotivo,\n      y,\n      x,\n    };\n  });\n\n  const byRacconto = groupBy(datasetLinesNormalized, \"titolo racconto\");\n\n  let racconti = sortBy(\n    uniqBy(datasetLines, (item) => item[\"titolo racconto\"]).map((item) => ({\n      titolo: item[\"titolo racconto\"],\n      anno: item[\"anno\"],\n      mese: item[\"mese\"],\n    })),\n    (item) => {\n      const anno = +item.anno;\n      const mese = +item.mese;\n\n      return `${anno.toFixed(4)}${mese.toFixed(2)}`;\n    }\n  );\n  // //#TODO: remove this (limiting for debug)\n  // racconti = take(racconti, 5)\n  //pre-computing filters\n  racconti = racconti.map((racconto) => {\n    const minDatum = minBy(\n      byRacconto[racconto.titolo],\n      (item) => item.ordineMotivo\n    );\n    const maxDatum = maxBy(\n      byRacconto[racconto.titolo],\n      (item) => item.ordineMotivo\n    );\n    const minX = byRacconto[racconto.titolo][0].x\n    const maxX = byRacconto[racconto.titolo][byRacconto[racconto.titolo].length - 1].x\n    const fixScale = scaleLinear().domain([minX, maxX]).range([0, 1])\n    // console.log(123, racconto.titolo, minDatum, maxDatum)\n    return { ...racconto, minDatum, maxDatum, minX, maxX, fixScale };\n  });\n\n\n  const raccontiByRacconto = keyBy(racconti, 'titolo')\n  const byRaccontoRemapped = mapValues(byRacconto, (values, k) => values.map(v => ({\n    ...v,\n    x: raccontiByRacconto[k].fixScale(v.x)\n\n  })))\n\n  // console.log(\"V\", byRacconto, byRaccontoRemapped)\n\n  return {\n    tipologie,\n    tipologieByTipologia,\n    colors,\n    racconti,\n    // byRacconto,\n    byRacconto: byRaccontoRemapped,\n  };\n}\n\nexport const splitPath = (d) => {\n  const pieces = d.split(\"C\");\n  const paths = pieces.reduce((acc, item, i) => {\n    if (i === 0) {\n      return acc;\n    }\n    if (i === 1) {\n      const path = pieces[0] + \"C\" + pieces[i];\n      acc.push(path);\n    } else {\n      const [a, b] = pieces[i - 1].split(\",\").reverse();\n      const path = `M${b},${a}C${pieces[i]}`;\n      acc.push(path);\n    }\n\n    return acc;\n  }, []);\n\n  return paths;\n};\n","import React from 'react'\n\nfunction GrandientsDefinitions({ prefix = '', gradientsType, byTipologia }) {\n  return (\n    <defs>\n      {gradientsType.map((gradientType) => {\n        const [tipoFromName, tipoToName] = gradientType.split('-')\n        const tipoFrom = byTipologia[tipoFromName]\n        const tipoTo = byTipologia[tipoToName]\n        return (\n          <linearGradient\n            x1=\"0\"\n            x2=\"0\"\n            y1=\"0\"\n            y2=\"1\"\n            key={gradientType}\n            id={prefix + gradientType}\n          >\n            {+tipoFrom['ordine tipologia'] > +tipoTo['ordine tipologia'] && (\n              <>\n                <stop offset=\"0%\" stopColor={tipoFrom.colore.colori}></stop>\n                <stop offset=\"100%\" stopColor={tipoTo.colore.colori}></stop>\n              </>\n            )}\n            {+tipoFrom['ordine tipologia'] < +tipoTo['ordine tipologia'] && (\n              <>\n                <stop offset=\"0%\" stopColor={tipoTo.colore.colori}></stop>\n                <stop offset=\"100%\" stopColor={tipoFrom.colore.colori}></stop>\n              </>\n            )}\n          </linearGradient>\n        )\n      })}\n    </defs>\n  )\n}\n\nexport default React.memo(GrandientsDefinitions)\n","import React, { useRef, useState, useLayoutEffect, useContext } from 'react'\nimport { CurretTramaViewContext } from './Trama2Content'\n\nconst RaccontoInfoBoxSvg = ({ titolo, x, y = 0, onClick }) => {\n  const containerRef = useRef(null)\n  const [measures, setMeasures] = useState(null)\n  const view = useContext(CurretTramaViewContext)\n\n  useLayoutEffect(() => {\n    const m = containerRef.current.getBoundingClientRect()\n    setMeasures(m)\n  }, [titolo, view])\n\n  return (\n    <g\n      onClick={onClick}\n      transform={`translate(${x}, ${y})`}\n      style={{ cursor: 'pointer' }}\n    >\n      {measures && (\n        <g transform={`translate(${-measures.width - 40}, -15)`}>\n          <rect\n            height={22}\n            width={measures.width + 35}\n            rx={5}\n            className=\"trama2-info-box\"\n          />\n          <line\n            x1={measures.width + 18}\n            x2={measures.width + 18}\n            y1={0}\n            y2={22}\n            className=\"trama2-info-box\"\n          />\n          <text stroke={'var(--dark-blue)'} x={measures.width + 22} y={15}>\n            o\n          </text>\n        </g>\n      )}\n      <text\n        ref={containerRef}\n        x={-30}\n        y={0}\n        style={{ textAnchor: 'end', userSelect: 'none' }}\n      >\n        {titolo}\n      </text>\n    </g>\n  )\n}\n\nexport default RaccontoInfoBoxSvg\n","import React, { useState } from 'react'\nimport Draggable from 'react-draggable'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faArrowLeft, faArrowRight } from '@fortawesome/free-solid-svg-icons'\n\nexport const BRUSH_HANDLE_WIDTH = 12\nconst Brush = React.memo(({\n  width,\n  onNextClick,\n  onPrevClick,\n  x: controlledX,\n  onXChange,\n  className = 'trama2-brush-container',\n}) => {\n  const [uncontrolledX, setX] = useState(width - BRUSH_HANDLE_WIDTH / 2)\n  const x = controlledX === undefined ? uncontrolledX : controlledX\n\n  return (\n    <>\n      <div\n        style={{\n          transform: `translateX(${x + BRUSH_HANDLE_WIDTH / 2}px)`,\n        }}\n        className=\"trama2-index-line\"\n      />\n      <div className={`${className} trama2-brush-container-flex`}>\n        <button\n          className=\"trama2-brush-button trama2-prev-brush-button\"\n          onClick={() => {\n            if (controlledX !== undefined) {\n              onPrevClick()\n              return\n            }\n            onPrevClick(x + BRUSH_HANDLE_WIDTH / 2, (rawNextX) => {\n              const nextX = rawNextX - BRUSH_HANDLE_WIDTH / 2\n              if (nextX >= 0 && x <= width - BRUSH_HANDLE_WIDTH / 2) {\n                setX(nextX)\n              }\n            })\n          }}\n        >\n          <FontAwesomeIcon icon={faArrowLeft} />\n        </button>\n        <div className=\"trama2-list-brush\">\n          <Draggable\n            axis=\"x\"\n            position={{ x, y: 0 }}\n            bounds={{\n              left: 0,\n              right: width - BRUSH_HANDLE_WIDTH / 2,\n            }}\n            onDrag={(e, position) => {\n              if (controlledX === undefined) {\n                setX(position.x)\n              } else {\n                onXChange(position.x)\n              }\n            }}\n          >\n            <div className=\"trama2-drag-handle\" />\n          </Draggable>\n        </div>\n        <button\n          className=\"trama2-brush-button trama2-next-brush-button\"\n          onClick={() => {\n            if (controlledX !== undefined) {\n              onNextClick()\n              return\n            }\n            onNextClick(x + BRUSH_HANDLE_WIDTH / 2, (rawNextX) => {\n              const nextX = rawNextX - BRUSH_HANDLE_WIDTH / 2\n              if (nextX >= 0 && x <= width - BRUSH_HANDLE_WIDTH / 2) {\n                setX(nextX)\n              }\n            })\n          }}\n        >\n          <FontAwesomeIcon icon={faArrowRight} />\n        </button>\n      </div>\n    </>\n  )\n})\nexport default Brush","import ReactDOM from 'react-dom'\nimport React, {\n  useRef,\n  useState,\n  useMemo,\n  useCallback,\n  useEffect,\n  useLayoutEffect,\n  useImperativeHandle,\n  forwardRef,\n} from 'react'\nimport { line, curveMonotoneX, curveStep } from 'd3-shape'\nimport { scaleLinear } from 'd3-scale'\nimport { zoom } from 'd3-zoom'\nimport { select, selectAll, event as currentEvent } from 'd3-selection'\n\nimport range from 'lodash/range'\nimport find from 'lodash/find'\nimport findIndex from 'lodash/findIndex'\n\nimport { splitPath, makeScalaMotivoY } from './utils'\nimport GradientsDefinitions from './GradientsDefinitions'\nimport RaccontoInfoBoxSvg from './RaccontoInfoBoxSvg'\nimport Brush, { BRUSH_HANDLE_WIDTH } from './Brush'\n\nconst lineGenerator = line()\n  .x((d) => d.x)\n  .y((d) => d.y)\n  .curve(curveMonotoneX)\n\nconst SubPathsWithColors = React.memo(({ subPaths, data, itemSelected }) => {\n  return (\n    <g>\n      {subPaths.map((subPath, i) => {\n        const isFill = data[i + 1].motivo_type === data[i].motivo_type\n        const strokeSelected = isFill\n          ? data[i].colori\n          : `url('#${data[i + 1].motivo_type}-${data[i].motivo_type}')`\n        return (\n          <path\n            key={i}\n            d={subPath}\n            className=\"trama2-line\"\n            style={{\n              stroke: itemSelected ? strokeSelected : '#ddd',\n              fill: 'none',\n            }}\n          ></path>\n        )\n      })}\n    </g>\n  )\n})\n\nconst TramaPoints = React.memo(({ data }) => {\n  return (\n    <g className=\"trama2-pointz\">\n      {data.map((d, i) => {\n        if (i === 0) {\n          return (\n            <rect key={i} x={d.x} y={d.y} className=\"trama2-start-symbol\">\n              <title>{d.motivo_type}</title>\n            </rect>\n          )\n        }\n        if (i === data.length - 1) {\n          return (\n            <rect\n              key={i}\n              x={d.x}\n              y={d.y}\n              style={{\n                transformOrigin: `${d.x}px ${d.y}px`,\n              }}\n              className=\"trama2-end-symbol\"\n            >\n              <title>{d.motivo_type}</title>\n            </rect>\n          )\n        }\n        return (\n          <circle className=\"trama2-circle\" key={i} cx={d.x} cy={d.y} r={2}>\n            <title>{d.motivo_type}</title>\n          </circle>\n        )\n      })}\n    </g>\n  )\n})\n\nconst LineaTrama = React.memo(\n  ({\n    racconto,\n    data,\n    xScale,\n    selectedPoint,\n    width,\n    height,\n    index,\n    itemSelected,\n    toggleItem,\n    onRaccontoClick,\n    showInfoUI = true,\n  }) => {\n    const [d, subPaths] = useMemo(() => {\n      const d = lineGenerator(data)\n      const subPaths = splitPath(d)\n      return [d, subPaths]\n    }, [data])\n\n    const handleClickRacconto = useCallback(\n      (e) => {\n        onRaccontoClick(data, e)\n      },\n      [onRaccontoClick, data]\n    )\n\n    const element = (\n      <g data-subracconto={data.racconto.titolo}>\n        <SubPathsWithColors\n          subPaths={subPaths}\n          data={data}\n          itemSelected={itemSelected}\n        />\n        <path\n          d={d}\n          onClick={() => toggleItem(racconto.titolo)}\n          className={`trama2-pointer ${itemSelected ? 'selected' : ''}`}\n        ></path>\n\n        {itemSelected && (\n          <g>\n            <TramaPoints data={data} />\n            {showInfoUI && (\n              <RaccontoInfoBoxSvg\n                onClick={handleClickRacconto}\n                y={-10}\n                x={width}\n                titolo={`${data.racconto.titolo}, ${data.racconto.anno}`}\n              />\n            )}\n          </g>\n        )}\n        {selectedPoint && showInfoUI && (\n          <g>\n            <text\n              style={{\n                transformOrigin: `${selectedPoint.x}px ${selectedPoint.y}px`,\n                transform:\n                  selectedPoint.originalX < 0.2\n                    ? 'rotate(30deg) translate(5px, 5px)'\n                    : `rotate(-30deg) translateX(-10px)`,\n              }}\n              x={selectedPoint.x}\n              y={selectedPoint.y}\n              textAnchor={selectedPoint.originalX < 0.2 ? 'start' : 'end'}\n            >\n              {selectedPoint.motivo_type}\n            </text>\n          </g>\n        )}\n      </g>\n    )\n    if (itemSelected) {\n      return ReactDOM.createPortal(\n        element,\n        document.getElementsByClassName('linea-container-selected')[index]\n      )\n    }\n    return element\n  }\n)\n\nconst SelectedContainers = React.memo(({ n }) => {\n  return (\n    <g>\n      {range(n).map((i) => (\n        <g key={i} className=\"linea-container-selected\" />\n      ))}\n    </g>\n  )\n})\n\nconst LineeTramaList = React.memo(\n  ({\n    measures,\n    dataRacconti,\n    currentXHoverRacconti,\n    racconti,\n    onRaccontoClick,\n    height,\n    scalaColore,\n    scalaMotivoY,\n    selected,\n    toggleSelect,\n    xScale,\n    showInfoUI = true,\n  }) => {\n    return (\n      <g>\n        {dataRacconti.map((datum, i) => {\n          return (\n            <g key={i} className=\"linea-container\">\n              <LineaTrama\n                selectedPoint={\n                  currentXHoverRacconti &&\n                  currentXHoverRacconti[racconti[i].titolo]\n                    ? currentXHoverRacconti[racconti[i].titolo]\n                    : null\n                }\n                onRaccontoClick={onRaccontoClick}\n                scalaColore={scalaColore}\n                scalaMotivoY={scalaMotivoY}\n                index={i}\n                width={measures.width}\n                height={height}\n                itemSelected={selected[racconti[i].titolo]}\n                toggleItem={toggleSelect}\n                xScale={xScale}\n                racconto={racconti[i]}\n                data={datum}\n                showInfoUI={showInfoUI}\n              ></LineaTrama>\n            </g>\n          )\n        })}\n      </g>\n    )\n  }\n)\n\nconst HORIZ_PADDING = 20\n\nfunction imperativeTranslate(currentScaleY) {\n  selectAll('.linea-container').attr(\n    'transform',\n    (d, i) => 'translate(0, ' + currentScaleY(i) + ')'\n  )\n  selectAll('.linea-container-selected').attr(\n    'transform',\n    (d, i) => 'translate(0, ' + currentScaleY(i) + ')'\n  )\n}\n\nfunction LineeTramaWithMeasures(\n  {\n    racconti = [],\n    data = {},\n    height,\n    scalaColore,\n    scalaMotivoY,\n    colors,\n    selected,\n    toggleSelect,\n    onRaccontoClick,\n    tipologie,\n    tipologieByTipologia,\n    setYears,\n    measures,\n  },\n  ref\n) {\n  const svgRef = useRef(null)\n  const lastZoomedScaleYRef = useRef(null)\n\n  useEffect(() => {\n    if (measures) {\n      const svg = svgRef.current\n      const scaleY = scaleLinear()\n        .domain([0, racconti.length])\n        .range([0 + height, measures.height - height])\n\n      imperativeTranslate(scaleY)\n\n      function handleZoom() {\n        const newScaleY = currentEvent.transform.rescaleY(scaleY)\n        lastZoomedScaleYRef.current = newScaleY\n        imperativeTranslate(newScaleY)\n\n        const domain = newScaleY.domain()\n        const lowIndex = Math.max(0, Math.floor(domain[0]))\n        const hiIndex = Math.min(racconti.length - 1, Math.floor(domain[1]))\n\n        setYears((prevYears) => {\n          const newYears = [racconti[lowIndex].anno, racconti[hiIndex].anno]\n          if (newYears[0] !== prevYears[0] || newYears[1] !== prevYears[1]) {\n            return newYears\n          }\n          return prevYears\n        })\n      }\n\n      const selection = select(svg)\n      selection.call(\n        zoom()\n          .scaleExtent([1, 10])\n          .translateExtent([\n            [0, 0],\n            [measures.width, measures.height],\n          ])\n          .on('zoom', handleZoom)\n      )\n      return () => {\n        selection.on('.zoom', null)\n      }\n    }\n  }, [height, measures, racconti, setYears])\n\n  const xScale = useMemo(() => {\n    if (!measures) {\n      return null\n    }\n    return scaleLinear()\n      .domain([0, 1])\n      .range([HORIZ_PADDING, measures.width - HORIZ_PADDING])\n  }, [measures])\n\n  const [dataRacconti, dataByRacconti, gradientsType] = useMemo(() => {\n    if (!xScale) {\n      return [[], []]\n    }\n    const dataByRaccontiFinal = {}\n    const gradientsSet = new Set()\n    const finalDataRacconti = racconti.map((racconto) => {\n      let out = data[racconto.titolo].filter((d) => d.y !== undefined)\n      out = out.map((d, i) => {\n        if (i > 0) {\n          gradientsSet.add(d.motivo_type + '-' + out[i - 1].motivo_type)\n        }\n        return {\n          ...d,\n          colori: tipologieByTipologia[d.motivo_type].colore.colori,\n          originalX: d.x,\n          x: xScale(d.x),\n          y: d.y,\n        }\n      })\n      out.racconto = racconto\n      dataByRaccontiFinal[racconto.titolo] = out\n      return out\n    })\n    return [finalDataRacconti, dataByRaccontiFinal, Array.from(gradientsSet)]\n  }, [data, racconti, xScale, tipologieByTipologia])\n\n  const [x, setX] = useState(measures.width - BRUSH_HANDLE_WIDTH / 2)\n\n  useEffect(() => {\n    const initialTitle = 'Il cavaliere inesistente'\n    const raccontoData = dataByRacconti[initialTitle]\n    const raccontoDatum = find(raccontoData, (datum) => {\n      if (\n        datum.originalX.toFixed(2) === '0.77' &&\n        datum.motivo_type === 'viaggio'\n      ) {\n        return true\n      }\n      return false\n    })\n    if (raccontoDatum) {\n      setX(+raccontoDatum.x - BRUSH_HANDLE_WIDTH / 2)\n    }\n    toggleSelect(initialTitle)\n  }, [toggleSelect, dataByRacconti])\n\n  const handleNexPoint = useCallback(() => {\n    const nextPoints = Object.keys(selected).reduce((acc, titolo) => {\n      const dataTrama = dataByRacconti[titolo]\n      dataTrama.forEach((datum) => {\n        if (datum.x > x + BRUSH_HANDLE_WIDTH / 2) {\n          acc.push(datum.x)\n        }\n      })\n      return acc\n    }, [])\n    if (nextPoints.length) {\n      const nextX = Math.min(...nextPoints) - BRUSH_HANDLE_WIDTH / 2\n      if (nextX >= 0 && x <= measures.width - BRUSH_HANDLE_WIDTH / 2) {\n        setX(nextX)\n      }\n    }\n  }, [dataByRacconti, measures, selected, x])\n\n  const handlePrevPoint = useCallback(() => {\n    const nextPoints = Object.keys(selected).reduce((acc, titolo) => {\n      const dataTrama = dataByRacconti[titolo]\n      dataTrama.forEach((datum) => {\n        if (datum.x < x + BRUSH_HANDLE_WIDTH / 2) {\n          acc.push(datum.x)\n        }\n      })\n      return acc\n    }, [])\n    if (nextPoints.length) {\n      const nextX = Math.max(...nextPoints) - BRUSH_HANDLE_WIDTH / 2\n      if (nextX >= 0 && x <= measures.width - BRUSH_HANDLE_WIDTH / 2) {\n        setX(nextX)\n      }\n    }\n  }, [dataByRacconti, selected, measures, x])\n\n  const trameByPoints = useMemo(() => {\n    return Object.keys(selected).reduce((acc, titolo) => {\n      const racconto = dataByRacconti[titolo]\n      racconto.forEach((datum) => {\n        const xKey = datum.x.toFixed(0)\n        acc[xKey] = acc[xKey] || {}\n        acc[xKey][titolo] = {\n          motivo_type: datum.motivo_type,\n          originalX: datum.originalX,\n          x: datum.x,\n          y: datum.y,\n        }\n      })\n      return acc\n    }, {})\n  }, [selected, dataByRacconti])\n\n  const xPoint = +x.toFixed(0) + BRUSH_HANDLE_WIDTH / 2\n  const currentXHoverRacconti = trameByPoints[xPoint]\n\n  const [showInfoUI, setShowInfoUI] = useState(true)\n  useImperativeHandle(ref, () => ({\n    rotateView: (cb) => {\n      // TURN OFF UGLY UI INFO 4 ANIMATION\n      setShowInfoUI(false)\n\n      const scaleYOriginal = scaleLinear()\n        .domain([0, racconti.length])\n        .range([0 + height, measures.height - height])\n      imperativeTranslate(scaleYOriginal)\n\n      const raccontoDataIndex = findIndex(\n        dataRacconti,\n        (r) => r.racconto.titolo === 'Il cavaliere inesistente'\n      )\n      const raccontoData = dataRacconti[raccontoDataIndex]\n\n      const scaleXBoxPlot = scaleLinear()\n        .domain([0, racconti.length])\n        .range([10, measures.width - 10])\n\n      const flyToX = scaleXBoxPlot(raccontoDataIndex)\n\n      // Hide Points\n      document\n        .querySelectorAll(\n          '[data-subracconto=\"Il cavaliere inesistente\"] .trama2-pointz'\n        )\n        .forEach((p) => (p.style.display = 'none'))\n      const paths = document.querySelectorAll(\n        '[data-subracconto=\"Il cavaliere inesistente\"] path.trama2-line'\n      )\n      let scaleMotivo = makeScalaMotivoY(600)\n      scaleMotivo.range([-200, 400])\n\n      let start = null\n      function animate(timestamp) {\n        if (start === null) {\n          start = timestamp\n        }\n        const k = (timestamp - start) / 1500\n\n        const dataFly = []\n        for (let i = 1; i < raccontoData.length; i++) {\n          const prevDatum = raccontoData[i - 1]\n          const datum = raccontoData[i]\n\n          // const y1 = prevDatum.y * (1 - k) + k * 25\n          // const y2 = datum.y * (1 - k) + k * 25\n          const y1 = prevDatum.y\n          const y2 = datum.y\n\n          const x1 = prevDatum.x * (1 - k) + k * flyToX\n          const x2 = datum.x * (1 - k) + k * flyToX\n\n          dataFly.push(`M ${x1} ${y1} L ${x2} ${y2}`)\n        }\n        paths.forEach((path, i) => {\n          cachedResetStrokes[i] = path.style.stroke\n          path.setAttribute('d', dataFly[i])\n        })\n\n        if (k < 1) {\n          window.requestAnimationFrame(animate)\n        } else {\n          start = null\n          setTimeout(() => {\n            cb()\n            cleanUpAnimation()\n          }, 50)\n          // window.requestAnimationFrame(animate2)\n        }\n      }\n\n      const cachedResetStrokes = []\n\n      // function animate2(timestamp) {\n      //   if (start === null) {\n      //     start = timestamp\n      //   }\n      //   const k = (timestamp - start) / 1000\n\n      //   const dataFly = []\n      //   for (let i = 1; i < raccontoData.length; i++) {\n      //     const prevDatum = raccontoData[i - 1]\n      //     const datum = raccontoData[i]\n\n      //     const y1 = 25 * (1 - k) + k * scaleMotivo(prevDatum.ordineMotivo)\n      //     const y2 = 25 * (1 - k) + k * scaleMotivo(datum.ordineMotivo)\n\n      //     const x1 = flyToX\n      //     const x2 = flyToX\n\n      //     dataFly.push(`M ${x1} ${y1} L ${x2} ${y2}`)\n      //   }\n      //   paths.forEach((path, i) => {\n      //     path.setAttribute('d', dataFly[i])\n      //     path.style.stroke = 'var(--blue)'\n      //   })\n      //   if (k < 1) {\n      //     window.requestAnimationFrame(animate2)\n      //   } else {\n      //     cb()\n      //     cleanUpAnimation()\n      //   }\n      // }\n\n      function cleanUpAnimation() {\n        // CLEAN UP ANIMATION\n\n        // SHOW INFO UI\n        setShowInfoUI(true)\n\n        // RESET ZOOM STATE\n        const lastZoomScaleY = lastZoomedScaleYRef.current\n        if (lastZoomScaleY) {\n          imperativeTranslate(lastZoomScaleY)\n        }\n        // RESET SELECTED LINE\n        const resetDPath = lineGenerator(raccontoData)\n        const resettedDSubPaths = splitPath(resetDPath)\n        paths.forEach((path, i) => {\n          path.setAttribute('d', resettedDSubPaths[i])\n          path.style.stroke = cachedResetStrokes[i]\n        })\n        // Reset opacity\n        document.querySelectorAll(\n          '[data-subracconto]:not([data-subracconto=\"Il cavaliere inesistente\"]) path.trama2-line'\n        ).forEach(p => p.style.opacity = '1')\n        // Show Points\n        document\n          .querySelectorAll(\n            '[data-subracconto=\"Il cavaliere inesistente\"] .trama2-pointz'\n          )\n          .forEach((p) => (p.style.display = 'initial'))\n      }\n\n      // Opacity lines\n      document.querySelectorAll(\n        '[data-subracconto]:not([data-subracconto=\"Il cavaliere inesistente\"]) path.trama2-line'\n      ).forEach(p => p.style.opacity = '0.1')\n\n      setTimeout(() => {\n        window.requestAnimationFrame(animate)\n      }, 800)\n    },\n  }))\n\n  return (\n    <>\n      <div className=\"trama2-top-legend-list\">Scrolla per zoomare</div>\n      <svg\n        style={{\n          height: measures.height,\n          width: measures.width,\n        }}\n        ref={svgRef}\n      >\n        <GradientsDefinitions\n          byTipologia={tipologieByTipologia}\n          gradientsType={gradientsType}\n        />\n        <g className=\"wrapper\">\n          <LineeTramaList\n            measures={measures}\n            dataRacconti={dataRacconti}\n            currentXHoverRacconti={currentXHoverRacconti}\n            racconti={racconti}\n            onRaccontoClick={onRaccontoClick}\n            height={height}\n            scalaColore={scalaColore}\n            scalaMotivoY={scalaMotivoY}\n            selected={selected}\n            toggleSelect={toggleSelect}\n            xScale={xScale}\n            showInfoUI={showInfoUI}\n          />\n          <SelectedContainers n={dataRacconti.length} />\n        </g>\n      </svg>\n      {showInfoUI && (\n        <Brush\n          x={x}\n          onXChange={setX}\n          onPrevClick={handlePrevPoint}\n          onNextClick={handleNexPoint}\n          width={measures.width}\n          className=\"trama2-brush-for-list\"\n        />\n      )}\n      <div className=\"trama2-brush-legend-list\">\n        <div>Inizio del testo</div>\n        <div>Lunghezza del testo in caratteri</div>\n        <div>Fine del testo</div>\n      </div>\n    </>\n  )\n}\n\nlet LineeTramaWithMeasuresReffed = forwardRef(LineeTramaWithMeasures)\n\nfunction LineeTrama(props, ref) {\n  const containerRef = useRef(null)\n  const [measures, setMeasures] = useState(null)\n\n  useLayoutEffect(() => {\n    const m = containerRef.current.getBoundingClientRect()\n    setMeasures(m)\n  }, [])\n\n  const childRef = useRef(null)\n\n  useImperativeHandle(ref, () => ({\n    rotateView: (cb) => {\n      childRef.current.rotateView(cb)\n      // const scaleY = scaleLinear()\n      //   .domain([0, racconti.length])\n      //   .range([0 + height, measures.height - height])\n\n      // const mainTransition = selectAll('.linea-container')\n      //   .transition()\n      //   .duration(1000)\n      //   .attr('transform', (d, i) => 'translate(0, ' + scaleY(i) + ')')\n      //   .end()\n\n      // const selectedTransition = selectAll('.linea-container-selected')\n      //   .transition()\n      //   .duration(1000)\n      //   .attr('transform', (d, i) => 'translate(0, ' + scaleY(i) + ')')\n      //   .end()\n\n      // Promise.all([mainTransition, selectedTransition]).then(cb)\n    },\n  }))\n\n  return (\n    <div\n      ref={containerRef}\n      className=\"w-100 h-100\"\n      style={{ overflow: 'hidden' }}\n    >\n      {measures && (\n        <LineeTramaWithMeasuresReffed\n          ref={childRef}\n          {...props}\n          measures={measures}\n        />\n      )}\n    </div>\n  )\n}\n\nexport default React.memo(forwardRef(LineeTrama))\n","import objectWithoutPropertiesLoose from \"./objectWithoutPropertiesLoose\";\nexport default function _objectWithoutProperties(source, excluded) {\n  if (source == null) return {};\n  var target = objectWithoutPropertiesLoose(source, excluded);\n  var key, i;\n\n  if (Object.getOwnPropertySymbols) {\n    var sourceSymbolKeys = Object.getOwnPropertySymbols(source);\n\n    for (i = 0; i < sourceSymbolKeys.length; i++) {\n      key = sourceSymbolKeys[i];\n      if (excluded.indexOf(key) >= 0) continue;\n      if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;\n      target[key] = source[key];\n    }\n  }\n\n  return target;\n}","export default function _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n\n  return target;\n}","import React from 'react'\n\nconst rad2 = Math.sqrt(2)\nconst points = [\n  [0, 50 * rad2],\n  [50 * (rad2 - 1), 50],\n  [50, 50],\n  [50, 50 * (rad2 - 1)],\n\n  [50 * rad2, 0],\n  [50, 50 * (1 - rad2)],\n  [50, -50],\n  [50 * (rad2 - 1), -50],\n  [0, -50 * rad2],\n\n  [50 * (1 - rad2), -50],\n  [-50, -50],\n  [-50, 50 * (1 - rad2)],\n  [-50 * rad2, 0],\n\n  [-50, 50 * (rad2 - 1)],\n  [-50, 50],\n  [50 * (1 - rad2), 50],\n  [0, 50 * rad2],\n]\n\nexport default function Star({ size, style, className, svgStyle, ...props }) {\n  const strokeWidth = (100 * rad2) / size\n\n  const move = `M ${points[0][0]} ${points[0][1]} L`\n  const lines = points.map(([x, y]) => `${x} ${y}`).join(' L ')\n  const d = move + lines\n  return (\n    <svg\n      style={svgStyle}\n      viewBox={`${-50 * rad2} ${-50 * rad2} ${100 * rad2} ${100 * rad2}`}\n      width={size}\n      height={size}\n      {...props}\n    >\n      <path\n        strokeWidth={strokeWidth}\n        stroke=\"#000\"\n        className={className}\n        style={style}\n        d={d}\n      />\n    </svg>\n  )\n}\n","import React from 'react'\n\nfunction BoxPlotGrandientsDefinitions({ prefix = '', gradientsType, byTipologia, scalaMotivo, height }) {\n\n  const colorsItems = Object.values(byTipologia).sort(item => +item.ordineMotivo)\n  const delta = 100 / (colorsItems.length - 1)\n\n  return (\n    <defs>\n      {gradientsType.map(({racconto, uniqueItems}) => {\n\n\n\n\n        const motivi = uniqueItems.map(item => item.motivo_type)\n\n\n        return (\n          <linearGradient\n            x1=\"0\"\n            x2=\"0\"\n            y1=\"0\"\n            y2={height}\n            key={racconto.titolo}\n            id={prefix + racconto.titolo}\n            gradientUnits={'userSpaceOnUse'}\n          >\n            {colorsItems.map((item, i) => {\n              if(motivi.indexOf(item.tipologia) === -1){\n                return null\n              }\n              return <stop key={i} offset={`${delta*i}%`} stopColor={item.colore.colori}>\n\n\n              </stop>\n            })}\n            {/* <stop offset=\"0%\" stopColor=\"#000\"></stop>\n            <stop offset=\"100%\" stopColor=\"#fff\"></stop> */}\n            {/* {+tipoFrom['ordine tipologia'] > +tipoTo['ordine tipologia'] && (\n              <>\n                <stop offset=\"0%\" stopColor={tipoFrom.colore.colori}></stop>\n                <stop offset=\"100%\" stopColor={tipoTo.colore.colori}></stop>\n              </>\n            )}\n            {+tipoFrom['ordine tipologia'] < +tipoTo['ordine tipologia'] && (\n              <>\n                <stop offset=\"0%\" stopColor={tipoTo.colore.colori}></stop>\n                <stop offset=\"100%\" stopColor={tipoFrom.colore.colori}></stop>\n              </>\n            )} */}\n          </linearGradient>\n        )\n      })}\n    </defs>\n  )\n}\n\nexport default React.memo(BoxPlotGrandientsDefinitions)\n","import ReactDOM from 'react-dom'\nimport React, {\n  useRef,\n  useState,\n  useMemo,\n  useCallback,\n  useEffect,\n  useLayoutEffect,\n  forwardRef,\n} from 'react'\nimport { scaleLinear, scaleTime } from 'd3-scale'\nimport { zoom } from 'd3-zoom'\nimport { select, selectAll, event as currentEvent } from 'd3-selection'\nimport { axisBottom } from 'd3-axis'\nimport Star from './Star'\n\nimport head from 'lodash/head'\nimport _last from 'lodash/last'\nimport uniqBy from 'lodash/uniqBy'\nimport minBy from 'lodash/minBy'\nimport maxBy from 'lodash/maxBy'\n\nimport { motivoExtent } from './utils'\nimport BoxPlotGradientsDefinitions from './BoxPlotGradientsDefinitions'\nimport Brush from './Brush'\n\nconst BASE_WIDTH_BAR = 5\n\nconst BoxPlotElement = React.memo(\n  ({\n    zoomFactor,\n    racconto,\n    data,\n    xScale,\n    width,\n    height,\n    index,\n    gradient,\n    itemSelected,\n    toggleItem,\n    yScale,\n    onRaccontoClick,\n    showBoxInOpacity,\n    onGlyphoClick,\n  }) => {\n    const handleClickRacconto = useCallback(\n      (e) => {\n        onRaccontoClick(data, e)\n      },\n      [onRaccontoClick, data]\n    )\n\n    const bottom = yScale(data.min.ordineMotivo)\n    const top = yScale(data.max.ordineMotivo)\n    const h = bottom - top\n\n    const fill = itemSelected ? `url(\"#${data.racconto.titolo}\")` : '#ddd'\n    const widthBar = BASE_WIDTH_BAR * zoomFactor\n\n    return (\n      <g>\n        {itemSelected && (\n          <text\n            style={{ transform: 'rotate(-30deg)', fontSize: 12 }}\n            x={0}\n            y={0}\n          >\n            {data.racconto.titolo}\n          </text>\n        )}\n        <rect\n          width={widthBar}\n          height={h}\n          y={top}\n          style={{ fill }}\n          onClick={() => toggleItem(data.racconto.titolo)}\n          stroke=\"#ccc\"\n          fillOpacity={0.6}\n        >\n          <title>{data.racconto.titolo}</title>\n        </rect>\n\n        {itemSelected && showBoxInOpacity && (\n          <g>\n            <rect\n              width={widthBar}\n              className=\"trama2-box-plot-partial-hide-bar\"\n              y={top}\n              height={\n                Math.min(\n                  yScale(data.first.ordineMotivo),\n                  yScale(data.last.ordineMotivo)\n                ) - top\n              }\n            />\n            <rect\n              width={widthBar}\n              className=\"trama2-box-plot-partial-hide-bar\"\n              y={Math.max(\n                yScale(data.first.ordineMotivo),\n                yScale(data.last.ordineMotivo)\n              )}\n              height={\n                bottom -\n                Math.max(\n                  yScale(data.first.ordineMotivo),\n                  yScale(data.last.ordineMotivo)\n                )\n              }\n            />\n          </g>\n        )}\n\n        {data.first.ordineMotivo === data.last.ordineMotivo ? (\n          <g\n            transform={`translate(${(widthBar * (1 - Math.sqrt(2))) / 2}, ${\n              yScale(data.first.ordineMotivo) - widthBar / 2\n            })`}\n          >\n            <Star\n              svgStyle={{ cursor: 'pointer' }}\n              onClick={onGlyphoClick}\n              size={widthBar * Math.sqrt(2)}\n              className=\"trama2-box-plot-same-start-end-symbol\"\n            />\n          </g>\n        ) : (\n          <g>\n            <rect\n              style={{\n                cursor: 'pointer',\n              }}\n              onClick={onGlyphoClick}\n              width={widthBar}\n              height={widthBar}\n              className=\"trama2-box-plot-start-symbol\"\n              y={yScale(data.first.ordineMotivo) - widthBar / 2}\n            ></rect>\n            <rect\n              onClick={onGlyphoClick}\n              width={widthBar}\n              height={widthBar}\n              className=\"trama2-box-plot-end-symbol\"\n              y={yScale(data.last.ordineMotivo) - widthBar / 2}\n              style={{\n                cursor: 'pointer',\n                transformOrigin: `0px ${\n                  yScale(data.last.ordineMotivo) + widthBar / 4\n                }px`,\n              }}\n            ></rect>\n          </g>\n        )}\n      </g>\n    )\n  }\n)\n\nfunction BoxPlot(\n  {\n    racconti = [],\n    data = {},\n    height,\n    scalaColore,\n    colors,\n    selected,\n    toggleSelect,\n    onRaccontoClick,\n    tipologie,\n    tipologieByTipologia,\n  },\n  ref\n) {\n  const containerRef = useRef(null)\n  const svgRef = useRef(null)\n  const xAxisContainer = useRef()\n  const [measures, setMeasures] = useState(null)\n  const [translations, setTranslations] = useState([])\n  const [zoomFactor, setZoomFactor] = useState(1)\n\n  const actualScaleX = useRef(null)\n\n  useLayoutEffect(() => {\n    const m = containerRef.current.getBoundingClientRect()\n    setMeasures(m)\n  }, [])\n\n  useEffect(() => {\n    function declarativeTranslate(currentScaleX) {\n      const newTranslates = racconti.map((r, i) => {\n        return 'translate(' + currentScaleX(i) + ', 0)'\n      })\n      setTranslations(newTranslates)\n    }\n\n    function imperativeTranslate(currentScaleX) {\n      selectAll('.box-racconto-container').attr(\n        'transform',\n        (d, i) => 'translate(' + currentScaleX(i) + ', 0)'\n      )\n    }\n\n    function formatAxisTick(i) {\n      return racconti[i].anno\n    }\n\n    // const maTicks = uniqBy(\n    //   racconti.map((r, i) => ({ ...r, index: i })),\n    //   'anno'\n    // ).map((r) => r.index)\n\n    if (measures) {\n      const svg = svgRef.current\n      const scaleX = scaleLinear()\n        .domain([0, racconti.length])\n        .range([10, measures.width - 10])\n\n      actualScaleX.current = scaleX\n      imperativeTranslate(scaleX)\n      // declarativeTranslate(scaleY)\n\n      function handleZoom() {\n        const newScaleX = currentEvent.transform.rescaleX(scaleX)\n        imperativeTranslate(newScaleX)\n        const zoomFactor = Math.round(currentEvent.transform.k / 2)\n\n        // const domain = newScaleX.domain()\n        // const lowIndex = Math.max(0, Math.floor(domain[0]))\n        // const hiIndex = Math.min(racconti.length - 1, Math.floor(domain[1]))\n        const batchUpdates = ReactDOM.unstable_batchedUpdates || ((cb) => cb())\n        batchUpdates(() => {\n          setZoomFactor(zoomFactor)\n          // setYears((prevYears) => {\n          //   const newYears = [racconti[lowIndex].anno, racconti[hiIndex].anno]\n          //   if (newYears[0] !== prevYears[0] || newYears[1] !== prevYears[1]) {\n          //     return newYears\n          //   }\n          //   return prevYears\n          // })\n        })\n        actualScaleX.current = newScaleX\n        // declarativeTranslate(newScaleX)\n\n        // AXIS Rescale...\n        const axis = axisBottom(newScaleX)\n        axis.tickFormat(formatAxisTick)\n        // axis.tickValues(maTicks)\n        select(xAxisContainer.current).call(axis)\n      }\n\n      const axis = axisBottom(scaleX)\n\n      axis.tickFormat(formatAxisTick)\n      // axis.tickValues(maTicks)\n      select(xAxisContainer.current).call(axis)\n\n      const selection = select(svg)\n      selection.call(\n        zoom()\n          .scaleExtent([1, 5])\n          .translateExtent([\n            [0, 0],\n            [measures.width, measures.height],\n          ])\n          .on('zoom', handleZoom)\n      )\n      return () => {\n        selection.on('.zoom', null)\n      }\n    }\n  }, [height, measures, racconti])\n\n  const yScale = useMemo(() => {\n    return scaleLinear()\n      .domain(motivoExtent)\n      .range([height - 140, 0])\n  }, [height])\n\n  const scalaMotivo = useMemo(() => {\n    return scaleLinear().domain(motivoExtent).range([0, 1])\n  }, [])\n\n  const [dataRacconti, dataByRacconti, gradientsType] = useMemo(() => {\n    if (!yScale) {\n      return [[], []]\n    }\n    const finalDataByRacconti = {}\n    const gradientsSet = new Set()\n    const finalDataRacconti = racconti.map((racconto, i) => {\n      let dataForRacconto = data[racconto.titolo]\n        .filter((d) => d.y !== undefined)\n        .map((d) => ({\n          ...d,\n          colori: tipologieByTipologia[d.motivo_type].colore.colori,\n        }))\n      let first = head(dataForRacconto)\n      let last = _last(dataForRacconto)\n      let uniqueItems = uniqBy(\n        dataForRacconto,\n        (item) => item.motivo_type\n      ).sort((item) => item.ordineMotivo)\n      let min = minBy(dataForRacconto, (item) => item.ordineMotivo)\n      let max = maxBy(dataForRacconto, (item) => item.ordineMotivo)\n\n      let out = {\n        racconto,\n        first,\n        last,\n        min,\n        max,\n        uniqueItems,\n        index: i,\n      }\n      finalDataByRacconti[racconto.titolo] = out\n      gradientsSet.add(out)\n\n      out.racconto = racconto\n\n      return out\n    })\n    return [finalDataRacconti, finalDataByRacconti, Array.from(gradientsSet)]\n  }, [data, racconti, tipologieByTipologia, yScale])\n\n  // const handleNexPoint = useCallback(\n  //   (x, setX) => {\n  //     const widthBar = 5 * zoomFactor\n  //     const scaleX = actualScaleX.current\n  //     const nextPoints = Object.keys(selected).reduce((acc, titolo) => {\n  //       const dataTrama = dataByRacconti[titolo]\n  //       const realX = scaleX(dataTrama.index)\n  //       if (realX > x - widthBar / 2) {\n  //         acc.push(realX)\n  //       }\n  //       return acc\n  //     }, [])\n  //     if (nextPoints.length) {\n  //       setX(Math.min(...nextPoints) + widthBar / 2)\n  //     }\n  //   },\n  //   [dataByRacconti, selected, zoomFactor]\n  // )\n\n  // const handlePrevPoint = useCallback(\n  //   (x, setX) => {\n  //     const widthBar = 10 * zoomFactor\n  //     const scaleX = actualScaleX.current\n  //     const nextPoints = Object.keys(selected).reduce((acc, titolo) => {\n  //       const dataTrama = dataByRacconti[titolo]\n  //       const realX = scaleX(dataTrama.index)\n  //       if (realX < x - widthBar / 2) {\n  //         acc.push(realX)\n  //       }\n  //       return acc\n  //     }, [])\n  //     if (nextPoints.length) {\n  //       console.log('PREV', nextPoints, x)\n  //       setX(Math.max(...nextPoints) + widthBar / 2)\n  //     }\n  //   },\n  //   [dataByRacconti, selected, zoomFactor]\n  // )\n\n  // const [years, setYears] = useState([\n  //   racconti[0].anno,\n  //   racconti[racconti.length - 1].anno,\n  // ])\n\n  const [showBoxInOpacity, setShowBoxInOpacity] = useState(false)\n  const toggleBoxInOpacity = useCallback(\n    () => setShowBoxInOpacity((a) => !a),\n    []\n  )\n\n  // const [enterInOpacity, setEnterInOpacity] = useState(true)\n  const enterInOpacity = true\n\n  useEffect(() => {\n    // setEnterInOpacity(true)\n    containerRef.current.style.transform = 'scaleY(0.1)'\n    containerRef.current.style.overflow = 'hidden'\n    const animationId = window.requestAnimationFrame(() => {\n      containerRef.current.style.transition = 'transform 1.5s linear'\n      containerRef.current.style.transform = 'scaleY(1)'\n    })\n    return () => {\n      window.cancelAnimationFrame(animationId)\n    }\n  }, [])\n\n  useEffect(() => {\n    if (measures) {\n      xAxisContainer.current.style.display = 'none'\n      const timeoutId = setTimeout(() => {\n        xAxisContainer.current.style.display = 'initial'\n      }, 1500)\n      return () => {\n        window.clearTimeout(timeoutId)\n      }\n    }\n  }, [measures])\n\n  return (\n    <div\n      className={`trama2-boxplot-content ${\n        enterInOpacity ? 'trama2-box-plot-enter-in-opacity' : ''\n      }`}\n    >\n      <div\n        ref={containerRef}\n        className=\"w-100 h-100\"\n        // style={{ overflow: 'hidden' }}\n      >\n        {measures && (\n          <svg\n            style={{\n              height: height,\n              width: measures.width,\n            }}\n            ref={svgRef}\n          >\n            <BoxPlotGradientsDefinitions\n              byTipologia={tipologieByTipologia}\n              gradientsType={gradientsType}\n              scalaMotivo={scalaMotivo}\n              height={height - 140}\n            />\n            <g className=\"wrapper\" style={{ transform: 'translate(0, 80px)' }}>\n              {measures &&\n                dataRacconti.map((datum, i) => {\n                  return (\n                    <g\n                      key={i}\n                      className=\"box-racconto-container\"\n                      style={{\n                        transform: translations[i],\n                      }}\n                    >\n                      <BoxPlotElement\n                        showBoxInOpacity={showBoxInOpacity}\n                        zoomFactor={zoomFactor}\n                        onRaccontoClick={onRaccontoClick}\n                        scalaColore={scalaColore}\n                        index={i}\n                        width={measures.width}\n                        height={measures.height}\n                        itemSelected={selected[racconti[i].titolo]}\n                        toggleItem={toggleSelect}\n                        racconto={racconti[i]}\n                        yScale={yScale}\n                        data={datum}\n                        onGlyphoClick={toggleBoxInOpacity}\n                      ></BoxPlotElement>\n                    </g>\n                  )\n                })}\n            </g>\n            <g\n              ref={xAxisContainer}\n              style={{\n                transform: `translateY(${height - 40}px)`,\n              }}\n            ></g>\n          </svg>\n        )}\n      </div>\n      {/* {measures && (\n        <Brush\n          className='trama2-brush-for-detail'\n          width={measures.width}\n          onNextClick={handleNexPoint}\n          onPrevClick={handlePrevPoint}\n        />\n      )} */}\n      {/* <div className=\"trama2-box-plot-year\">\n        <div>{years[0]}</div>\n        <div>Testi per ordine cronologico</div>\n        <div>{years[1]}</div>\n      </div> */}\n    </div>\n  )\n}\n\nexport default forwardRef(BoxPlot)\n","import React, { useMemo, useRef, useLayoutEffect, useState } from 'react'\nimport { line, curveMonotoneX } from 'd3-shape'\nimport { scaleLinear } from 'd3-scale'\nimport { makeScalaMotivoY, splitPath } from './utils'\nimport GradientsDefinitions from './GradientsDefinitions'\nimport MiniInfoBox from '../../general/MiniInfoBox'\nimport { groupBy, countBy, sortBy, orderBy, mapValues } from 'lodash'\n\nconst TRESHOLD_LABEL = 100\nfunction calculateLabelScore(data, i) {\n  let score = null\n  const datum = data[i]\n  for (let j = i + 1; j < data.length; j++) {\n    const lenX = Math.abs(data[j].x - datum.x)\n    const lenY = Math.abs(data[j].y - datum.y)\n    const len = Math.sqrt(lenX * lenX + lenY * lenY)\n\n    if (len < TRESHOLD_LABEL) {\n      if (score === null) {\n        score = parseInt(len)\n      } else {\n        score = Math.min(score, parseInt(TRESHOLD_LABEL - len))\n      }\n    }\n    if (lenX > TRESHOLD_LABEL) {\n      break\n    }\n  }\n  for (let j = i - 1; j >= 0; j--) {\n    const lenX = Math.abs(data[j].x - datum.x)\n    const lenY = Math.abs(data[j].y - datum.y)\n    const len = Math.sqrt(lenX * lenX + lenY * lenY)\n\n    if (len < TRESHOLD_LABEL) {\n      if (score === null) {\n        score = parseInt(len)\n      } else {\n        score = Math.min(score, parseInt(TRESHOLD_LABEL - len))\n      }\n    }\n    if (lenX > TRESHOLD_LABEL) {\n      break\n    }\n  }\n  return score\n}\n\nconst CHART_X_PADDING = 50\n\nconst lineGenerator = line()\n  .x((d) => d.x)\n  .y((d) => d.y)\n  .curve(curveMonotoneX)\n\nexport default function TramaDetail({\n  data,\n  tipologieByTipologia,\n  onBack,\n  detailHeight,\n}) {\n  const [measures, setMeasures] = useState(null)\n\n  useLayoutEffect(() => {\n    const m = containerRef.current.getBoundingClientRect()\n    setMeasures(m)\n  }, [])\n\n  const scalaMotivoY = useMemo(() => {\n    return makeScalaMotivoY(detailHeight)\n  }, [detailHeight])\n\n  const xScale = useMemo(() => {\n    if (!measures) {\n      return null\n    }\n    return scaleLinear()\n      .domain([0, 1])\n      .range([CHART_X_PADDING, measures.width - CHART_X_PADDING])\n  }, [measures])\n\n  // Re-Scale X, Y for fullscreen\n  const [fullData, subPaths, gradientsType] = useMemo(() => {\n    if (!xScale) {\n      return [null, null, null]\n    }\n    const gradientsSet = new Set()\n    const newData = data.reduce((acc, item, i) => {\n      if (i > 0) {\n        gradientsSet.add(item.motivo_type + '-' + acc[i - 1].motivo_type)\n      }\n      acc.push({\n        ...item,\n        x: xScale(item.originalX),\n        y: scalaMotivoY(item.ordineMotivo),\n      })\n      return acc\n    }, [])\n    const d = lineGenerator(newData)\n    const subPaths = splitPath(d)\n    return [newData, subPaths, Array.from(gradientsSet)]\n  }, [data, scalaMotivoY, xScale])\n  const containerRef = useRef(null)\n\n  const raccontiIncastonati = useMemo(() => {\n    if (!fullData) {\n      return null\n    }\n\n    const inkMap = groupBy(\n      fullData.filter((x) => x['racconto incastonato']),\n      'racconto incastonato'\n    )\n    return Object.keys(inkMap).map((key) => {\n      const racconti = inkMap[key]\n      const minX = Math.min(...racconti.map((d) => d.x))\n      const maxX = Math.max(...racconti.map((d) => d.x))\n      const inkY = scalaMotivoY(\n        +tipologieByTipologia['racconto incastonato']['ordine tipologia']\n      )\n      return {\n        key,\n        startY: racconti[0].y,\n        endY: racconti[racconti.length - 1].y,\n        x1: minX,\n        x2: maxX,\n        y: inkY,\n      }\n    })\n  }, [fullData, scalaMotivoY, tipologieByTipologia])\n\n  const labelsData = useMemo(() => {\n    if (fullData === null) {\n      return null\n    }\n    // const countData = countBy(fullData, (x) => x.motivo_type)\n    // const maxCount = Math.max(...Object.values(countData))\n\n    const dataWithScore = fullData.map((labelData, i) => ({\n      ...labelData,\n      // score: parseInt(\n      //   (calculateLabelScore(fullData, i) * countData[labelData.motivo_type]) /\n      //     maxCount\n      // ),\n      score: calculateLabelScore(fullData, i),\n    }))\n\n    const byTypeWithScore = dataWithScore.reduce(\n      (acc, datum, i) => ({\n        ...acc,\n        [datum.motivo_type]: orderBy(\n          [{ datum, score: datum.score, i }].concat(\n            acc[datum.motivo_type] ?? []\n          ),\n          'score',\n          'desc'\n        ),\n      }),\n      []\n    )\n\n    const keepByType = mapValues(byTypeWithScore, (dataWithScore) => {\n      const keep = [...dataWithScore]\n      dataWithScore.forEach((datum, i) => {\n        if (datum.score !== null && datum.score < 50 && keep.length > 1) {\n          keep.splice(keep.indexOf(datum), 1)\n        }\n      })\n      return keep\n    })\n\n    const finalLabels = [...dataWithScore]\n    Object.keys(keepByType).forEach((key) => {\n      const keep = keepByType[key]\n      keep.forEach((datum) => {\n        finalLabels[datum.i] = {\n          ...finalLabels[datum.i],\n          keepLabel: true,\n        }\n      })\n    })\n\n    return finalLabels\n  }, [fullData])\n\n  const [hoverMotivo, setHoverMotivo] = useState(null)\n\n  return (\n    <div className=\"trama2-detail-content\">\n      <div className=\"trama2-detail-header d-flex justify-content-center align-items-center\">\n        <MiniInfoBox onClose={onBack}>\n          {data.racconto.titolo}, {data.racconto.anno}\n        </MiniInfoBox>\n      </div>\n\n      <div\n        ref={containerRef}\n        className=\"w-100 h-100\"\n        style={{ overflow: 'hidden' }}\n      >\n        {measures && (\n          <svg\n            style={{\n              height: detailHeight + 100,\n              width: measures.width,\n            }}\n          >\n            <GradientsDefinitions\n              prefix=\"detail__\"\n              byTipologia={tipologieByTipologia}\n              gradientsType={gradientsType}\n            />\n            <g transform={`translate(0, 80)`}>\n              {/* <defs>\n                <linearGradient\n                  id=\"racconto-incastonato-gradient\"\n                  x1=\"0%\"\n                  y1=\"0%\"\n                  x2=\"0%\"\n                  y2=\"100%\"\n                >\n                  <stop offset=\"0%\" stop-color=\"#F3F3F3\" />\n                  <stop offset=\"50%\" stop-color=\"#dadada\" />\n                  <stop offset=\"100%\" stop-color=\"#F3F3F3\" />\n                </linearGradient>\n              </defs> */}\n              {raccontiIncastonati &&\n                raccontiIncastonati.map((racconto) => (\n                  <g key={racconto.key}>\n                    <rect\n                      y={0}\n                      height={racconto.y}\n                      className=\"trama2-racconto-incastonato-rect\"\n                      x={racconto.x1}\n                      width={racconto.x2 - racconto.x1}\n                    />\n                    {/* <line\n                      className=\"trama2-racconto-incastonato-line\"\n                      x1={racconto.x1}\n                      x2={racconto.x2}\n                      y1={racconto.y}\n                      y2={racconto.y}\n                    />\n                    <line\n                      className=\"trama2-racconto-incastonato-step-line\"\n                      x1={racconto.x1}\n                      x2={racconto.x1}\n                      y1={racconto.startY}\n                      y2={racconto.y}\n                    />\n                    <line\n                      className=\"trama2-racconto-incastonato-step-line\"\n                      x1={racconto.x2}\n                      x2={racconto.x2}\n                      y1={racconto.endY}\n                      y2={racconto.y}\n                    /> */}\n                  </g>\n                ))}\n              {subPaths.map((subPath, i) => {\n                const isFill = data[i + 1].motivo_type === data[i].motivo_type\n                const stroke = isFill\n                  ? data[i].colori\n                  : `url('#detail__${data[i + 1].motivo_type}-${\n                      data[i].motivo_type\n                    }')`\n                return (\n                  <path\n                    key={i}\n                    d={subPath}\n                    className=\"trama2-line\"\n                    stroke={stroke}\n                    fill=\"transparent\"\n\n                    // style={{\n                    //   // stroke: stroke,\n                    //   // fill: 'none',\n                    // }}\n                  ></path>\n                )\n              })}\n              <g>\n                {labelsData.map((d, i) => {\n                  let element\n                  if (i === 0) {\n                    element = (\n                      <rect x={0} y={0} className=\"trama2-start-symbol\" />\n                    )\n                  } else if (i === data.length - 1) {\n                    element = <rect x={0} y={1} className=\"trama2-end-symbol\" />\n                  } else {\n                    element = <circle className=\"trama2-circle\" r={2} />\n                  }\n                  return (\n                    <g\n                      className={`trama2-label-container ${\n                        hoverMotivo === d.motivo_type\n                          ? 'trama2-label-hover'\n                          : hoverMotivo === null\n                          ? ''\n                          : 'trama2-label-not-hover'\n                      }`}\n                      onMouseEnter={() => setHoverMotivo(d.motivo_type)}\n                      onMouseLeave={() => setHoverMotivo(null)}\n                      key={i}\n                      transform={`translate(${d.x}, ${d.y})`}\n                    >\n                      {element}\n                      {d.keepLabel === true && (\n                        <text\n                          x={5}\n                          y={-5}\n                          style={{ transform: 'rotate(-30deg)' }}\n                        >\n                          {d.motivo_type}\n                        </text>\n                      )}\n                    </g>\n                  )\n                })}\n              </g>\n            </g>\n          </svg>\n        )}\n      </div>\n    </div>\n  )\n}\n","import React, { useMemo, useState, useEffect } from 'react'\nimport keyBy from 'lodash/keyBy'\nimport groupBy from 'lodash/groupBy'\nimport find from 'lodash/find'\nimport orderBy from 'lodash/orderBy'\nimport uniq from 'lodash/uniq'\n\nconst SideBarItem = React.memo(\n  ({\n    tipologia,\n    addBound,\n    disabled,\n    selected,\n    fromDarkItem,\n    itemHeight,\n    disableEvents = false,\n    left,\n  }) => (\n    <div\n      key={tipologia.tipologia}\n      onClick={() => addBound(tipologia.tipologia)}\n      className={`trama2-sidebar-item\n        ${disabled ? 'disabled' : ''}\n        ${\n          fromDarkItem >= Number(tipologia['ordine tipologia'])\n            ? 'item-dark'\n            : 'item-light'\n        }\n        ${disableEvents ? 'no-pointer-events' : ''}\n        ${selected ? 'selected' : ''}`}\n      style={{\n        paddingLeft: left,\n        height: itemHeight,\n        background: selected ? tipologia.colore.colori : undefined,\n      }}\n    >\n      {tipologia.tipologia}\n    </div>\n  )\n)\n\nfunction useWindowWidth() {\n  const [width, setWidth] = useState(window.outerWidth)\n\n  useEffect(() => {\n    function setCurrentWidth() {\n      setWidth(window.outerWidth)\n    }\n    window.addEventListener('resize', setCurrentWidth)\n    return () => {\n      window.removeEventListener('resize', setCurrentWidth)\n    }\n  }, [])\n\n  return width\n}\n\nfunction SideBar({\n  tipologie,\n  racconti,\n  height,\n  bounds,\n  addBound,\n  setBounds,\n  tramaDetail,\n}) {\n  const boundsByKey = keyBy(bounds)\n\n  const itemHeight = height / tipologie.length\n\n  const windowWidth = useWindowWidth()\n  const leftAsMyNavGridIs = windowWidth / 24\n\n  const lookupMap = useMemo(() => {\n    return racconti.reduce(\n      (looks, racconto) => {\n        const min = racconto.minDatum.motivo_type\n        const max = racconto.maxDatum.motivo_type\n        looks[min] = looks[min] || {}\n        looks[max] = looks[max] || {}\n        looks[min][max] = true\n        looks[max][min] = true\n        return looks\n      },\n      [{}]\n    )\n  }, [racconti])\n  let lookup = null\n  if (bounds.length === 1) {\n    lookup = lookupMap[bounds[0]]\n  }\n\n  const tipologieGrouped = useMemo(() => {\n    return groupBy(tipologie, 'cluster tipologia')\n  }, [tipologie])\n\n  const fromDarkItem = useMemo(() => {\n    return (\n      find(tipologie, { tipologia: 'visione' })?.['ordine tipologia'] ??\n      -Infinity\n    )\n  }, [tipologie])\n\n  const motiviDetail = useMemo(() => {\n    if (tramaDetail) {\n      return uniq(\n        orderBy(tramaDetail, 'ordineMotivo', 'desc').map((x) => x.motivo_type)\n      )\n    }\n    return null\n  }, [tramaDetail])\n\n  return (\n    <div className=\"trama2-sidebar\">\n      <div className=\"trama2-sidebar-header\" style={{\n        paddingLeft: leftAsMyNavGridIs,\n      }}>\n        Ordine <br />\n        di turbamento\n      </div>\n      {Object.keys(tipologieGrouped).map((k) => {\n        const tipologie = tipologieGrouped[k]\n        return (\n          <div className=\"trama2-sidebar-content\" key={k}>\n            {tipologie.map((tipologia) => {\n              let disabled\n              let selected\n              if (motiviDetail) {\n                disabled = motiviDetail.indexOf(tipologia.tipologia) === -1\n                selected =\n                  motiviDetail[0] === tipologia.tipologia ||\n                  motiviDetail[motiviDetail.length - 1] === tipologia.tipologia\n              } else {\n                disabled =\n                  lookup !== null &&\n                  tipologia.tipologia !== bounds[0] &&\n                  (!lookup || !lookup[tipologia.tipologia])\n                selected = !!boundsByKey[tipologia.tipologia]\n              }\n              return (\n                <SideBarItem\n                  key={tipologia.tipologia}\n                  disableEvents={!!motiviDetail}\n                  tipologia={tipologia}\n                  addBound={addBound}\n                  disabled={disabled}\n                  selected={selected}\n                  itemHeight={itemHeight}\n                  fromDarkItem={fromDarkItem}\n                  left={leftAsMyNavGridIs}\n                />\n              )\n            })}\n          </div>\n        )\n      })}\n      <div className=\"trama2-sidebar-footer\" style={{\n        paddingLeft: leftAsMyNavGridIs,\n      }}>\n        Clicca per scegliere il <br />\n        punto più alto e più basso\n        <br />\n        delle curve\n      </div>\n      {/* <div>\n        {bounds.length > 0 && (\n          <span\n            onClick={() => {\n              setBounds([])\n            }}\n          >\n            Clear\n          </span>\n        )}\n      </div> */}\n    </div>\n  )\n}\n\nexport default React.memo(SideBar)\n","import React, {\n  useLayoutEffect,\n  useState,\n  useCallback,\n  useEffect,\n  useRef,\n  createContext,\n} from 'react'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faAngleDoubleRight } from '@fortawesome/free-solid-svg-icons'\n\n//data management\nimport keyBy from 'lodash/keyBy'\nimport sortBy from 'lodash/sortBy'\n\n//data helpers\nimport { MOTIVO_LINE_HEIGHT } from './utils'\n\n//local components\nimport LineeTrama from './LineeTrama'\nimport BoxPlot from './BoxPlot'\nimport TramaDetail from './TramaDetail'\nimport SideBar from './SideBar'\n\nexport const CurretTramaViewContext = createContext('list')\n\n// main component\nexport default function Trama2Content({\n  scalaMotivoY,\n  tipologie,\n  tipologieByTipologia,\n  colors,\n  racconti,\n  byRacconto,\n  selected,\n  toggleSelect,\n  setSelected,\n}) {\n  const [sidePanelOpen, setSidePanelOpen] = useState(false)\n  const toggleSidePanel = useCallback(() => {\n    setSidePanelOpen(!sidePanelOpen)\n  }, [sidePanelOpen])\n\n  const containerRef = useRef()\n  const [measures, setMeasures] = useState(null)\n  useLayoutEffect(() => {\n    const m = containerRef.current.getBoundingClientRect()\n    setMeasures(m)\n  }, [])\n\n  //bounds selection\n  const [bounds, setBounds] = useState([])\n  const addBound = useCallback(\n    (item) => {\n      if (bounds.length === 1 && bounds[0] === item) {\n        setBounds([])\n        return\n      }\n      if (bounds.length < 2) {\n        setBounds(bounds.concat([item]))\n      } else {\n        setBounds([item])\n      }\n    },\n    [bounds]\n  )\n\n  useEffect(() => {\n    if (bounds.length === 2) {\n      const orderedBounds = sortBy(\n        bounds,\n        (bound) => +tipologieByTipologia[bound]['ordine tipologia']\n      )\n      const indexes = racconti.reduce((acc, racconto, indenx) => {\n        if (\n          racconto.minDatum.motivo_type === orderedBounds[0] &&\n          racconto.maxDatum.motivo_type === orderedBounds[1]\n        ) {\n          acc.push(racconto.titolo)\n        }\n        return acc\n      }, [])\n\n      const sel = keyBy(indexes)\n      setSelected(sel, true)\n    }\n  }, [bounds, racconti, setSelected, tipologieByTipologia])\n\n  useEffect(() => {\n    if (\n      Object.keys(selected).some((key) => selected[key].fromBounds === false)\n    ) {\n      setBounds([])\n    }\n  }, [selected])\n\n  const listRef = useRef()\n  const [currentView, setCurrentView] = useState('list')\n  const [currentTramaDetail, setCurrentTramaDetail] = useState(null)\n\n  const handleClickRacconto = useCallback((data) => {\n    setCurrentTramaDetail(data)\n    setCurrentView('detail')\n  }, [])\n\n  const [years, setYears] = useState([\n    racconti[0].anno,\n    racconti[racconti.length - 1].anno,\n  ])\n\n  return (\n    <div className=\"trama2-container\" ref={containerRef}>\n      <div className={`trama2-side-panel ${sidePanelOpen ? 'open' : 'closed'}`}>\n        <div className=\"trama2-side-panel-content\">\n          {measures && (\n            <SideBar\n              tramaDetail={currentTramaDetail}\n              racconti={racconti}\n              height={measures.height - 140}\n              tipologie={tipologie}\n              bounds={bounds}\n              addBound={addBound}\n              setBounds={setBounds}\n            ></SideBar>\n          )}\n        </div>\n\n        <div\n          className={`trama2-side-panel-toggle ${\n            sidePanelOpen ? 'open-panel' : ''\n          }`}\n          onClick={toggleSidePanel}\n        >\n          <FontAwesomeIcon icon={faAngleDoubleRight} />\n        </div>\n\n        {currentView !== 'detail' && (\n          <div\n            className=\"trama2-side-panel-rotate\"\n            onClick={() => {\n              if (currentView === 'list') {\n                listRef.current.rotateView(() => {\n                  setCurrentView('boxplot')\n                })\n              } else {\n                setCurrentView('list')\n              }\n            }}\n          >\n            Routa la vista\n          </div>\n        )}\n      </div>\n      <div className=\"trama2-content-wrapper\">\n        {currentView === 'list' && (\n          <>\n            <div\n              style={{\n                position: 'absolute',\n                top: 80 + MOTIVO_LINE_HEIGHT,\n                borderBottom: 'solid #bbb 1px',\n              }}\n            >\n              {years[0]}\n            </div>\n            <div\n              style={{\n                position: 'absolute',\n                bottom: MOTIVO_LINE_HEIGHT + 30,\n                borderBottom: 'solid #bbb 1px',\n              }}\n            >\n              {years[1]}\n            </div>\n          </>\n        )}\n\n        <CurretTramaViewContext.Provider value={currentView}>\n          <div\n            className=\"trama2-content\"\n            style={{ display: currentView !== 'list' ? 'none' : undefined }}\n          >\n            <LineeTrama\n              onRaccontoClick={handleClickRacconto}\n              ref={listRef}\n              selected={selected}\n              toggleSelect={toggleSelect}\n              racconti={racconti}\n              tipologie={tipologie}\n              tipologieByTipologia={tipologieByTipologia}\n              data={byRacconto}\n              height={MOTIVO_LINE_HEIGHT}\n              scalaMotivoY={scalaMotivoY}\n              colors={colors}\n              setYears={setYears}\n            ></LineeTrama>\n          </div>\n\n          {currentView === 'boxplot' && measures && (\n            <BoxPlot\n              onRaccontoClick={handleClickRacconto}\n              ref={listRef}\n              selected={selected}\n              toggleSelect={toggleSelect}\n              racconti={racconti}\n              tipologie={tipologie}\n              tipologieByTipologia={tipologieByTipologia}\n              data={byRacconto}\n              height={measures.height}\n              scalaMotivoY={scalaMotivoY}\n              colors={colors}\n            ></BoxPlot>\n          )}\n          {currentView === 'detail' && measures && (\n            <TramaDetail\n              tipologieByTipologia={tipologieByTipologia}\n              detailHeight={measures.height - 140}\n              data={currentTramaDetail}\n              onBack={() => {\n                setCurrentTramaDetail(null)\n                setCurrentView('list')\n              }}\n            />\n          )}\n        </CurretTramaViewContext.Provider>\n      </div>\n    </div>\n  )\n}\n","import React, { useCallback, useState, useMemo, useEffect } from 'react'\nimport MainMenu from '../../general/MainMenu'\nimport PageTitle from '../../general/PageTitle'\nimport MoreInfo from '../../general/MoreInfo'\nimport CompassButton from '../../general/CompassButton/CompassButton'\nimport SearchDropDown from '../../general/Search/SearchDropDownControlled'\nimport HelpSidePanel from '../../panels/HelpSidePanel/HelpSidePanel'\n\nimport AltOptions from '../../general/Options/AltOptions'\nimport GlobalData from '../../utilities/GlobalData'\nimport Trama2Content from './Trama2Content'\nimport { makeScalaMotivoY, makeVizData, MOTIVO_LINE_HEIGHT } from './utils'\nimport keyBy from 'lodash/keyBy'\nimport './Trama2.css'\n\n// SCALES\nconst scalaMotivoY = makeScalaMotivoY(MOTIVO_LINE_HEIGHT)\n\n// GLOBAL DATA\nconst {\n  tipologie,\n  tipologieByTipologia,\n  colors,\n  racconti,\n  byRacconto,\n} = makeVizData(scalaMotivoY)\n\n// we leverage react lazy+suspense to load core component at first render (it will load all json by importing it)\n\nconst searchOptions = racconti.map((racconto) => ({\n  label: racconto.titolo,\n  value: racconto.titolo,\n}))\n\nconst cercaOptions = [{ label: 'Titolo' }]\n\nfunction Trama2Main({ title }) {\n  const [helpSidePanelOpen, setHelpSidePanelOpen] = useState(false)\n  const [ricerca, setRicerca] = useState([])\n\n  const toggleHelpSidePanel = useCallback(() => {\n    setHelpSidePanelOpen((a) => !a)\n  }, [])\n\n  const helpPage = GlobalData.helpPages.plot.main\n\n  const setSelected = useCallback((selection, fromBounds = false) => {\n    const newRicerca = Object.keys(selection).map((titolo) => ({\n      label: titolo,\n      value: titolo,\n      fromBounds,\n    }))\n    setRicerca(newRicerca)\n  }, [])\n\n  const toggleSelect = useCallback((titolo) => {\n    setRicerca((ricerca) => {\n      let clearedBounds = false\n      const newRicerca = ricerca.filter((item) => {\n        // Remove from bounds items\n        if (item.fromBounds === true) {\n          clearedBounds = true\n          return false\n        }\n        return item.label !== titolo\n      })\n      if (newRicerca.length < ricerca.length && !clearedBounds) {\n        return newRicerca\n      } else {\n        return newRicerca.concat({ label: titolo, value: titolo })\n      }\n    })\n  }, [])\n  const selected = useMemo(() => {\n    return keyBy(\n      ricerca.map((item) => ({\n        value: item.value,\n        fromBounds: item.fromBounds === undefined ? false : item.fromBounds,\n      })),\n      'value'\n    )\n  }, [ricerca])\n\n  return (\n    <div className=\"trasformare main\">\n      <HelpSidePanel\n        open={helpSidePanelOpen}\n        page={helpPage}\n        closeButtonClicked={toggleHelpSidePanel}\n      />\n\n      <div className=\"top-nav navigations\">\n        <MainMenu className=\"main-menu\" style={{ gridColumn: 'span 1' }} />\n        <PageTitle title={title} style={{ gridColumn: 'span 10' }} />\n\n        <AltOptions\n          title=\"Cerca per\"\n          options={cercaOptions}\n          disabled={true}\n          value={'Titolo'}\n          onChange={(x) => {}}\n          style={{\n            gridColumn: 'span 3',\n          }}\n        />\n\n        <SearchDropDown\n          style={{\n            gridColumn: 'span 8',\n          }}\n          data={{ options: searchOptions }}\n          changeOptions={(newOptions) => {\n            setRicerca(\n              newOptions.map((o) => ({\n                ...o,\n                fromBounds: false,\n              }))\n            )\n          }}\n          selectedOptions={ricerca}\n        />\n\n        <MoreInfo\n          style={{ gridColumn: 'span 1' }}\n          onClicked={toggleHelpSidePanel}\n        />\n        <CompassButton\n          style={{\n            gridColumn: 'span 1',\n            color: 'white',\n            backgroundColor: 'black',\n          }}\n        />\n      </div>\n\n      <Trama2Content\n        scalaMotivoY={scalaMotivoY}\n        tipologie={tipologie}\n        tipologieByTipologia={tipologieByTipologia}\n        colors={colors}\n        racconti={racconti}\n        byRacconto={byRacconto}\n        selected={selected}\n        setSelected={setSelected}\n        toggleSelect={toggleSelect}\n      ></Trama2Content>\n    </div>\n  )\n}\n\nexport default Trama2Main\n"],"sourceRoot":""}